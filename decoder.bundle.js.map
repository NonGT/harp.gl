{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///../@here/harp-datasource-protocol/lib/Expr.ts","webpack:///../@here/harp-utils/index.web.ts","webpack:///../@here/harp-datasource-protocol/index.ts","webpack:///../@here/harp-geoutils/index.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack:///../@here/harp-geoutils/lib/math/MathUtils.ts","webpack:///../node_modules/protobufjs/src/util/minimal.js","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedProperty.ts","webpack:///../@here/harp-geoutils/lib/math/Box3Like.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3Like.ts","webpack:///../@here/harp-geoutils/lib/projection/Projection.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBox.ts","webpack:///../@here/harp-geoutils/lib/projection/EarthConstants.ts","webpack:///../@here/harp-geoutils/lib/tiling/TilingScheme.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoderDefs.ts","webpack:///../@here/harp-datasource-protocol/lib/ColorUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack:///../@here/harp-geoutils/lib/projection/MercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKey.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerService.ts","webpack:///../@here/harp-omv-datasource/lib/OmvUtils.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoder.ts","webpack:///../@here/harp-utils/lib/Logger/ILogger.ts","webpack:///../@here/harp-utils/lib/UrlUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack:///../@here/harp-datasource-protocol/lib/Theme.ts","webpack:///../@here/harp-datasource-protocol/lib/Techniques.ts","webpack:///../@here/harp-datasource-protocol/index-decoder.ts","webpack:///../@here/harp-utils/lib/Logger/ConsoleChannel.ts","webpack:///../@here/harp-utils/lib/Logger/Logger.ts","webpack:///../@here/harp-utils/lib/Logger/WorkerChannel.ts","webpack:///../@here/harp-datasource-protocol/lib/Env.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueParams.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueDescriptor.ts","webpack:///../@here/harp-datasource-protocol/lib/DecodedTile.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/LatLngLike.ts","webpack:///../@here/harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack:///../@here/harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/SubTiles.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack:///../@here/harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueAttr.ts","webpack:///../@here/harp-mapview-decoder/index-worker.ts","webpack:///../@here/harp-mapview-decoder/lib/GeoJsonTiler.ts","webpack:///../@here/harp-omv-datasource/lib/VTJsonDataAdapter.ts","webpack:///../node_modules/protobufjs/src/writer.js","webpack:///../node_modules/protobufjs/src/reader.js","webpack:///../@here/harp-omv-datasource/lib/OmvDataFilter.ts","webpack:///./src/decoder.ts","webpack:///../@here/harp-omv-datasource/index-worker.ts","webpack:///../@here/harp-utils/index-common.ts","webpack:///../@here/harp-utils/lib/GroupedPriorityList.ts","webpack:///../@here/harp-utils/lib/Logger/index.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManager.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack:///../@here/harp-utils/lib/Logger/MultiChannel.ts","webpack:///../@here/harp-utils/lib/Math2D.ts","webpack:///../@here/harp-utils/lib/MathUtils.ts","webpack:///../@here/harp-utils/lib/Mixins.ts","webpack:///../@here/harp-utils/lib/assert.ts","webpack:///../@here/harp-utils/lib/ContextLogger.ts","webpack:///../@here/harp-utils/lib/PerformanceTimer.ts","webpack:///../@here/harp-utils/lib/ObjectUtils.ts","webpack:///../@here/harp-utils/lib/OptionsUtils.ts","webpack:///../@here/harp-utils/lib/UriResolver.ts","webpack:///../@here/harp-utils/lib/Functions.ts","webpack:///../@here/harp-utils/lib/UrlPlatformUtils.web.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/CastOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/InterpolationOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExponentialInterpolant.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MapOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MathOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/StringOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprInstantiator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprParser.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack:///../@here/harp-geoutils/lib/projection/IdentityProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/SphereProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTree.ts","webpack:///../@here/harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/math/Vector3Like.ts","webpack:///../@here/harp-geoutils/lib/math/TransformLike.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3.ts","webpack:///../@here/harp-datasource-protocol/lib/TileInfo.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprPool.ts","webpack:///../@here/harp-datasource-protocol/lib/ThemeVisitor.ts","webpack:///../@here/harp-mapview-decoder/lib/ThemedTileDecoder.ts","webpack:///../@here/harp-datasource-protocol/lib/Extruder.ts","webpack:///../@here/harp-datasource-protocol/lib/Outliner.ts","webpack:///../@here/harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack:///../@here/harp-mapview-decoder/lib/TileDecoderService.ts","webpack:///../@here/harp-mapview-decoder/lib/TilerService.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerServiceManager.ts","webpack:///../@here/harp-omv-datasource/lib/OmvData.ts","webpack:///../node_modules/long/src/long.js","webpack:///../@here/harp-omv-datasource/lib/proto/vector_tile.js","webpack:///../node_modules/protobufjs/minimal.js","webpack:///../node_modules/protobufjs/src/index-minimal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/@protobufjs/aspromise/index.js","webpack:///../node_modules/@protobufjs/base64/index.js","webpack:///../node_modules/@protobufjs/eventemitter/index.js","webpack:///../node_modules/@protobufjs/float/index.js","webpack:///../node_modules/@protobufjs/inquire/index.js","webpack:///../node_modules/@protobufjs/utf8/index.js","webpack:///../node_modules/@protobufjs/pool/index.js","webpack:///../node_modules/protobufjs/src/util/longbits.js","webpack:///../node_modules/protobufjs/src/writer_buffer.js","webpack:///../node_modules/protobufjs/src/reader_buffer.js","webpack:///../node_modules/protobufjs/src/rpc.js","webpack:///../node_modules/protobufjs/src/rpc/service.js","webpack:///../node_modules/protobufjs/src/roots.js","webpack:///../@here/harp-omv-datasource/lib/OmvDecodedTileEmitter.ts","webpack:///../@here/harp-lines/lib/Lines.ts","webpack:///../@here/harp-lines/lib/TriangulateLines.ts","webpack:///../node_modules/earcut/src/earcut.js","webpack:///../@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack:///../@here/harp-geometry/lib/SubdivisionModifier.ts","webpack:///../@here/harp-materials/lib/MapMeshMaterialsDefs.ts","webpack:///../@here/harp-omv-datasource/lib/clipPolygon.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTileInfoEmitter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTomTomFeatureModifier.ts","webpack:///../@here/harp-omv-datasource/lib/StyleSetDataFilter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTiler.ts","webpack:///../node_modules/geojson-vt/src/simplify.js","webpack:///../node_modules/geojson-vt/src/feature.js","webpack:///../node_modules/geojson-vt/src/convert.js","webpack:///../node_modules/geojson-vt/src/clip.js","webpack:///../node_modules/geojson-vt/src/wrap.js","webpack:///../node_modules/geojson-vt/src/transform.js","webpack:///../node_modules/geojson-vt/src/tile.js","webpack:///../node_modules/geojson-vt/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","exprEvaluator","ExprEvaluator","exprInstantiator","ExprInstantiator","ExprDependencies","properties","Set","ComputeExprDependencies","expr","dependencies","accept","this","instance","context","add","op","args","length","zoom","forEach","childExpr","branches","_","branch","fallback","condition","isJsonExpr","v","Array","isArray","ExprScope","Expr","code","ExprParser","parse","node","definitions","definitionExprCache","parseNode","undefined","lockedNames","cache","Map","env","scope","Value","ExprEvaluatorContext","m_dependencies","of","pool","ExprSerializer","serialize","m_isDynamic","exprIsDynamic","VarExpr","super","visitor","visitVarExpr","LiteralExpr","BooleanLiteralExpr","NumberLiteralExpr","StringLiteralExpr","NullLiteralExpr","ObjectLiteralExpr","Error","visitNullLiteralExpr","visitBooleanLiteralExpr","visitNumberLiteralExpr","visitStringLiteralExpr","visitObjectLiteralExpr","HasAttributeExpr","visitHasAttributeExpr","ContainsExpr","elements","elementTy","every","element","visitContainsExpr","isDynamic","CallExpr","visitCallExpr","descriptor","getOperator","isDynamicOperator","some","e","MatchExpr","visitMatchExpr","CaseExpr","visitCaseExpr","cond","map","label","body","push","referenceResolverState","parseCall","slice","has","cachedEntry","result","definitionEntry","isLiteralDefinition","fromJSON","isBoxedDefinition","isInterpolatedPropertyDefinition","interpolatedPropertyDefinitionToJsonExpr","delete","set","resolveReference","makeCallExpr","parseGetExpr","parseHasExpr","isValidElementsArray","parseInExpr","obj","parseLiteralExpr","conditions","isValidMatchLabel","JSON","stringify","parseMatchExpr","caseFallback","parseCaseExpr","GeoCoordinates","latitude","longitude","altitude","Math","radToDeg","latLng","lat","lng","geoPoint","isGeoPointLike","fromGeoPoint","isGeoCoordinatesLike","fromDegrees","isLatLngLike","degToRad","isNaN","wrapped","sign","other","MathUtils","normalizeAngleDeg","a","angleDistanceDeg","b","newEmptyBox3","min","x","Infinity","y","z","max","newVector3","clamp","interpolateAnglesDeg","p0","p1","util","merge","dst","src","ifNotSet","keys","newError","CustomError","message","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","inquire","utf8","LongBits","global","window","self","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","isInteger","Number","isFinite","floor","isString","String","isObject","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","str","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","logger","LoggerManager","interpolants","DiscreteInterpolant","LinearInterpolant","CubicInterpolant","ExponentialInterpolant","tmpBuffer","StringEncodedNumeralFormatMaxSize","isInterpolatedProperty","interpolationMode","zoomLevels","Float32Array","values","evaluateInterpolatedProperty","level","lookup","pixelToMeters","_stringEncodedNumeralType","StringEncodedNumeralType","Meters","Pixels","getInterpolatedMetric","Hex","RGB","RGBA","HSL","nChannels","interpolant","InterpolationMode","Exponential","exponent","evaluate","assert","ColorUtils","getHexFromRgba","resultBuffer","getHexFromRgb","getInterpolatedColor","_stringEncodedNumeralDynamicMask","maskInterpolant","isExpr","Dynamic","parseStringEncodedNumeral","isCubic","interpolation","findIndex","abs","splice","removeDuplicatePropertyValues","Discrete","firstValue","matchedFormat","StringEncodedNumeralFormats","find","format","regExp","test","error","needsMask","propValues","maskValues","baseFormat","allowedValueFormats","type","StringEncodedMetricFormats","StringEncodedColorFormats","valueIdx","matched","valueFormat","decoder","mask","procesStringEnocodedNumeralInterpolatedProperty","box3","obb","position","xAxis","yAxis","zAxis","extents","ProjectionType","unitScale","projectPoint","sourceProjection","worldPos","unprojectPoint","GeoBox","southWest","northEast","south","north","west","east","minAltitude","altitudeSpan","latitudeSpan","longitudeSpan","maxAltitude","width","point","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","EarthConstants","EQUATORIAL_CIRCUMFERENCE","EQUATORIAL_RADIUS","MIN_ELEVATION","MAX_ELEVATION","MAX_BUILDING_HEIGHT","subdivisionScheme","projection","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","tileKey","subTiles","TileKeyUtils","geoCoordinatesToTileKey","geoBox","geoRectangleToTileKeys","getGeoBox","getWorldBox","FeatureModifierId","OmvFilterString","StringMatch","matchString","filterString","match","Any","Match","StartsWith","startsWith","EndsWith","endsWith","indexOf","OmvGeometryType","OMV_TILE_DECODER_SERVICE_TYPE","OMV_TILER_SERVICE_TYPE","SHIFT_TRANSPARENCY","SHIFT_RED","SHIFT_GREEN","SHIFT_BLUE","HEX_FULL_CHANNEL","HEX_RGB_MASK","HEX_TRGB_MASK","tmpColor","Color","g","getHexFromHsl","h","setHSL","getHex","getRgbaFromHex","hex","hasAlphaInHex","getAlphaFromHex","removeAlphaFromHex","step","MercatorProjection","Projection","Planar","val","MercatorConstants","MAXIMUM_LATITUDE","log","tan","PI","latitudeProject","latitudeClamp","atan","exp","worldPoint","cosh","geoPointLike","latitudeClampProject","latitudeInRadians","fromRadians","unprojectLatitude","worldCenter","center","worldNorth","worldSouth","worldYCenter","isBox3Like","isOrientedBox3Like","EPSILON","worldBox","minGeo","maxGeo","fromCoordinates","_worldPoint","normal","webMercatorProjection","mercatorProjection","reprojectPoint","sy","sin","projectBox","maxY","quadTreeSubdivisionScheme","powerOfTwo","TileKey","row","column","quadkey","parseInt","fromRowColumnLevel","quadKey64","quadKey","m_mortonCode","quadkey64","fromMortonCode","m_hereTile","pow","coordX","coordY","totalWidth","totalHeight","rowsAtLevel","columnsAtLevel","mortonCode","delta","changedLevelBy","col","qnr","sub","subQuad","fromQuadKey","child","fromHereTile","msb","enabled","serviceId","m_pendingRequests","onMessage","data","service","WorkerServiceProtocol","isRequestMessage","request","requestEntry","messageId","responseSent","tryHandleRequest","then","response","doSendResponse","ServiceMessageName","Response","transferList","catch","errorMessage","errorStack","tryHandleMessage","err","addEventListener","isInitializedMessage","Initialized","postMessage","cancelAllPendingRequests","removeEventListener","handleMessage","handleRequest","Promise","reject","lat2tile","func","cos","createWorldTileTransformationCookie","decodeInfo","N","log2","scale","top","adapterId","VTJsonDataAdapterId","round","left","tile2world","flipY","target","worldTileProjectionCookie","R","SharedArrayBuffer","ArrayBuffer","tempWorldPos","Vector2","webMercatorTile2TargetWorld","targetProjection","vertexStride","contour","winding","area","points","stride","q","OmvDecoder","m_projection","m_styleSetEvaluator","m_showMissingTechniques","m_dataFilter","m_featureModifier","m_gatherFeatureAttributes","m_createTileInfo","m_gatherRoadSegments","m_skipShortLabels","m_storageLevelOffset","m_enableElevationOverlay","m_languages","m_dataAdapters","styleSetDataFilter","StyleSetDataFilter","dataPreFilter","ComposedDataFilter","OmvProtobufDataAdapter","VTJsonDataAdapter","dataAdapter","adapter","canProcess","techniques","geometries","resetTechniques","tileSizeOnScreen","estimatedTileSizeOnScreen","DecodeInfo","id","m_decodedTileEmitter","OmvDecodedTileEmitter","storeExtendedTags","m_infoTileEmitter","OmvTileInfoEmitter","decodedTile","getDecodedTile","tileInfo","getTileInfo","ExtendedTileInfo","layer","geometry","storageLevel","doProcessPointFeature","applyKindFilter","getMatchingTechniques","GeometryKind","Label","unmap","zoomLevel","getZoomLevel","cachedExprResults","expressionEvaluatorCache","featureId","processPointFeature","doProcessLineFeature","Line","processLineFeature","doProcessPolygonFeature","Area","processPolygonFeature","defaultKind","hasKindFilter","filter","technique","kind","wantsKind","projectedBoundingBox","OrientedBox3","tileBounds","Box3","tileSize","Vector3","projectedTileBounds","tilingScheme","getCenter","getSize","webMercatorTilingScheme","OmvTileDecoder","ThemedTileDecoder","resolve","styleSetEvaluator","startTime","PerformanceTimer","now","m_featureFilter","languages","decodeTime","setupTime","styleSet","options","configure","omvOptions","showMissingTechniques","filterDescription","OmvGenericFeatureFilter","createFeatureModifier","featureModifierId","gatherFeatureAttributes","createTileInfo","gatherRoadSegments","skipShortLabels","enableElevationOverlay","tomTom","OmvTomTomFeatureModifier","OmvGenericFeatureModifier","OmvTileDecoderService","WorkerServiceManager","getInstance","register","serviceType","factory","TileDecoderService","start","warn","LogLevel","parentUri","childUri","absoluteUrlWithOriginRe","getUrlOrigin","substr","baseUrl","RegExp","url","idx","lastIndexOf","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","StringEncodedMeters","encodedValue","exec","StringEncodedPixels","StringEncodedHex","StringEncodedRGB","channels","StringEncodedRGBA","parseFloat","StringEncodedHSL","StringEncodedMetricFormatMaxSize","reduce","StringEncodedColorFormatMaxSize","numeral","color","formats","def","bdef","styleDef","TEXTURE_PROPERTY_KEYS","TRANSPARENCY_PROPERTY_KEYS","techniqueDescriptors","baseTechniqueParamsDescriptor","attrTransparencyColor","attrScopes","renderOrder","AttrScope","TechniqueGeometry","renderOrderOffset","transient","fadeFar","TechniqueRendering","fadeNear","pointTechniquePropTypes","mergeTechniqueDescriptor","texture","enablePicking","transparent","opacity","squaresTechniquePropTypes","squares","circlesTechniquePropTypes","circles","lineMarkerTechniquePropTypes","text","FeatureGeometry","useAbbreviation","useIsoCode","priority","textMinZoomLevel","textMaxZoomLevel","iconMinZoomLevel","iconMaxZoomLevel","distanceScale","textMayOverlap","iconMayOverlap","textReserveSpace","iconReserveSpace","renderTextDuringMovements","alwaysOnTop","textIsOptional","showOnMap","stackMode","minDistance","iconIsOptional","iconFadeTime","textFadeTime","xOffset","yOffset","iconXOffset","iconYOffset","iconScale","screenHeight","screenWidth","poiTable","poiName","poiNameField","imageTexture","imageTextureField","imageTexturePrefix","imageTexturePostfix","style","fontName","fontStyle","fontVariant","rotation","tracking","leading","maxLines","lineWidth","canvasRotation","lineRotation","wrappingMode","hAlignment","vAlignment","backgroundColor","backgroundSize","backgroundOpacity","polygonalTechniqueDescriptor","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","lineColor","lineFadeFar","lineFadeNear","solidLineTechniqueDescriptor","clipping","secondaryRenderOrder","secondaryWidth","secondaryColor","dashSize","gapSize","lineTechniqueDescriptor","line","fillTechniqueDescriptor","fill","standardTechniqueDescriptor","vertexColors","wireframe","roughness","metalness","alphaTest","depthTest","emissive","emissiveIntensity","refractionRatio","mapProperties","normalMap","normalMapProperties","displacementMap","displacementMapProperties","roughnessMap","roughnessMapProperties","emissiveMap","emissiveMapProperties","bumpMap","bumpMapProperties","metalnessMap","metalnessMapProperties","alphaMap","alphaMapProperties","standard","extrudedPolygonTechniqueDescriptor","height","floorHeight","defaultColor","defaultHeight","constantHeight","boundaryWalls","footprint","maxSlope","enableDepthPrePass","animateExtrusionDuration","animateExtrusion","lineColorMix","textTechniqueDescriptor","minZoomLevel","maxZoomLevel","mayOverlap","reserveSpace","shaderTechniqueDescriptor","primitive","params","isExtrudedLineTechnique","isStandardExtrudedLineTechnique","shading","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isTerrainTechnique","shader","dashes","textureCoordinateType","texturePropertyKey","textureProperty","isTextureBuffer","buffer","imageName","textureName","optionalParams","console","debug","info","trace","m_channel","Trace","update","prefix","Debug","Info","Log","Warn","WORKERCHANNEL_MSG_TYPE","workerMessage","Env","_name","entries","parent","GeometryKindSet","subset","elem","hasIntersection","TextureCoordinateType","PoiStackMode","descriptors","attr","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","GeometryType","projectionName","sphereProjection","normalizedEquirectangularProjection","equirectangularProjection","attributeMap","$id","EquirectangularProjection","geoToWorldScale","worldToGeoScale","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","TransverseMercatorProjection","m_phi0","m_lambda0","_unitScale","lon","TransverseMercatorUtils","POLE_RADIUS","rsq","POLE_RADIUS_SQ","nearestQuarter","deltaLon","deltaLat","distanceToPoleSq","distanceToPole","sqrt","dir","offsetLon","clamped","clampGeoPoint","normalLon","offset","phi","lambda","B","atanh","atan2","outScale","tau","nx","ny","D","asin","sinh","pointsToCheck","E","POLE_EDGE_DEG","containsEastCut","containsCenterX","containsCenterY","alignLatitude","projected","vx","vy","vz","minX","minY","minZ","maxX","maxZ","lowerQ","upperQ","containsLowerQY","containsUpperQY","geoPoints","alignLongitude","latitudes","longitudes","altitudes","referencePoint","bad","good","POLE_EDGE","transverseMercatorProjection","minElevation","maxElevation","m_tilingScheme","m_worldBox","worldExtent","m_worldDimensions","levelDimensionX","getLevelDimensionX","levelDimensionY","getLevelDimensionY","originX","originY","unprojectBox","halfQuadTreeSubdivisionScheme","SubTiles","iterator","ZCurveIterator","RowColumnIterator","parentKey","worldCoordinatesToTileKey","cx","cy","worldSizeX","worldSizeY","wrap","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","columnCount","minColumn","maxColumn","minRow","maxRow","m_subdivisionScheme","divX","getSubdivisionX","divY","getSubdivisionY","emptyTechniqueDescriptor","StyleConditionClassifier","_whenExpr","savedStyle","switchStyle","_style","enclosingExpr","children","matchVarStringComparison","_geometryType","right","saved","OptimizedSubSetKey","geometryType","keyUpdateNeeded","envLayer","envGeometryType","updateKey","cachedStyleSet","makeDecodedTechnique","attrName","attrValue","toJSON","m_techniques","m_exprPool","ExprPool","m_cachedResults","m_styleConditionClassifier","m_subStyleSetCache","m_definitionExprCache","m_tmpOptimizedSubSetKey","m_emptyEnv","m_definitions","resolveStyleReferences","isJsonExprReference","definitionName","isActualSelectorDefinition","resolveReferences","techniqueRenderOrder","styleSetIndex","_styleSetIndex","computeDefaultRenderOrder","compileStyleSet","clear","optimizedSubSetKey","m_layer","m_geometryType","m_zoomLevel","searchedStyleSet","getOptimizedStyleSet","currStyle","processStyle","techinque","_index","subSetKey","optimizedStyleSet","createPreFilteredStyleSet","compileStyle","when","classify","intern","_minZoomLevelExpr","_maxZoomLevelExpr","checkZoomLevel","Condition","getTechniqueForStyleMatch","final","checkStyleDynamicAttributes","_dynamicTechniques","dynamicAttributes","evaluateTechniqueProperties","getDynamicTechniqueKey","createTechnique","_staticTechnique","dynamicAttrKey","_attrName","join","_dynamicTechniqueAttributes","_dynamicFeatureAttributes","_dynamicForwardedAttributes","_staticAttributes","dynamicFeatureAttributes","dynamicTechniqueAttributes","dynamicForwardedAttributes","targetStaticAttributes","techniqueDescriptor","processAttribute","deps","attrScope","category","secondaryCategory","labelProperty","instantiationContext","attrExpr","instantiate","dynamicAttrs","_key","_styleSet","defaultValue","evaluated","getPropertyValue","geojsonvtExport","geojsonvt","default","indexes","indexId","input","updateIndex","URL","fetch","href","ok","statusText","index","maxZoom","indexMaxZoom","indexMaxPoints","tolerance","extent","lineMetrics","promoteId","generateId","geojson","tile","getTile","feature","features","originalGeometry","getOriginalGeometry","VT_JSON_EXTENTS","VTJsonGeometryType","m_processor","m_logger","dataFilter","isArrayBufferLike","source","MapEnv","$layer","$geometryType","convertGeometryType","$level","$zoom","storageLevelOffset","tags","Point","pointGeometry","LineString","untiledPositions","coordinates","lineGeometry","positions","Polygon","polygon","rings","outline","ring","currX","currY","Unknown","Writer","BufferWriter","Op","fn","len","next","noop","State","writer","head","tail","states","writeByte","buf","pos","VarintOp","writeVarint64","writeFixed32","alloc","subarray","_push","uint32","int32","fromNumber","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","decode","string","write","fork","reset","ldelim","finish","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","readLongVarint","readFixed32_end","end","readFixed64","isBuffer","_slice","readFloatLE","readDoubleLE","read","skip","skipType","wireType","BufferReader_","zzDecode","m_processLayersDefault","m_processPointsDefault","m_processLinesDefault","m_processPolygonsDefault","m_layersToProcess","m_layersToIgnore","m_pointsToProcess","m_ignoredPoints","m_linesToProcess","m_linesToIgnore","m_polygonsToProcess","m_polygonsToIgnore","m_kindsToProcess","m_kindsToIgnore","processLayersDefault","processPointsDefault","processLinesDefault","processPolygonsDefault","minLevel","maxLevel","addItem","addItems","enabledKinds","concat","disabledKinds","layersToProcess","layersToIgnore","pointsToProcess","pointsToIgnore","linesToProcess","linesToIgnore","polygonsToProcess","polygonsToIgnore","kindsToProcess","kindsToIgnore","items","item","layerName","matchLayer","geometryTypes","geomType","classes","featureClass","matchClass","featureAttribute","geomTypes","featureClasses","description","layerItems","layerItem","wantsFeature","hasOrIntersects","itemsToProcess","itemsToIgnore","defaultResult","filters","wantsLayer","wantsPointFeature","wantsLineFeature","wantsPolygonFeature","doProcessFeature","featureClassThing","matchItems","matchAttribute","importScripts","PriorityListGroup","groups","getGroup","group","foundIndex","normalizedPriority","m_sortedGroups","otherGroup","findGroup","clone","priorityList","sort","fun","m_instance","LoggerManagerImpl","m_loggers","channel","document","ConsoleChannel","WorkerChannel","loggerName","m_levelSetForAll","Logger","found","config","Math2D","distSquared","ax","ay","bx","by","Box","w","xmax","ymax","contains","computeSquaredLineLength","squaredLineLength","xDiff","yDiff","distToSegmentSquared","px","py","l0x","l0y","l1x","l1y","lineLengthSuared","lerp","edge0","edge1","factor","smoothStep","smootherStep","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","easeInOutCubic","startValue","endValue","time","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","isProduction","headerMessage","m_headerLogged","createLogMethod","pop","severity","rest","nowFunc","performance","Date","getTime","getNowFunc","cloneInternal","cached","flags","candidate","parameters","optionValue","uri","resolveReferenceUri","resolvers","resolveUri","originalUrl","resolver","f1","f2","apply","location","operatorDescriptors","evaluator","m_partialEvaluation","previousEvaluationMode","fromValue","builtin","builtins","defineOperator","includes","defineOperators","CastOperators","ComparisonOperators","MathOperators","StringOperators","ColorOperators","TypeOperators","MiscOperators","FlowOperators","ArrayOperators","InterpolationOperators","ObjectOperators","FeatureOperators","MapOperators","operators","at","arg","alpha","parseStringEncodedColor","rgba","rgbaToHex","rgb","rgbToHex","hsl","euclideanModulo","hslToHex","compare","strict","conditionalCast","all","any","none","boolean","number","interpolate","_interpolatedProperty","_mode","interpolatorType","base","stops","isConstantInterpolation","stop","createInterpolatedProperty","_exponent","_stops","prepareInterpolateCallExpr","interpolatedProperty","_inputIsZoom","classifyStepCallExpr","first","last","mid","MIN_SAFE_INTEGER","hasConstantValues","literal","prepareStepCallExpr","Interpolant","i1","t0","t1","sampleValues","valueSize","offset1","offset0","weight1","weight0","pixels","scaleFactor","ppi","acos","ceil","ln","ln2","log10","pi","coalesce","LookupMode","lookupMember","lookupMode","memberName","downcase","toLocaleLowerCase","upcase","toLocaleUpperCase","typeof","emptyEnv","_context","preserve","changed","newBranch","newCondition","instantiatedBranch","Character","Token","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_index","m_char","m_text","yylex","codePointAt","yyinp","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","hasAttribute","parseLiteral","parseUnary","parsePrimary","parseRelational","parseEquality","expressions","parseLogicalAnd","Requests","WORKER_SERVICE_MANAGER_SERVICE_ID","isUnknownServiceError","Request","isResponseMessage","WorkerTilerProtocol","isRegisterIndexRequest","RegisterIndex","isUpdateIndexRequest","UpdateIndex","isTileRequest","TileRequest","abortController","AbortController","signal","abort","WorkerDecoderProtocol","DecoderMessageName","isConfigurationMessage","Configuration","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","IdentityProjection","identityProjection","getLongitudeQuadrant","oneOverPI","quadrantIndex","lengthOfVector3","makeBox3","halfEquatorialRadius","minLongitude","maxLongitude","minLongitudeQuadrant","maxLongitudeQuadrant","xMin","xMax","yMin","yMax","cosMaxLongitude","sinMaxLongitude","xCenter","xExtent","yCenter","yExtent","minLatitude","maxLatutide","zMax","zMin","zCenter","zExtent","SphereProjection","Spherical","_minElevation","radius","worldpoint","cosLatitude","project","parallelRadiusSq","parallelRadius","bounds","midX","midY","cosSouth","sinSouth","cosWest","sinWest","cosNorth","sinNorth","cosEast","sinEast","cosMidX","sinMidX","cosMidY","sinMidY","rMax","rMin","_worldBox","mx","my","gx","gy","cosLongitude","sinLongitude","sinLatitude","visitTileKey","subTileKey","getSubTileKeys","hereTilingScheme","TilingScheme","mercatorTilingScheme","polarTilingScheme","transform","rotationMatrix","copy","extractBasis","newBox","multiplyScalar","matrix","Matrix4","makeBasis","frustumOrPlanes","planes","plane","dot","distanceToPoint","dx","dy","dz","distanceToPointSquared","subVectors","lengths","getComponent","dd","FeatureGroupType","MINIMUM_OBJECT_SIZE_ESTIMATION","FeatureGroup","startSize","featureIds","numFeatures","numPositions","techniqueIndex","textIndex","positionIndex","layerIndex","classIndex","typeIndex","LineFeatureGroup","userData","getNumBytes","segmentIds","segmentStartOffsets","segmentEndOffsets","PolygonFeatureGroup","groupNumRings","outerRingStartIndex","innerRingIsOuterContour","innerRingStartIndex","textCatalog","techniqueCatalog","numBytes","pointGroup","lineGroup","polygonGroup","layerCatalog","classCatalog","typeCatalog","finishFeatureGroup","featureGroup","featureGroupFinished","getFeatureName","abbreviation","isoCode","lang","featureGroupSize","tileInfoFinished","getFeatureText","isTextTechnique","isPoiTechnique","isLineMarkerTechnique","evaluateTechniqueAttr","techniqueIndexMap","stringMap","layerMap","classMap","typeMap","infoTileTechniqueIndex","decodedTechnique","featureText","featureGroupType","stringIndex","addText","addLayer","addClass","addType","segmentId","startOffset","endOffset","isOuterRing","addStringValue","catalog","ExtendedTileInfoVisitor","handler","visitAllPointFeatures","visitAllLineFeatures","visitAllPolygonFeatures","numFeaturesFound","numPointFeatures","pointFeatures","visitPointFeature","numLineFeatures","lineFeatures","visitLineFeature","numPolygonFeatures","polygonsFeatures","visitPolygonFeature","featureIndex","acceptPoint","getTag","lines","positionsStart","numPointValues","acceptLine","acceptPolygon","polygons","ringStart","numRings","polygonAccessor","setup","ringIndex","pointsStart","m_booleanLiterals","m_numberLiterals","m_stringLiterals","m_objectLiterals","m_varExprs","m_hasAttributeExprs","m_inExprs","m_matchExprs","m_caseExprs","m_callExprs","inExprs","inExpr","branchesMatching","calls","theme","visitFunc","visit","styles","styleSetName","decodeThemedTile","StyleSetEvaluator","indexBuffer","vertexOffset","contourEdges","nSegments","vFootprint0","vRoof0","vFootprint1","vRoof1","currEdgeStart","currEdgeGoal","prevEdgeStart","prevEdgeGoal","polygonContour","polygonContourEdges","isExtruded","addFootprintEdges","wallEdgeSlope","prevEdgeIdx","v0x","v0y","v1x","v1y","normalize","vFoot0","ThreeBufferUtils","getBufferElementType","fromThreeBufferAttribute","bufferAttribute","array","itemCount","itemSize","normalized","fromThreeInterleavedBufferAttribute","fromThreeBufferGeometry","bufferGeometry","vertexAttributes","attributeNames","attributes","vertexAttribute","count","posAttr","Unspecified","WorkerService","m_decoder","connect","handleDecodeTileRequest","handleTileInfoRequest","handleConfigurationMessage","getProjection","decodeTile","geom","objInfos","addBuffersToTransferList","TilerService","tiler","GeoJsonTiler","handleRegisterIndexRequest","handleUpdateIndexRequest","handleTileRequest","registerIndex","m_factories","m_services","m_service","workerServiceDescriptor","CreateService","targetServiceId","targetServiceType","DestroyService","destroy","CommandKind","isMoveToCommand","command","MoveTo","isLineToCommand","LineTo","isClosePathCommand","ClosePath","visitOmv","vectorTile","layers","visitLayer","visitOmvLayer","endVisitLayer","com","mapbox","pb","Tile","GeomType","UNKNOWN","POINT","LINESTRING","POLYGON","FeatureAttributes","visitAttribute","GeometryCommands","geometryCount","xCoords","yCoords","commands","cmdIndex","xx","yy","visitCommand","propertyCategories","readAttributes","defaultAttributes","attrs","replaceReservedName","isLong","simplifiedValue","createFeatureEnv","greaterThan","MAX_SAFE_INTEGER","decodeFeatureId","asGeometryType","processor","m_geometryCommands","payload","proto","m_tileKey","layerExtents","currentPolygon","currentRing","wasm","WebAssembly","Instance","Module","low","high","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","mul","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","LN2","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","$protobuf","$Reader","$util","$root","roots","valuesById","tag","Layer","decodeDelimited","fromObject","TypeError","toObject","arrays","defaults","j","stringValue","floatValue","doubleValue","intValue","uintValue","sintValue","boolValue","long","Feature","end2","version","protobuf","build","rpc","Function","ctx","arguments","pending","b64","s64","encode","parts","chunk","fromCharCode","charCodeAt","_listeners","on","evt","off","listeners","emit","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","readFloat_ieee754","readUint","uint","mantissa","NaN","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","eval","replace","c1","c2","SIZE","MAX","slab","zero","toLong","part0","part1","part2","writeBytesBuffer","writeStringBuffer","byteLength","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","callback","setTimeout","endedByRPC","tempTileOrigin","tempVertOrigin","tempVertNormal","tempFootDisp","tempRoofDisp","tmpV2","tmpV2r","tmpV3","tmpV3r","tmpV4","tempP0","tempP1","tempPreviousTangent","tmpPointA","tmpPointB","tmpPointC","tmpPointD","tmpPointE","tmpLine","Line3","MIN_AVERAGE_CHAR_WIDTH","SIZE_ESTIMATION_FACTOR","MAX_CORNER_ANGLE","INVALID_ARRAY_INDEX","MeshBuffers","normals","textureCoordinates","colors","extrusionAxis","indices","edgeIndices","texts","pathLengths","stringCatalog","imageTextures","featureStarts","LineType","m_decodeInfo","m_meshBuffers","m_geometries","m_textGeometries","m_textPathGeometries","m_pathGeometries","m_poiGeometries","m_simpleLines","m_solidLines","m_sources","m_maxGeometryHeight","processFeatureCommon","meshBuffers","findOrCreateMeshBuffers","shouldCreateTextGeometries","wantsPoi","poiTechnique","imageTextureValue","composeTechniqueTextureName","textTechnique","webMercatorTile2TargetTile","getFeatureId","localLines","worldLines","uvs","offsets","localLineSegments","tileWidth","tileHeight","tileSizeInMeters","computeTexCoords","texCoordinateType","hasUntiledLines","hasIndividualLineSegments","hasContinuousLineSegments","otherTexCoordType","getTextureCoordinateType","getComputeTexCoordsFunc","isSpecialDashesLineTechnique","polyline","untiledLine","lineDist","distanceTo","lineLength","pointCount","lastSegmentOffset","localLine","worldLine","lineUvs","segmentOffsets","pos1","pos2","u","findRelativePositionInLine","segmentLength","segOffsets","offs","lineOffsets","wantCircle","techniqueName","isLineTechnique","isSolidLineTechnique","lineType","Simple","Complex","applyLineTechnique","validLines","metersPerPixel","minEstimatedLabelLength","minEstimatedLabelLengthSqr","splitJaggyLines","path","pathLengthSqr","lineMarkerTechnique","aLine","isLabelRejectionLineTechnique","worldPath","fromArray","ExtrudedLine","techniqueCaps","caps","addCircle","triangulateLine","isFilled","isStandard","isPolygon","clipRing","ringContour","coords","clipPolygon","coord","Ring","isLine","applyPolygonTechnique","needIndividualLineSegments","ringLength","nextIdx","nextX","nextY","isOutline","createGeometries","processSimpleLines","processLines","decodedTechniques","textGeometries","poiGeometries","textPathGeometries","pathGeometries","copyrightHolderIds","maxGeometryHeight","maxCornerAngle","computeBoundingBoxSizeSqr","startIndex","endIndex","pathsToCheck","splitIndex","tangent","theta","firstPathLengthSqr","secondPathLengthSqr","TileSpace","texCoordType","tilePos","tileExtents","divideScalar","EquirectangularSpace","linesGeometry","featureAttributes","lineGroupGeometries","hasNormalsAndUvs","LineGroup","SolidLine","ExtrudedPolygon","extrudedPolygonTechnique","fillTechnique","featureHeight","styleSetDefaultHeight","featureMinHeight","ExtrusionFeatureDefs","MIN_BUILDING_HEIGHT","styleSetConstantHeight","getOptionValue","featureStride","isSpherical","hasEdges","colorValue","featureColor","isColorStringValid","startIndexCount","vertices","polygonBaseVertex","insideExtents","holes","hole","triangles","originalVertexCount","BufferGeometry","positionArray","uvArray","edgeArray","wallArray","BufferAttribute","uvAttr","setAttribute","edgeAttr","wallAttr","indexAttr","setIndex","SphericalGeometrySubdivisionModifier","modify","world2tile","geomIndex","getIndex","getScaleFactor","toArray","i0","i2","addEdges","addWalls","techniqueIdx","positionElements","positionCount","texCoordCount","edgeIndex","linesArray","interleavedVertexAttributes","buffers","featureBaseVertex","featureVertexCount","hasFootprint","tmpEdgeA","tmpEdgeB","firstRingVertex","prevRingVertex","currRingVertex","maxRingVertex","nextRingVertex","prevPos","currPos","nextPos","lineOffset","closestPointToPoint","dist","tmpV","tmpNormal","tmpTangent0","tmpTangent1","tmpBitangent","SEGMENT_OFFSET","LINE_VERTEX_ATTRIBUTES","NORMAL_UV_VERTEX_ATTRIBUTES","LINE_VERTEX_ATTRIBUTES_NUV","HP_LINE_VERTEX_ATTRIBUTES","HP_LINE_VERTEX_ATTRIBUTES_NUV","LineGeometry","getVertexDescriptor","highPrecision","createLineGeometry","segments","tangents","baseVertex","hasSegmentOffsets","hasTexCoords","sum","sqrLength","lineCoverage","isClosed","tmpVertices","addVertexPair","T1","T2","segment","extrusionCoord","highComp","fround","lowComp","setComponent","surfaceNormal","angle","bt","cross","computeBitangent","createSimpleLineGeometry","isSimple","m_geometry","vertexDescriptor","InterleavedBuffer","descr","attribute","InterleavedBufferAttribute","createGeometry","UNIT_Z","POINTS","BEVEL_POINTS","SECTORS_IN_CIRCLE","STEP","lineAngle","startWithCircle","endWithCircle","angleVec","prevBt","averageBt","p2","p3","useBevel","angleTo","inclineWidth","inBuffer","outBuffer","xd","yd","zd","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","list","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hx","hy","qx","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","flatten","dimensions","holeIndex","VERTEX_POSITION_CACHE","SubdivisionModifier","aa","bb","cc","beta","gamma","tmpVectorA","tmpVectorB","tmpVectorC","positionAttr","getAttribute","uv","edge","wall","middleVertex","lerpVectors","newIndices","v0","shift","v1","v2","shouldSplitTriangle","v3","needsUpdate","DEFAULT_RATIO_MIN","DEFAULT_RATIO_MAX","tmpBA","tmpQP","tmpA","tmpB","computeIntersection","clip","outputList","inputList","currentPoint","prevPoint","m_storeExtendedTags","m_tileInfo","m_tileInfoWriter","ExtendedTileInfoWriter","tileInfoWriter","addTechnique","addFeature","addFeaturePoint","addFeaturePoints","addRoadSegments","outerRingWinding","aRing","addRingPoints","DEFAULT_BUILDING_COLOR","DEFAULT_DO_EXTRUDE_BUILDINGS","DEFAULT_BUILDING_MIN_HEIGHT","DEFAULT_BUILDING_HEIGHT","rewriteEnvironment","isWood","updateEnvironment","isHospital","isCemetery","isIndustrial","isPark","isBuiltup","isWater","isRoadLabel","isRoadPath","isRoadStreet","isRoadPrimary","isRoadSecondary","isRailway","isFerry","isAeroway","isBorder","isCountryLabel","isCountyLabel","isRegionLabel","isStateLabel","isPlaceLabel","isWaterLabel","isMarineLabel","isPoiLabel","isBuilding","extrude","min_height","isTunnel","structure","isBridge","newClass","class","getSqSegDist","createFeature","calcLineBBox","calcBBox","convertFeature","convertPoint","convertLine","convertLines","out","projectX","projectY","x0","y0","simplify","sqTolerance","maxSqDist","minPosToMid","posToMid","y2","k1","k2","axis","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","newSlice","intersect","intersectX","intersectY","az","exited","addPoint","shiftFeatureCoords","newFeatures","shiftCoords","newPolygon","k","newPoints","transformTile","transformed","z2","tx","ty","transformPoint","createTile","numPoints","numSimplified","simplified","addLine","tileFeature","isOuter","rewind","GeoJSONVT","dest","extend","convert","tiles","tileCoords","timeEnd","stats","total","merged","splitTile","toID","cz","tl","bl","tr","br","k3","k4","z0"],"mappings":"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","file":"decoder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n","module.exports = THREE;","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedProperty\";\nimport { interpolatedPropertyDefinitionToJsonExpr } from \"./InterpolatedPropertyDefs\";\nimport { Definitions, isBoxedDefinition, isLiteralDefinition } from \"./Theme\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitContainsExpr(expr: ContainsExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an [[Expr]].\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the [[Expr]].\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the [[Expr]] depends on zoom level. Default is `false`.\n     */\n    zoom?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an [[Expr]].\n     *\n     * @param expr The [[Expr]] to process.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        if (expr.op === \"zoom\" && expr.args.length === 0) {\n            context.zoom = true;\n        } else {\n            expr.args.forEach(childExpr => childExpr.accept(this, context));\n        }\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an [[Expr]] object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by [[Expr.fromJSON]] to resolve `\"ref\"` expressions.\n * @hidden\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an [[Expr]].\n */\nexport enum ExprScope {\n    /**\n     * The scope of an [[Expr]] used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an [[Expr]] used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an [[Expr]] used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n/**\n * Abstract class defining a shape of a [[Theme]]'s expression\n */\nexport abstract class Expr {\n    /**\n     * Tests of given value is an [[Expr]].\n     *\n     * @param value The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code The code to parse.\n     * @returns The parsed [[Expr]].\n     * @deprecated\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    /**\n     * Parse expression in JSON form.\n     *\n     * If `definitions` are defined, then references (`['ref', name]`) are resolved.\n     *\n     * Pass `definitionExprCache` to reuse `Expr` instances created from definitions across\n     * many `fromJSON` calls.\n     *\n     * @param node expression in JSON format to parse\n     * @param definitions optional set of definitions needed definition resolved by `ref` operator\n     * @param definitionExprCache optional cache of `Expr` instances derived from `definitions`\n     */\n    static fromJSON(\n        node: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache || new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(node, referenceResolverState);\n    }\n\n    private m_dependencies?: ExprDependencies;\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a [[Value]] object.\n     *\n     * @param env The [[Env]] used to lookup symbols.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this [[Expr]] by resolving references to the `get` and\n     * `has` operator using the given instantiation context.\n     *\n     * @param context The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this [[Expr]].\n     */\n    dependencies(): ExprDependencies {\n        if (!this.m_dependencies) {\n            this.m_dependencies = ComputeExprDependencies.of(this);\n        }\n        return this.m_dependencies;\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this [[Expr]].\n     *\n     * @param pool The [[ExprPool]] used to create a unique\n     * equivalent object of this [[Expr]].\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this [[Expr]].\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this [[Expr]].\n     *\n     * [[exprIsDynamic]] must never be called directly.\n     *\n     * @hidden\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @hidden\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @hidden\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @hidden\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * Var expression.\n * @hidden\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n * @hidden\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value: Value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n * @hidden\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n * @hidden\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n * @hidden\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n * @hidden\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A has expression with an attribute, for example `has(ref)`.\n * @hidden\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A contains expression.\n * @hidden\n */\nexport class ContainsExpr extends Expr {\n    static isValidElementsArray(elements: JsonValue): elements is Array<number | string> {\n        if (!Array.isArray(elements) || elements.length === 0) {\n            return false;\n        }\n\n        const elementTy = typeof elements[0];\n\n        if (elementTy === \"number\" || elementTy === \"string\") {\n            return elements.every(element => typeof element === elementTy);\n        }\n\n        return false;\n    }\n\n    constructor(readonly value: Expr, readonly elements: Array<number | string>) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitContainsExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return this.value.isDynamic();\n    }\n}\n\n/**\n * @hidden\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this [[Expr]].\n     * @deprecated\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor || ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * @hidden\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * @hidden\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: void): JsonValue {\n        return [\"in\", this.serialize(expr.value), expr.elements];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"in\":\n            return parseInExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseInExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    const elements = node[2];\n    if (!ContainsExpr.isValidElementsArray(elements)) {\n        // tslint:disable-next-line: max-line-length\n        throw new Error(`'in' expects an array of number or string literals`);\n    }\n    return new ContainsExpr(parseNode(node[1], referenceResolverState), elements);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    let result: Expr;\n    if (isLiteralDefinition(definitionEntry)) {\n        return Expr.fromJSON(definitionEntry);\n    } else if (isBoxedDefinition(definitionEntry)) {\n        if (isInterpolatedPropertyDefinition(definitionEntry.value)) {\n            // found a reference to an interpolation using\n            // the deprecated object-like syntax.\n            return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry.value));\n        } else if (isJsonExpr(definitionEntry.value)) {\n            definitionEntry = definitionEntry.value;\n        } else {\n            return Expr.fromJSON(definitionEntry.value);\n        }\n    }\n\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./index-common\";\nexport * from \"./lib/UrlPlatformUtils.web\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/InterpolatedProperty\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/coordinates/GeoBox\";\nexport * from \"./lib/coordinates/GeoCoordinatesLike\";\nexport * from \"./lib/coordinates/GeoCoordinates\";\nexport * from \"./lib/coordinates/GeoPointLike\";\nexport * from \"./lib/coordinates/LatLngLike\";\nexport * from \"./lib/projection/EarthConstants\";\nexport * from \"./lib/projection/EquirectangularProjection\";\nexport * from \"./lib/projection/IdentityProjection\";\nexport * from \"./lib/projection/Projection\";\nexport * from \"./lib/projection/MercatorProjection\";\nexport * from \"./lib/projection/TransverseMercatorProjection\";\nexport * from \"./lib/projection/SphereProjection\";\nexport * from \"./lib/tiling/FlatTileBoundingBoxGenerator\";\nexport * from \"./lib/tiling/HalfQuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTree\";\nexport * from \"./lib/tiling/SubTiles\";\nexport * from \"./lib/tiling/SubdivisionScheme\";\nexport * from \"./lib/tiling/TileKey\";\nexport * from \"./lib/tiling/TileKeyUtils\";\nexport * from \"./lib/tiling/TileTreeTraverse\";\nexport * from \"./lib/tiling/TilingScheme\";\nexport * from \"./lib/tiling/HereTilingScheme\";\nexport * from \"./lib/tiling/WebMercatorTilingScheme\";\nexport * from \"./lib/tiling/MercatorTilingScheme\";\nexport * from \"./lib/tiling/PolarTilingScheme\";\nexport * from \"./lib/math/Vector3Like\";\nexport * from \"./lib/math/Box3Like\";\nexport * from \"./lib/math/OrientedBox3Like\";\nexport * from \"./lib/math/MathUtils\";\nexport * from \"./lib/math/TransformLike\";\nexport * from \"./lib/math/OrientedBox3\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nimport * as THREE from \"three\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in radians.\n     * @param longitude Longitude in radians.\n     * @param altitude Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.Math.radToDeg(latitude),\n            THREE.Math.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[LatLngLike]] literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng A [[LatLngLike]] object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint Either [[GeoPointLike]], [[GeoCoordinatesLike]]\n     * or [[LatLngLike]] object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.Math.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.Math.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n\n        if (latitude > 90) {\n            let wrapped = (latitude + 90) % 360;\n            if (wrapped >= 180) {\n                longitude += 180;\n                wrapped = 360 - wrapped;\n            }\n\n            latitude = wrapped - 90;\n        }\n\n        if (latitude < -90) {\n            let wrapped = (latitude - 90) % 360;\n            if (wrapped <= -180) {\n                longitude += 180;\n                wrapped = -360 - wrapped;\n            }\n\n            latitude = wrapped + 90;\n        }\n\n        if (longitude < -180 || longitude > 180) {\n            const sign = Math.sign(longitude);\n            longitude = (((longitude % 360) + 180 * sign) % 360) - 180 * sign;\n        }\n\n        if (latitude === this.latitude && longitude === this.longitude) {\n            return this;\n        }\n\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     * @deprecated\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this [[GeoCoordinates]] as [[LatLngLike]] literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this [[GeoCoordinates]] to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nimport * as THREE from \"three\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     * @deprecated\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees Value in degrees.\n     * @returns Value in radians.\n     * @deprecated\n     */\n    export const degToRad = THREE.Math.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees Value in radians.\n     * @returns Value in degrees.\n     * @deprecated\n     */\n    export const radToDeg = THREE.Math.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     * @returns Clamped value.\n     * @deprecated\n     */\n    export const clamp = THREE.Math.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a Start angle in degrees.\n     * @param b End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 Angle from in degrees\n     * @param p1 Angle to in degrees\n     * @param t Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n// global object reference\r\nutil.global = typeof window !== \"undefined\" && window\r\n           || typeof global !== \"undefined\" && global\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport { ColorUtils } from \"./ColorUtils\";\nimport { Env } from \"./Env\";\nimport { ExponentialInterpolant } from \"./ExponentialInterpolant\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport {\n    InterpolatedProperty,\n    InterpolatedPropertyDefinition,\n    InterpolationMode\n} from \"./InterpolatedPropertyDefs\";\nimport {\n    parseStringEncodedNumeral,\n    StringEncodedColorFormats,\n    StringEncodedMetricFormats,\n    StringEncodedNumeralFormat,\n    StringEncodedNumeralFormatMaxSize,\n    StringEncodedNumeralFormats,\n    StringEncodedNumeralType\n} from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"InterpolatedProperty\");\n\nconst interpolants = [\n    THREE.DiscreteInterpolant,\n    THREE.LinearInterpolant,\n    THREE.CubicInterpolant,\n    ExponentialInterpolant\n];\n\nconst tmpBuffer = new Array<number>(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Checks if a property is interpolated.\n * @param p property to be checked\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Type guard to check if an object is an instance of `InterpolatedProperty`.\n */\nexport function isInterpolatedProperty(p: any): p is InterpolatedProperty {\n    if (\n        p &&\n        p.interpolationMode !== undefined &&\n        p.zoomLevels instanceof Float32Array &&\n        p.values !== undefined &&\n        p.values.length > 0 &&\n        (p.zoomLevels.length === p.values.length / 4 ||\n            p.zoomLevels.length === p.values.length / 3 ||\n            p.zoomLevels.length === p.values.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n* Get the value of the specified property in given `env`.\n\n* @param property Property of a technique.\n* @param env The [[Env]] used to evaluate the property\n*/\nexport function getPropertyValue(\n    property: Value | Expr | InterpolatedProperty | undefined,\n    env: Env\n): any {\n    if (Expr.isExpr(property)) {\n        return property.evaluate(env, ExprScope.Dynamic);\n    }\n\n    if (isInterpolatedProperty(property)) {\n        return evaluateInterpolatedProperty(property, env);\n    }\n\n    if (typeof property !== \"string\") {\n        // Property in numeric or array, etc. format\n        return property;\n    } else {\n        // Non-interpolated string encoded numeral parsing\n        const pixelToMeters = (env.lookup(\"$pixelToMeters\") as number) || 1;\n        const value = parseStringEncodedNumeral(property, pixelToMeters);\n        return value !== undefined ? value : property;\n    }\n}\n\nexport function evaluateInterpolatedProperty(property: InterpolatedProperty, env: Env): any {\n    const level = env.lookup(\"$zoom\") as number;\n    const pixelToMeters = env.lookup(\"$pixelToMeters\") as number;\n\n    if (property._stringEncodedNumeralType !== undefined) {\n        switch (property._stringEncodedNumeralType) {\n            case StringEncodedNumeralType.Meters:\n            case StringEncodedNumeralType.Pixels:\n                return getInterpolatedMetric(property, level, pixelToMeters);\n            case StringEncodedNumeralType.Hex:\n            case StringEncodedNumeralType.RGB:\n            case StringEncodedNumeralType.RGBA:\n            case StringEncodedNumeralType.HSL:\n                return getInterpolatedColor(property, level);\n        }\n    }\n    return getInterpolatedMetric(property, level, pixelToMeters);\n}\n\nfunction getInterpolatedMetric(\n    property: InterpolatedProperty,\n    level: number,\n    pixelToMeters: number\n): number {\n    const nChannels = property.values.length / property.zoomLevels.length;\n    const interpolant = new interpolants[property.interpolationMode](\n        property.zoomLevels,\n        property.values,\n        nChannels\n    );\n    if (\n        property.interpolationMode === InterpolationMode.Exponential &&\n        property.exponent !== undefined\n    ) {\n        (interpolant as ExponentialInterpolant).exponent = property.exponent;\n    }\n    interpolant.evaluate(level);\n\n    if (property._stringEncodedNumeralDynamicMask === undefined) {\n        return interpolant.resultBuffer[0];\n    } else {\n        const maskInterpolant = new interpolants[property.interpolationMode](\n            property.zoomLevels,\n            property._stringEncodedNumeralDynamicMask,\n            1\n        );\n        if (\n            property.interpolationMode === InterpolationMode.Exponential &&\n            property.exponent !== undefined\n        ) {\n            (maskInterpolant as ExponentialInterpolant).exponent = property.exponent;\n        }\n        maskInterpolant.evaluate(level);\n\n        return (\n            interpolant.resultBuffer[0] *\n            (1 + maskInterpolant.resultBuffer[0] * (pixelToMeters - 1))\n        );\n    }\n}\n\nfunction getInterpolatedColor(property: InterpolatedProperty, level: number): number {\n    const nChannels = property.values.length / property.zoomLevels.length;\n    const interpolant = new interpolants[property.interpolationMode](\n        property.zoomLevels,\n        property.values,\n        nChannels\n    );\n    if (\n        property.interpolationMode === InterpolationMode.Exponential &&\n        property.exponent !== undefined\n    ) {\n        (interpolant as ExponentialInterpolant).exponent = property.exponent;\n    }\n    interpolant.evaluate(level);\n\n    assert(nChannels === 3 || nChannels === 4);\n    // ColorUtils.getHexFromRgba() does not clamp the values which may be out of\n    // color channels range (0 <= c <= 1) after interpolation.\n    if (nChannels === 4) {\n        return ColorUtils.getHexFromRgba(\n            THREE.Math.clamp(interpolant.resultBuffer[0], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[1], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[2], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[3], 0, 1)\n        );\n    } else {\n        return ColorUtils.getHexFromRgb(\n            THREE.Math.clamp(interpolant.resultBuffer[0], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[1], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[2], 0, 1)\n        );\n    }\n}\n\n/**\n * Convert JSON representation of interpolated property to internal, normalized version that\n * can be evaluated by [[getPropertyValue]].\n */\nexport function createInterpolatedProperty(\n    prop: InterpolatedPropertyDefinition<unknown>\n): InterpolatedProperty | undefined {\n    removeDuplicatePropertyValues(prop);\n\n    const interpolationMode =\n        prop.interpolation !== undefined\n            ? InterpolationMode[prop.interpolation]\n            : InterpolationMode.Discrete;\n\n    const zoomLevels = new Float32Array(prop.zoomLevels);\n\n    const firstValue = prop.values[0];\n    switch (typeof firstValue) {\n        default:\n        case \"number\":\n        case \"boolean\":\n            return {\n                interpolationMode,\n                zoomLevels,\n                values: new Float32Array(prop.values as any),\n                exponent: prop.exponent\n            };\n        case \"string\":\n            // TODO: Minimize effort for pre-matching the numeral format.\n            const matchedFormat = StringEncodedNumeralFormats.find(format =>\n                format.regExp.test(firstValue)\n            );\n\n            if (matchedFormat === undefined) {\n                if (interpolationMode === InterpolationMode.Discrete) {\n                    return {\n                        interpolationMode,\n                        zoomLevels,\n                        values: prop.values\n                    };\n                }\n\n                logger.error(`No StringEncodedNumeralFormat matched ${firstValue}.`);\n                return undefined;\n            }\n\n            let needsMask = false;\n\n            const propValues = new Float32Array(prop.values.length * matchedFormat.size);\n            const maskValues = new Float32Array(prop.values.length);\n            needsMask = procesStringEnocodedNumeralInterpolatedProperty(\n                matchedFormat,\n                prop as InterpolatedPropertyDefinition<string>,\n                propValues,\n                maskValues\n            );\n\n            return {\n                interpolationMode,\n                zoomLevels,\n                values: propValues,\n                exponent: prop.exponent,\n                _stringEncodedNumeralType: matchedFormat.type,\n                _stringEncodedNumeralDynamicMask: needsMask ? maskValues : undefined\n            };\n    }\n}\n\nfunction removeDuplicatePropertyValues<T>(p: InterpolatedPropertyDefinition<T>) {\n    const eps = 0.001;\n\n    // detect cubic interpolations and remove stops\n    // closer than `eps`, this is needed to avoid\n    // possible NaN generated by the cubic interpolator.\n    const isCubic = p.interpolation === \"Cubic\";\n\n    for (let i = 0; i < p.values.length; ++i) {\n        const firstIdx = p.zoomLevels.findIndex(a => {\n            return isCubic ? Math.abs(a - p.zoomLevels[i]) < eps : a === p.zoomLevels[i];\n        });\n        if (firstIdx !== i) {\n            p.zoomLevels.splice(--i, 1);\n            p.values.splice(--i, 1);\n        }\n    }\n}\n\nfunction procesStringEnocodedNumeralInterpolatedProperty(\n    baseFormat: StringEncodedNumeralFormat,\n    prop: InterpolatedPropertyDefinition<string>,\n    propValues: Float32Array,\n    maskValues: Float32Array\n): boolean {\n    let needsMask = false;\n    const allowedValueFormats =\n        baseFormat.type === StringEncodedNumeralType.Meters ||\n        baseFormat.type === StringEncodedNumeralType.Pixels\n            ? StringEncodedMetricFormats\n            : StringEncodedColorFormats;\n\n    for (let valueIdx = 0; valueIdx < prop.values.length; ++valueIdx) {\n        let matched = false;\n        for (const valueFormat of allowedValueFormats) {\n            const value = prop.values[valueIdx];\n            matched = valueFormat.decoder(value, tmpBuffer);\n            if (!matched) {\n                continue;\n            }\n\n            if (valueFormat.mask !== undefined) {\n                maskValues[valueIdx] = valueFormat.mask;\n                needsMask = true;\n            }\n\n            for (let i = 0; i < valueFormat.size; ++i) {\n                propValues[valueIdx * valueFormat.size + i] = tmpBuffer[i];\n            }\n            break;\n        }\n        if (!matched) {\n            throw Error(\n                `Not all interpolation values match the same format: ${JSON.stringify(prop)}`\n            );\n        }\n    }\n\n    return needsMask;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the [[Box3Like]] interface.\n *\n * @param object A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[OrientedBox3Like]] is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[OrientedBox3Like]].\n *\n * @param object The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     * @param result The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param result The optional object used to store the resulting world position, result must\n     * implement [[Vector3Like]].\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the [[TransformLike]] of the local tangent space at the given geo coordinates.\n     *\n     * @param geoPoint The geo coordinates.\n     * @param result The [[TransformLike]].\n     */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param result The resulting [[OrientedBox3Like]].\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid world position for the given source projection.\n     * @returns The world position reprojected using this [[Projection]].\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): typeof result;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinates } from \"./GeoCoordinates\";\n\nimport * as THREE from \"three\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {}\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west < east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.Math.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.Math.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest, this.northEast);\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinates) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        if (east > west) {\n            return point.longitude >= west && point.longitude < east;\n        }\n\n        return point.longitude > east || point.longitude <= west;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme The subdivision scheme used by this `TilingScheme`.\n     * @param projection The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey The [[TileKey]].\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the [[TileKey]] from the given geo position and level.\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of [[TileKey]]s contained in the given [[GeoBox]].\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * @param tileKey The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey The `TileKey`.\n     * @param result The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Identifier to use the OmvTomTomFeatureModifier in the OmvDecoder.\n     */\n    tomTom\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str The string to check against a filter.\n     * @param filterString The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.indexOf(filterString.value) >= 0;\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @hidden\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n    createTileInfo?: boolean;\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    /**\n     * Identifier used to choose OmvFeatureModifier, if undefined [[OmvGenericFeatureModifier]] is\n     * used.\n     */\n    featureModifierId?: FeatureModifierId;\n\n    enableElevationOverlay?: boolean;\n}\n\n/**\n * Default OMV tile decoder service type.\n *\n * Used for requesting decoder services using [[WorkerServiceManager]].\n */\nexport const OMV_TILE_DECODER_SERVICE_TYPE = \"omv-tile-decoder\";\n\n/**\n * Default OMV tiler service type.\n *\n * Used for requesting tiler services using [[WorkerServiceManager]].\n */\nexport const OMV_TILER_SERVICE_TYPE = \"omv-tiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n// tslint:disable: no-bitwise\n//    Allow bitwise operations for colors decoding\n\n// tslint:disable-next-line: no-bitwise\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h Hue component value between 0 and 1.\n     * @param s Saturation value between 0 and 1.\n     * @param l Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number): { r: number; g: number; b: number; a: number } {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return {\n            r: ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            g: ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            b: ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            a:\n                (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n                HEX_FULL_CHANNEL\n        };\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { StringEncodedNumeralType } from \"./StringEncodedNumeral\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Property which value is interpolated across different zoom levels.\n */\nexport interface InterpolatedProperty {\n    /**\n     * Interpolation mode that should be used for this property.\n     */\n    interpolationMode: InterpolationMode;\n\n    /**\n     * Zoom level keys array.\n     */\n    zoomLevels: Float32Array;\n\n    /**\n     * Property values array.\n     */\n    values: ArrayLike<any>;\n\n    /**\n     * Exponent used in interpolation. Only valid with `Exponential` [[InterpolationMode]].\n     */\n    exponent?: number;\n\n    /**\n     * @hidden\n     * [[StringEncodedNumeral]] type needed to interpret interpolated values back to numbers.\n     */\n    _stringEncodedNumeralType?: StringEncodedNumeralType;\n\n    /**\n     * @hidden\n     * Array of `0` and `1`mask values used to modify the interpolation behaviour of some\n     * [[StringEncodedNumeral]]s.\n     */\n    _stringEncodedNumeralDynamicMask?: Float32Array;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan || 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(): number {\n        return 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n}\n\n/**\n * [[SubdivisionScheme]] representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row The requested row. Must be less than 2 to the power of level.\n     * @param column The requested column. Must be less than 2 to the power of level.\n     * @param level The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 The Morton code to be converted.\n     * @returns A new instance of [[TileKey]].\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        // tslint:disable:no-bitwise\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        // tslint:enable:no-bitwise\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level The level for the tile key.\n     * @param coordX The X coordinate.\n     * @param coordY The Y coordinate.\n     * @param totalWidth The maximum X coordinate.\n     * @param totalHeight The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, [[TileKey.fromRowColumnLevel]] should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row Represents the row in the quadtree.\n     * @param column Represents the column in the quadtree.\n     * @param level Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        // tslint:disable-next-line:no-bitwise\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        // tslint:disable:no-bitwise\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            // tslint:disable:no-bitwise\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n            // tslint:enable:no-bitwise\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        // tslint:disable:no-bitwise\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n        // tslint:enable:no-bitwise\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta The number of levels relative to its parent quadkey. Must be greater or equal to\n     * 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        // tslint:disable-next-line:no-bitwise\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        // tslint:disable-next-line:no-bitwise\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"WorkerService\", { enabled: false });\n\ndeclare let self: Worker;\n\n/**\n * Response for [[WorkerService]] procession results.\n */\nexport interface WorkerServiceResponse {\n    /**\n     * Response object.\n     */\n    response: any;\n\n    /**\n     * Transfer list containing a list of [[ArrayBuffer]] which transfer ownership from web worker\n     * to UI thread.\n     */\n    transferList?: ArrayBuffer[];\n}\n\n/**\n * Header information for a [[RequestMessage]].\n */\ninterface RequestEntry {\n    /**\n     * ID of service.\n     */\n    service: string;\n\n    /**\n     * Unique ID of message.\n     */\n    messageId: number;\n\n    /**\n     * Contains `true` if message has been processed, and response has been sent.\n     */\n    responseSent: boolean;\n}\n\n/**\n * Worker Service communication helper.\n *\n * Listens to Web Worker messages from [[ConcurrentWorkerSet]] and implements:\n *  - worker service initialization\n *  - request/response scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like [[TileDecoderService]].\n *\n * Communication peer for [[ConcurrentWorkerSet]].\n */\nexport abstract class WorkerService {\n    private m_pendingRequests: Map<number, RequestEntry> = new Map();\n\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId The service id.\n     */\n    constructor(readonly serviceId: string) {\n        self.addEventListener(\"message\", this.onMessage);\n\n        const isInitializedMessage: WorkerServiceProtocol.InitializedMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    destroy() {\n        this.cancelAllPendingRequests();\n\n        self.removeEventListener(\"message\", this.onMessage);\n    }\n\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message `MessageEvent.data` as received by `WorkerService`.\n     */\n    protected handleMessage(message: any): void {\n        logger.error(`[${this.serviceId}]: Invalid message ${message.type}`);\n    }\n\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request [[RequestMessage.request]] as received by `WorkerService`.\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        throw new Error(`ServiceAdapter[${this.serviceId}]: Invalid request '${request.type}'`);\n    }\n\n    /**\n     * Central message handler for this service.\n     *\n     * Responsible for filtering message target and managing request/response sequence.\n     *\n     * @param message Message to be dispatched.\n     */\n    private onMessage = (message: MessageEvent) => {\n        if (typeof message.data.service !== \"string\" || message.data.service !== this.serviceId) {\n            return;\n        }\n\n        try {\n            if (WorkerServiceProtocol.isRequestMessage(message.data)) {\n                const request = message.data;\n                const requestEntry = {\n                    service: request.service,\n                    messageId: request.messageId,\n                    responseSent: false\n                };\n                this.m_pendingRequests.set(request.messageId, requestEntry);\n                this.tryHandleRequest(request.request)\n                    .then(response => {\n                        this.doSendResponse(\n                            requestEntry,\n                            {\n                                service: this.serviceId,\n                                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                                messageId: request.messageId,\n                                response: response.response\n                            },\n                            response.transferList\n                        );\n                    })\n                    .catch(error => {\n                        this.doSendResponse(requestEntry, {\n                            service: this.serviceId,\n                            type: WorkerServiceProtocol.ServiceMessageName.Response,\n                            messageId: request.messageId,\n                            errorMessage: error.toString(),\n                            errorStack: error.stack\n                        });\n                    });\n            } else {\n                this.tryHandleMessage(message.data);\n            }\n        } catch (err) {\n            logger.error(`[${this.serviceId}]: Unhandled exception when handling ${message.type}`);\n        }\n    };\n\n    /**\n     * Safety belt over [[handleMessage]] for correct exception handling & logging.\n     */\n    private tryHandleMessage(message: any): void {\n        try {\n            this.handleMessage(message);\n        } catch (error) {\n            logger.error(`[${this.serviceId}]: Failed, handling message ${message.type}`);\n        }\n    }\n\n    /**\n     * Safety belt over [[handleRequest]] for correct exception handling in promise chain.\n     */\n    private tryHandleRequest(request: any): Promise<WorkerServiceResponse> {\n        try {\n            return this.handleRequest(request);\n        } catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(`[${this.serviceId}]: Failure`, error);\n            return Promise.reject(error);\n        }\n    }\n\n    private doSendResponse(\n        requestEntry: RequestEntry,\n        response: WorkerServiceProtocol.ResponseMessage,\n        transferList?: ArrayBuffer[]\n    ) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n\n        if (transferList !== undefined) {\n            self.postMessage(response, transferList);\n        } else {\n            self.postMessage(response);\n        }\n\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    }\n\n    private cancelAllPendingRequests() {\n        this.m_pendingRequests.forEach(requestEntry => {\n            this.doSendResponse(requestEntry, {\n                service: this.serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                messageId: requestEntry.messageId,\n                errorMessage: \"cancelled\"\n            });\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EarthConstants, webMercatorProjection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { OmvDecoder } from \"./OmvDecoder\";\nimport { VTJsonDataAdapterId } from \"./VTJsonDataAdapter\";\n\n/**\n * @hidden\n */\nexport function isArrayBufferLike(data: any): data is ArrayBufferLike {\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n        return data instanceof ArrayBuffer || data instanceof SharedArrayBuffer;\n    } else {\n        return data instanceof ArrayBuffer;\n    }\n}\n\n/**\n * @hidden\n */\nexport function lat2tile(\n    lat: number,\n    zoom: number,\n    func: (x: number) => number = Math.floor\n): number {\n    return func(\n        ((1 -\n            Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) /\n                Math.PI) /\n            2) *\n            Math.pow(2, zoom)\n    );\n}\n\n/**\n * @hidden\n */\nexport function tile2lat(y: number, level: number): number {\n    const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, level);\n    return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nexport interface WorldTileProjectionCookie {\n    extents: number;\n    top: number;\n    left: number;\n    scale: number;\n}\n\nexport function createWorldTileTransformationCookie(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo\n) {\n    const { north, west } = decodeInfo.geoBox;\n    const N = Math.log2(extents);\n    const scale = Math.pow(2, decodeInfo.tileKey.level + N);\n    return {\n        extents,\n        scale,\n        top: lat2tile(\n            north,\n            decodeInfo.tileKey.level + N,\n            decodeInfo.adapterId === VTJsonDataAdapterId ? Math.round : Math.floor\n        ),\n        left: ((west + 180) / 360) * scale\n    };\n}\n\n/**\n * @hidden\n */\nexport function tile2world(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        ((left + position.x) / scale) * R,\n        ((top + (flipY ? -position.y : position.y)) / scale) * R\n    );\n}\n\n/**\n * @hidden\n */\nexport function world2tile(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        (position.x / R) * scale - left,\n        (flipY ? -1 : 1) * ((position.y / R) * scale - top)\n    );\n}\n\nconst tempWorldPos = new THREE.Vector2();\n\nexport function webMercatorTile2TargetWorld(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    const worldPos = tile2world(extents, decodeInfo, position, flipY, tempWorldPos);\n    target.set(worldPos.x, worldPos.y, 0);\n    decodeInfo.targetProjection.reprojectPoint(webMercatorProjection, target, target);\n}\n\nexport function webMercatorTile2TargetTile(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    webMercatorTile2TargetWorld(extents, decodeInfo, position, target, flipY);\n    target.sub(decodeInfo.center);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ExtendedTileInfo,\n    GeometryKind,\n    IndexedTechnique,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    GeoBox,\n    OrientedBox3,\n    Projection,\n    TileKey,\n    TilingScheme,\n    webMercatorTilingScheme\n} from \"@here/harp-geoutils\";\nimport {\n    ThemedTileDecoder,\n    TileDecoderService,\n    WorkerServiceManager\n} from \"@here/harp-mapview-decoder/index-worker\";\nimport { LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// tslint:disable-next-line:max-line-length\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvProtobufDataAdapter } from \"./OmvData\";\nimport {\n    ComposedDataFilter,\n    OmvFeatureFilter,\n    OmvFeatureModifier,\n    OmvGenericFeatureFilter,\n    OmvGenericFeatureModifier\n} from \"./OmvDataFilter\";\nimport { OmvDecodedTileEmitter } from \"./OmvDecodedTileEmitter\";\nimport {\n    FeatureModifierId,\n    OMV_TILE_DECODER_SERVICE_TYPE,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription\n} from \"./OmvDecoderDefs\";\nimport { OmvTileInfoEmitter } from \"./OmvTileInfoEmitter\";\nimport { OmvTomTomFeatureModifier } from \"./OmvTomTomFeatureModifier\";\nimport { WorldTileProjectionCookie } from \"./OmvUtils\";\nimport { StyleSetDataFilter } from \"./StyleSetDataFilter\";\nimport { VTJsonDataAdapter } from \"./VTJsonDataAdapter\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecoder\", { enabled: false });\n\nexport class Ring {\n    readonly winding: boolean;\n\n    /**\n     * Constructs a new [[Ring]].\n     *\n     * @param extents The extents of the enclosing layer.\n     * @param vertexStride The stride of this elements stored in 'contour'.\n     * @param contour The [[Array]] containing the projected world coordinates.\n     */\n    constructor(\n        readonly extents: number,\n        readonly vertexStride: number,\n        readonly contour: number[]\n    ) {\n        this.winding = this.area() < 0;\n    }\n\n    area(): number {\n        const points = this.contour;\n        const stride = this.vertexStride;\n        const n = points.length / stride;\n\n        let area = 0.0;\n\n        for (let p = n - 1, q = 0; q < n; p = q++) {\n            area +=\n                points[p * stride] * points[q * stride + 1] -\n                points[q * stride] * points[p * stride + 1];\n        }\n\n        return area / 2;\n    }\n}\n\nexport interface IOmvEmitter {\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        feature: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        feature: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n}\n\n/**\n * The class [[OmvDataAdapter]] prepares protobuf encoded OMV data so they\n * can be processed by [[OmvDecoder]].\n */\nexport interface OmvDataAdapter {\n    /**\n     * OmvDataAdapter's id.\n     */\n    id: string;\n\n    /**\n     * Checks if the given data can be processed by this OmvDataAdapter.\n     *\n     * @param data The raw data to adapt.\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean;\n\n    /**\n     * Process the given raw data.\n     *\n     * @param data The raw data to process.\n     * @param tileKey The TileKey of the enclosing Tile.\n     * @param geoBox The GeoBox of the enclosing Tile.\n     */\n    process(data: ArrayBufferLike | {}, tileKey: TileKey, geoBox: GeoBox): void;\n}\n\nexport class OmvDecoder implements IGeometryProcessor {\n    // The emitters are both optional now.\n    // TODO: Add option to control emitter generation.\n    private m_decodedTileEmitter: OmvDecodedTileEmitter | undefined;\n    private m_infoTileEmitter: OmvTileInfoEmitter | undefined;\n    private readonly m_dataAdapters: OmvDataAdapter[] = [];\n\n    constructor(\n        private readonly m_projection: Projection,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_showMissingTechniques: boolean,\n        private readonly m_dataFilter?: OmvFeatureFilter,\n        private readonly m_featureModifier?: OmvFeatureModifier,\n        private readonly m_gatherFeatureAttributes = false,\n        private readonly m_createTileInfo = false,\n        private readonly m_gatherRoadSegments = false,\n        private readonly m_skipShortLabels = true,\n        private readonly m_storageLevelOffset = 0,\n        private readonly m_enableElevationOverlay = false,\n        private readonly m_languages?: string[]\n    ) {\n        const styleSetDataFilter = new StyleSetDataFilter(m_styleSetEvaluator);\n        const dataPreFilter = m_dataFilter\n            ? new ComposedDataFilter([styleSetDataFilter, m_dataFilter])\n            : styleSetDataFilter;\n        // Register the default adapters.\n        this.m_dataAdapters.push(new OmvProtobufDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new VTJsonDataAdapter(this, dataPreFilter, logger));\n    }\n\n    get storageLevelOffset() {\n        return this.m_storageLevelOffset;\n    }\n\n    /**\n     * Given a tile and a protobuffer, it returns a decoded tile and it creates the geometries that\n     * belong to it.\n     *\n     * @param tileKey The tile to be decoded.\n     * @param data The protobuffer to decode from.\n     * @returns A [[DecodedTile]]\n     */\n    getDecodedTile(tileKey: TileKey, data: ArrayBufferLike | {}): DecodedTile {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return {\n                techniques: [],\n                geometries: []\n            };\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const tileSizeOnScreen = this.estimatedTileSizeOnScreen();\n        const decodeInfo = new OmvDecoder.DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            tileSizeOnScreen\n        );\n\n        this.m_decodedTileEmitter = new OmvDecodedTileEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_enableElevationOverlay,\n            this.m_languages\n        );\n        if (this.m_createTileInfo) {\n            const storeExtendedTags = true;\n            this.m_infoTileEmitter = new OmvTileInfoEmitter(\n                decodeInfo,\n                this.m_styleSetEvaluator,\n                storeExtendedTags,\n                this.m_gatherRoadSegments\n            );\n        }\n\n        dataAdapter.process(data, tileKey, decodeInfo.geoBox);\n        const decodedTile = this.m_decodedTileEmitter.getDecodedTile();\n\n        if (this.m_createTileInfo) {\n            decodedTile.tileInfo = this.m_infoTileEmitter!.getTileInfo();\n        }\n\n        return decodedTile;\n    }\n\n    getTileInfo(tileKey: TileKey, data: ArrayBufferLike | {}): ExtendedTileInfo {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return new ExtendedTileInfo(tileKey, false);\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const tileSizeOnScreen = this.estimatedTileSizeOnScreen();\n        const decodeInfo = new OmvDecoder.DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            tileSizeOnScreen\n        );\n\n        const storeExtendedTags = true;\n        this.m_infoTileEmitter = new OmvTileInfoEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            storeExtendedTags,\n            this.m_gatherRoadSegments\n        );\n\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                adapter.process(data, tileKey, decodeInfo.geoBox);\n                break;\n            }\n        }\n\n        return this.m_infoTileEmitter.getTileInfo();\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPointFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"point\"),\n            GeometryKind.Label\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPointFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessLineFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"line\"),\n            GeometryKind.Line\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processLineFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPolygonFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"polygon\"),\n            GeometryKind.Area\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPolygonFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    /**\n     * Estimate the number of screen pixels a tile will cover. The actual number of pixels will be\n     * influenced by tilt and rotation, so estimated the number here should be an upper bound.\n     *\n     * @returns {number} Estimated number of screen pixels.\n     */\n    protected estimatedTileSizeOnScreen(): number {\n        const tileSizeOnScreen = 256 * Math.pow(2, -this.m_storageLevelOffset);\n        return tileSizeOnScreen;\n    }\n\n    private getZoomLevel(storageLevel: number) {\n        return Math.max(0, storageLevel - (this.m_storageLevelOffset || 0));\n    }\n\n    private applyKindFilter(\n        techniques: IndexedTechnique[],\n        defaultKind: GeometryKind\n    ): IndexedTechnique[] {\n        if (this.m_dataFilter !== undefined && this.m_dataFilter.hasKindFilter) {\n            techniques = techniques.filter(technique => {\n                return technique.kind === undefined\n                    ? this.m_dataFilter!.wantsKind(defaultKind)\n                    : this.m_dataFilter!.wantsKind(technique.kind as GeometryKind);\n            });\n        }\n        return techniques;\n    }\n}\n\nexport namespace OmvDecoder {\n    export class DecodeInfo {\n        /**\n         * The [[GeoBox]] of the Tile to decode.\n         */\n        readonly geoBox: GeoBox;\n\n        readonly projectedBoundingBox = new OrientedBox3();\n\n        /**\n         * The tile bounds in the OMV tile space [[webMercatorTilingScheme]].\n         */\n        readonly tileBounds = new THREE.Box3();\n\n        /**\n         * The tile size in the OMV tile space [[webMercatorTilingScheme]].\n         */\n        readonly tileSize = new THREE.Vector3();\n\n        /**\n         * The center of the Tile in the target [[Projection]] space.\n         * Geometries generated by decoding the OMV tile must be relative\n         * to this position.\n         */\n        readonly center = new THREE.Vector3();\n\n        /**\n         * The tile bounds in the world space of the\n         * target projection [[DecodeInfo.targetProjection]].\n         *\n         * @deprecated\n         */\n        readonly projectedTileBounds = new THREE.Box3();\n\n        worldTileProjectionCookie?: WorldTileProjectionCookie;\n\n        /**\n         * Constructs a new [[DecodeInfo]].\n         *\n         * @param adapterId The id of the [[OmvDataAdapter]] used for decoding.\n         * @param targetProjection The [[Projection]]\n         * @param tileKey The [[TileKey]] of the Tile to decode.\n         * @param tileSizeOnScreen The estimated size of the Tile in pixels.\n         */\n        constructor(\n            readonly adapterId: string,\n            readonly targetProjection: Projection,\n            readonly tileKey: TileKey,\n            readonly tileSizeOnScreen: number\n        ) {\n            this.geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n            this.targetProjection.projectBox(this.geoBox, this.projectedTileBounds);\n\n            this.targetProjection.projectBox(this.geoBox, this.projectedBoundingBox);\n            this.projectedBoundingBox.getCenter(this.center);\n\n            this.tilingScheme.getWorldBox(tileKey, this.tileBounds);\n            this.tileBounds.getSize(this.tileSize);\n        }\n\n        /**\n         * The [[TilingScheme]] of the OMV data, currenly it is defined\n         * to be [[webMercatorTilingScheme]].\n         */\n        get tilingScheme(): TilingScheme {\n            return webMercatorTilingScheme;\n        }\n\n        /**\n         * The [[Projection]] of OMV tiled data, currenly it is defined\n         * to be [[webMercatorProjection]].\n         */\n        get sourceProjection(): Projection {\n            return this.tilingScheme.projection;\n        }\n    }\n}\n\nexport class OmvTileDecoder extends ThemedTileDecoder {\n    private m_showMissingTechniques: boolean = false;\n    private m_featureFilter?: OmvFeatureFilter;\n    private m_featureModifier?: OmvFeatureModifier;\n    private m_gatherFeatureAttributes: boolean = false;\n    private m_createTileInfo: boolean = false;\n    private m_gatherRoadSegments: boolean = false;\n    private m_skipShortLabels: boolean = true;\n    private m_enableElevationOverlay: boolean = false;\n\n    /** @override */\n    connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    /** @override */\n    decodeThemedTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        const startTime = PerformanceTimer.now();\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_createTileInfo,\n            this.m_gatherRoadSegments,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const decodedTile = decoder.getDecodedTile(tileKey, data);\n\n        decodedTile.decodeTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(decodedTile);\n    }\n\n    /** @override */\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        const startTime = PerformanceTimer.now();\n\n        const styleSetEvaluator = this.m_styleSetEvaluator;\n        if (styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"no theme loaded\"));\n        }\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_createTileInfo,\n            this.m_gatherRoadSegments,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const tileInfo = decoder.getTileInfo(tileKey, data);\n\n        tileInfo.setupTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(tileInfo);\n    }\n\n    /** @override */\n    configure(\n        styleSet: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        super.configure(styleSet, definitions, languages, options);\n\n        if (options) {\n            const omvOptions = options as OmvDecoderOptions;\n\n            if (omvOptions.showMissingTechniques !== undefined) {\n                this.m_showMissingTechniques = omvOptions.showMissingTechniques === true;\n            }\n\n            if (omvOptions && omvOptions.filterDescription !== undefined) {\n                if (omvOptions.filterDescription !== null) {\n                    // create new filter/modifier from description\n                    this.m_featureFilter = new OmvGenericFeatureFilter(\n                        omvOptions.filterDescription\n                    );\n                    this.m_featureModifier = this.createFeatureModifier(\n                        omvOptions.filterDescription,\n                        omvOptions.featureModifierId\n                    );\n                } else {\n                    // null is the signal to clear the filter/modifier\n                    this.m_featureFilter = undefined;\n                    this.m_featureModifier = undefined;\n                }\n            }\n\n            if (omvOptions.gatherFeatureAttributes !== undefined) {\n                this.m_gatherFeatureAttributes = omvOptions.gatherFeatureAttributes === true;\n            }\n            if (omvOptions.createTileInfo !== undefined) {\n                this.m_createTileInfo = omvOptions.createTileInfo === true;\n            }\n            if (omvOptions.gatherRoadSegments !== undefined) {\n                this.m_gatherRoadSegments = omvOptions.gatherRoadSegments === true;\n            }\n            if (omvOptions.skipShortLabels !== undefined) {\n                this.m_skipShortLabels = omvOptions.skipShortLabels;\n            }\n            if (omvOptions.enableElevationOverlay !== undefined) {\n                this.m_enableElevationOverlay = omvOptions.enableElevationOverlay;\n            }\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n    }\n\n    private createFeatureModifier(\n        filterDescription: OmvFeatureFilterDescription,\n        featureModifierId?: FeatureModifierId\n    ): OmvFeatureModifier {\n        if (featureModifierId === FeatureModifierId.tomTom) {\n            return new OmvTomTomFeatureModifier(filterDescription);\n        } else {\n            return new OmvGenericFeatureModifier(filterDescription);\n        }\n    }\n}\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTileDecoderService {\n    /**\n     * Register[[OmvTileDecoder]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILE_DECODER_SERVICE_TYPE,\n            factory: (serviceId: string) =>\n                TileDecoderService.start(serviceId, new OmvTileDecoder())\n        });\n    }\n}\n\n/**\n * Starts an OMV decoder service.\n *\n * @deprecated Please use [[OmvTileDecoderService.start]].\n */\nexport default class OmvWorkerClient {\n    // TODO(HARP-3651): remove this class when clients are ready\n    constructor() {\n        logger.warn(\"OmvWorkerClient class is deprecated, please use OmvTileDecoderService.start\");\n        OmvTileDecoderService.start();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri URI of parent resource\n * @param childUri URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(?:[a-z]+:)?//\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\nimport { Color } from \"three\";\nimport { ColorUtils } from \"./ColorUtils\";\n\nconst tmpColor = new Color();\n\n/**\n * Enumeration of supported string encoded numerals.\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex,\n    RGB,\n    RGBA,\n    HSL\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){3,4}|[0-9A-Fa-f]{3,4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(\n            size === 3 || size === 4 || size === 6 || size === 8,\n            `Matched incorrect hex color format`\n        );\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 3 || size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 6 || size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\nconst StringEncodedRGB: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGB,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgb\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5])) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGB.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        return true;\n    }\n};\nconst StringEncodedRGBA: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGBA,\n    size: 4,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgba\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:(0(?:\\.[0-9]+)?|1(?:\\.0+)?)) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGBA.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        target[3] = parseFloat(channels[4]);\n        return true;\n    }\n};\nconst StringEncodedHSL: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.HSL,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^hsl\\( ?((?:[0-9]|[1-9][0-9]|1[0-9]{1,2}|2[0-9]{1,2}|3[0-5][0-9]|360)), ?(?:([0-9]|[1-9][0-9]|100)%), ?(?:([0-9]|[1-9][0-9]|100)%) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedHSL.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        tmpColor.setHSL(\n            parseInt(channels[1], 10) / 360,\n            parseInt(channels[2], 10) / 100,\n            parseInt(channels[3], 10) / 100\n        );\n        target[0] = tmpColor.r;\n        target[1] = tmpColor.g;\n        target[2] = tmpColor.b;\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedHex,\n    StringEncodedRGB,\n    StringEncodedRGBA,\n    StringEncodedHSL\n];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral The string representing numeric value.\n * @param pixelToMeters The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    let result: number | undefined;\n    const formatMatch = (format: StringEncodedNumeralFormat) => {\n        if (format.decoder(numeral, tmpBuffer)) {\n            switch (format.type) {\n                case StringEncodedNumeralType.Meters:\n                    result = tmpBuffer[0];\n                    break;\n                case StringEncodedNumeralType.Pixels:\n                    result = tmpBuffer[0] * pixelToMeters;\n                    break;\n                case StringEncodedNumeralType.Hex:\n                case StringEncodedNumeralType.RGBA:\n                    result = ColorUtils.getHexFromRgba(\n                        tmpBuffer[0],\n                        tmpBuffer[1],\n                        tmpBuffer[2],\n                        tmpBuffer[3]\n                    );\n                    break;\n                case StringEncodedNumeralType.RGB:\n                case StringEncodedNumeralType.HSL:\n                    result = ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n                    break;\n                default:\n                    result = tmpBuffer[0];\n                    break;\n            }\n            return true;\n        }\n        return false;\n    };\n    StringEncodedNumeralFormats.some(formatMatch);\n    return result;\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    const matchedFormat = matchFormat(StringEncodedColorFormats, color, tmpBuffer);\n    if (matchedFormat === undefined) {\n        return undefined;\n    }\n    switch (matchedFormat.type) {\n        case StringEncodedNumeralType.Hex:\n        case StringEncodedNumeralType.RGBA:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        case StringEncodedNumeralType.RGB:\n        case StringEncodedNumeralType.HSL:\n            return ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n        default:\n            return tmpBuffer[0];\n    }\n}\n\nfunction matchFormat(\n    formats: StringEncodedNumeralFormat[],\n    numeral: string,\n    result: number[]\n): StringEncodedNumeralFormat | undefined {\n    return formats.find(format => {\n        return format.decoder(numeral, result) ? true : false;\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\nimport { isJsonExpr, JsonExpr } from \"./Expr\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedProperty\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    DynamicProperty,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n    extends?: string | Theme | Array<string | Theme>;\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n\n    /**\n     * Optional list of symbolic priorities for the object\n     * created using this [[Theme]].\n     *\n     * The attribute `styleSet` and `category` of the [[Technique]]\n     * are used together with [[Theme.priorities]] to sort\n     * the objects created using this [[Theme]], for example:\n     *\n     * ```json\n     * {\n     *      \"priorities\": [\n     *          { \"group\": \"tilezen\", \"category\": \"outline-1\" }\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"solid-line\",\n     *              \"styleSet\": \"tilezen\",\n     *              \"category\": \"outline-1\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    priorities?: StylePriority[];\n\n    /**\n     * Optional list of priorities for the screen-space\n     * objects created using this style.\n     *\n     * The name of the `category` attribute of the screen-space\n     * technique (e.g. `\"text\"`) must match on the strings\n     * defined by this [[Theme.labelPriorities]], for example:\n     *\n     * ```json\n     * {\n     *      \"labelPriorities\": [\n     *          \"continent-labels\",\n     *          \"country-labels\",\n     *          \"state-labels\"\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"text\",\n     *              \"category\": \"state-labels\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    labelPriorities?: string[];\n}\n\n/**\n * A type representing symbolic render orders.\n */\nexport interface StylePriority {\n    /**\n     * The group of this [[StylePriority]].\n     */\n    group: string;\n\n    /**\n     * The category of this [[StylePriority]].\n     */\n    category?: string;\n}\n\n/**\n * A type representing HARP themes with all the styleset declarations\n * grouped in one [[Array]].\n *\n * @internal This type will merge with [[Theme]].\n */\nexport type FlatTheme = Omit<Theme, \"styles\"> & {\n    /**\n     * The style rules used to render the map.\n     */\n    styles?: StyleSet;\n};\n\n/**\n * Checks if the given definition implements the [[BoxedDefinition]] interface.\n */\nexport function isBoxedDefinition(def: Definition): def is BoxedDefinition {\n    const bdef = def as BoxedDefinition;\n    return (\n        typeof bdef === \"object\" &&\n        bdef !== null &&\n        (typeof bdef.type === \"string\" || typeof bdef.type === \"undefined\") &&\n        (typeof bdef.value === \"string\" ||\n            typeof bdef.value === \"number\" ||\n            typeof bdef.value === \"boolean\" ||\n            isInterpolatedPropertyDefinition(bdef.value) ||\n            isJsonExpr(bdef.value))\n    );\n}\n\nexport function isLiteralDefinition(def: Definition): def is LiteralValue {\n    return typeof def === \"string\" || typeof def === \"number\" || typeof def === \"boolean\";\n}\n\n/**\n * Value definition commons.\n */\nexport interface BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type?: string;\n\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * Possible types of unboxed literal values carried by [[Definition]].\n */\nexport type LiteralValue = string | number | boolean;\n\n/**\n * Boxed definition without type.\n */\nexport interface BoxedAnyDefinition extends BaseValueDefinition {\n    /**\n     * The value of the definition.\n     */\n    value: LiteralValue | JsonExpr;\n}\n\n/**\n * A boxed boolean value definition.\n */\nexport interface BoxedBooleanDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"boolean\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<boolean>;\n}\n\n/**\n * A boxed numerical value definition.\n */\nexport interface BoxedNumericDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"number\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<number>;\n}\n\n/**\n * A boxed string value definition.\n */\nexport interface BoxedStringDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"string\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed color value definition.\n */\nexport interface BoxedColorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed selector value definition.\n */\nexport interface BoxedSelectorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"selector\";\n\n    /**\n     * The value of the definition.\n     *\n     * See [[BaseStyle.when]].\n     */\n    value: string | JsonExpr;\n}\n\n/**\n * A boxed value definition.\n */\nexport type BoxedDefinition =\n    | BoxedAnyDefinition\n    | BoxedBooleanDefinition\n    | BoxedNumericDefinition\n    | BoxedStringDefinition\n    | BoxedColorDefinition\n    | BoxedSelectorDefinition;\n\n/**\n * Possible values for `definitions` element of [Theme].\n */\nexport type Definition = LiteralValue | JsonExpr | BoxedDefinition | StyleDeclaration;\n\n/**\n * An array of [[Definition]]s.\n */\nexport interface Definitions {\n    [name: string]: Definition;\n}\n\n/**\n * Base [StyleSelector] attributes required to match [Style] object against given feature.\n *\n * Contains [Style]'s members related to feature matching in [[StyleSetEvaluator]].\n */\nexport interface StyleSelector {\n    /**\n     * Condition that is applied to feature properties to check if given [[Style]] this feature\n     * should emit geometry of this style.\n     *\n     * Conditions are defined using [[Array]]s describing literals, built-in symbols and function\n     * calls:\n     *  - `[\"has\", string]` returns `true` if the given property exists.\n     *  - `[\"get\", string]` returns the value of the given feature property with the given name.\n     *  - `[\"all\", expressions...]` returns `true` if all the sub expressions evaluate to true.\n     *  - `[\"any\", expressions...]` returns `true` if any sub expression evaluates to true.\n     *  - `[\"in\", expression, [literals...]]` returns `true` if the result of evaluating the first\n     *    expression is included in the given `Array` of literals.\n     *  - `[\"!\", expression]` returns `false` if the sub expression evaluates to `true`.\n     *  - `[\"<\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than the result of evaluating the second expression.\n     *  - `[\">\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than the result of evaluating the second expression.\n     *  - `[\"<=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than or equal the result of evaluating the second expression.\n     *  - `[\">=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than or equal the result of evaluating the second expression.\n     *  - `[\"==\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is equal the result of evaluating the second expression.\n     *  - `[\"!=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is not equal to the result of evaluating the second expression.\n     *  - `[\"length\", expression]` returns the length of the given expression if it evaluates to\n     *    a `string` or an `Array`; otherwise, returns `undefined`.\n     *  - `[\"~=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression contains the `string` obtained from the\n     *    second expression; otherwise, returns `undefined`.\n     *  - `[\"^=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression starts with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     *  - `[\"$=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression ends with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     */\n    when: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * Like [[StyleDeclaration]], but without [[Reference]] type.\n */\nexport type ResolvedStyleDeclaration = Style & StyleSelector;\n\n/**\n * Like [[StyleSet]], but without [[Reference]] type.\n */\nexport type ResolvedStyleSet = ResolvedStyleDeclaration[];\n\n/**\n * Compound type that merges all raw [Style] with selector arguments from [BaseSelector], optionally\n * a [[Reference]].\n */\nexport type StyleDeclaration = (Style & StyleSelector) | JsonExpr;\n\nexport function isActualSelectorDefinition(def: Definition): def is Style & StyleSelector {\n    const styleDef = def as StyleDeclaration;\n    return (\n        typeof styleDef === \"object\" &&\n        styleDef !== null &&\n        !Array.isArray(styleDef) &&\n        typeof styleDef.technique === \"string\"\n    );\n}\n\n/**\n * An array of [[StyleSelector]]s that are used together to define how a [[DataSource]] should be\n * rendered. `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a [[MapView]] via\n * `mapview.theme`.\n */\nexport type StyleSet = StyleDeclaration[];\n\n/**\n * The object that defines what way an item of a [[DataSource]] should be decoded to assemble a\n * tile. [[Style]] is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport interface BaseStyle {\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * The style set referenced by this styling rule.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     */\n    category?: string | JsonExpr;\n\n    /**\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique?: string;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this style creates. Default is\n     * `false`.\n     */\n    transient?: boolean;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    // TODO: Make pixel units default.\n    /**\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     *\n     * @deprecated use \"string encoded numerals\" as documented in TODO, wher eis the doc ?\n     */\n    metricUnit?: \"Meter\" | \"Pixel\";\n\n    /**\n     * XYZ defines the property to display as text label of a feature in the styles.\n     */\n    labelProperty?: string;\n}\n\n/**\n *\n * @defaultSnippets [\n *     {\n *         \"label\": \"New solid-line\",\n *         \"description\": \"Add a new 'solid-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"secondaryColor\": \"#$4ddd\",\n *                 \"secondaryWidth\": \"^${5:2}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New dashed-line\",\n *         \"description\": \"Add a new 'dashed-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"gapSize\": \"^${4:10}\",\n *                 \"dashSize\": \"^${5:10}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New fill\",\n *         \"description\": \"Add a new 'fill' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"fill\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:0}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New text\",\n *         \"description\": \"Add a new 'text' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"text\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New labeled-icon\",\n *         \"description\": \"Add a new 'labeled-icon' marker styling\",\n *         \"body\": {\n *             \"technique\": \"labeled-icon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line-marker\",\n *         \"description\": \"Add a new 'line-marker' marker styling\",\n *         \"body\": {\n *             \"technique\": \"line-marker\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line\",\n *         \"description\": \"Add a new 'line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New segments\",\n *         \"description\": \"Add a new 'segments' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"segments\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New standard\",\n *         \"description\": \"Add a new 'standard' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"standard\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-line\",\n *         \"description\": \"Add a new 'extruded-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"shading\": \"${2:standard}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"lineWidth\": \"^${4:1}\",\n *                 \"caps\": \"${5:Circle}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-polygon\",\n *         \"description\": \"Add a new 'extruded-polygon' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-polygon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\",\n *                 \"lineWidth\": \"^${7:1}\",\n *                 \"lineColor\": \"#${8:c0f}\",\n *                 \"defaultHeight\": \"^${9:20}\",\n *                 \"animateExtrusion\": \"^${10:true}\",\n *                 \"animateExtrusionDuration\": \"^${11:300}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New none\",\n *         \"description\": \"Add a new 'none' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"none\",\n *             \"when\": \"$1\",\n *             \"attr\": {}\n *         }\n *     },\n *     {\n *         \"label\": \"New shader\",\n *         \"description\": \"Add a new 'shader' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"shader\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"primitive\": \"${2:mesh}\",\n *                 \"params\": {}\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New squares\",\n *         \"description\": \"Add a new 'squares' point styling\",\n *         \"body\": {\n *             \"technique\": \"squares\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New circles\",\n *         \"description\": \"Add a new 'circles' point styling\",\n *         \"body\": {\n *             \"technique\": \"circles\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     }\n * ]\n *\n */\nexport type AllStyles =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\nexport type Style = AllStyles;\n/**\n * A dictionary of [[StyleSet]]s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * A reference to a style definition.\n *\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": { \"type\": \"color\", \"value\": \"#f00\" }\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface SquaresStyle extends BaseStyle {\n    technique: \"squares\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface CirclesStyle extends BaseStyle {\n    technique: \"circles\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface PoiStyle extends BaseStyle {\n    technique: \"labeled-icon\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerStyle extends BaseStyle {\n    technique: \"line-marker\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line.\n */\nexport interface LineStyle extends BaseStyle {\n    technique: \"line\";\n    secondaryRenderOrder?: number;\n    secondaryCategory?: string;\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as segments.\n */\nexport interface SegmentsStyle extends BaseStyle {\n    technique: \"segments\";\n    attr?: Attr<SegmentsTechniqueParams>;\n}\n\nexport interface SolidLineStyle extends BaseStyle {\n    technique: \"solid-line\" | \"dashed-line\";\n    secondaryRenderOrder?: number;\n    secondaryCategory?: string;\n    attr?: Attr<SolidLineTechniqueParams>;\n}\n\nexport interface LabelRejectionLineStyle extends BaseStyle {\n    technique: \"label-rejection-line\";\n    attr?: Attr<BaseTechniqueParams>;\n}\n\nexport interface FillStyle extends BaseStyle {\n    technique: \"fill\";\n    attr?: Attr<FillTechniqueParams>;\n}\n\nexport interface StandardStyle extends BaseStyle {\n    technique: \"standard\";\n    attr?: Attr<StandardTechniqueParams>;\n}\n\nexport interface TerrainStyle extends BaseStyle {\n    technique: \"terrain\";\n    attr?: Attr<TerrainTechniqueParams>;\n}\n\nexport interface BasicExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading?: \"basic\";\n    attr?: Attr<BasicExtrudedLineTechniqueParams>;\n}\n\nexport interface StandardExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading: \"standard\";\n    attr?: Attr<StandardExtrudedLineTechniqueParams>;\n}\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonStyle extends BaseStyle {\n    technique: \"extruded-polygon\";\n    attr?: Attr<ExtrudedPolygonTechniqueParams>;\n}\n\nexport interface ShaderStyle extends BaseStyle {\n    technique: \"shader\";\n    attr?: Attr<ShaderTechniqueParams>;\n}\n\nexport interface TextTechniqueStyle extends BaseStyle {\n    technique: \"text\";\n    attr?: Attr<TextTechniqueParams>;\n}\n\nexport interface NoneStyle extends BaseStyle {\n    technique: \"none\";\n    attr?: {\n        [name: string]: any;\n    };\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Light type: ambient.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Ambient Light\",\n *         \"description\": \"Adds a new Ambient Light\",\n *         \"body\": {\n *             \"type\": \"ambient\",\n *             \"name\": \"${1:ambient light}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\"\n *         }\n *     }\n * ]\n */\nexport interface AmbientLight extends BaseLight {\n    type: \"ambient\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity?: number;\n}\n\n/**\n * Light type: directional.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Directional Light\",\n *         \"description\": \"Adds a new Directional Light\",\n *         \"body\": {\n *             \"type\": \"directional\",\n *             \"name\": \"${1:directional-light$:1}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\",\n *             \"direction\": {\n *                 \"x\": \"^${4:1}\",\n *                 \"y\": \"^${5:0}\",\n *                 \"z\": \"^${6:0}\"\n *             }\n *         }\n *     }\n * ]\n */\nexport interface DirectionalLight extends BaseLight {\n    type: \"directional\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity: number;\n    direction: Vector3Like;\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the [[Theme]] object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of [[PoiTableEntry]]s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface for the JSON description of the [[PoiTableEntry]]. The interface is being implemented\n * as [[PoiTableEntry]].\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedProperty, InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    AttrScope,\n    mergeTechniqueDescriptor,\n    TechniqueDescriptor,\n    TechniqueDescriptorRegistry\n} from \"./TechniqueDescriptor\";\n/**\n * Names of the supported texture properties.\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n/**\n * Names of the properties controlling transparency.\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n// TODO: Can be removed, when all when interpolators are implemented as [[Expr]]s\nexport type RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\nexport type RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr | InterpolatedProperty\n        : T[P];\n};\n\nexport const techniqueDescriptors: TechniqueDescriptorRegistry = {};\n\nexport const baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrScopes: {\n        renderOrder: AttrScope.TechniqueGeometry,\n        renderOrderOffset: AttrScope.TechniqueGeometry,\n        enabled: AttrScope.TechniqueGeometry,\n        kind: AttrScope.TechniqueGeometry,\n        transient: AttrScope.TechniqueGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering\n    }\n};\n\nexport const pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            texture: AttrScope.TechniqueGeometry,\n            enablePicking: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueGeometry\n        }\n    }\n);\n\n/**\n * Runtime representation of [[SquaresStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\nexport const squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.squares = squaresTechniquePropTypes;\n\n/**\n * Runtime representation of [[CirclesStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\nexport const circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.circles = circlesTechniquePropTypes;\n\n/**\n * Runtime representation of [[PoiStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of [[LineMarkerStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            priority: AttrScope.TechniqueGeometry,\n            textMinZoomLevel: AttrScope.TechniqueGeometry,\n            textMaxZoomLevel: AttrScope.TechniqueGeometry,\n            iconMinZoomLevel: AttrScope.TechniqueGeometry,\n            iconMaxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            textMayOverlap: AttrScope.TechniqueGeometry,\n            iconMayOverlap: AttrScope.TechniqueGeometry,\n            textReserveSpace: AttrScope.TechniqueGeometry,\n            iconReserveSpace: AttrScope.TechniqueGeometry,\n            renderTextDuringMovements: AttrScope.TechniqueGeometry,\n            alwaysOnTop: AttrScope.TechniqueGeometry,\n            textIsOptional: AttrScope.TechniqueGeometry,\n            showOnMap: AttrScope.TechniqueGeometry,\n            stackMode: AttrScope.TechniqueGeometry,\n            minDistance: AttrScope.TechniqueGeometry,\n            iconIsOptional: AttrScope.TechniqueGeometry,\n            iconFadeTime: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            iconXOffset: AttrScope.TechniqueGeometry,\n            iconYOffset: AttrScope.TechniqueGeometry,\n            iconScale: AttrScope.TechniqueGeometry,\n            screenHeight: AttrScope.TechniqueGeometry,\n            screenWidth: AttrScope.TechniqueGeometry,\n            poiTable: AttrScope.TechniqueGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            poiNameField: AttrScope.TechniqueGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            imageTextureField: AttrScope.TechniqueGeometry,\n            imageTexturePrefix: AttrScope.TechniqueGeometry,\n            imageTexturePostfix: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"line-marker\"] = lineMarkerTechniquePropTypes;\ntechniqueDescriptors[\"labeled-icon\"] = lineMarkerTechniquePropTypes;\n\n/**\n * Runtime representation of [[SegmentsStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SegmentsTechniqueParams]].\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrScopes: {\n        polygonOffset: AttrScope.TechniqueRendering,\n        polygonOffsetFactor: AttrScope.TechniqueRendering,\n        polygonOffsetUnits: AttrScope.TechniqueRendering,\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n/**\n * Runtime representation of [[BasicExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[BasicExtrudedLineTechniqueParams]].\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[StandardExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[StandardExtrudedLineTechniqueParams]].\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[SolidLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SolidLineTechniqueParams]].\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\nexport const solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            clipping: AttrScope.TechniqueGeometry,\n            secondaryRenderOrder: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"solid-line\"] = solidLineTechniqueDescriptor;\n// TODO: Remove deprecated \"dashed-line\" support in future releases.\ntechniqueDescriptors[\"dashed-line\"] = solidLineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[LineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[LineTechniqueParams]].\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\nexport const lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            // TODO, check, which are really dynamic !\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\ntechniqueDescriptors.line = lineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[FillStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[FillTechniqueParams]].\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.fill = fillTechniqueDescriptor;\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see [[StandardTechniqueParams]].\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.FeatureGeometry,\n            vertexColors: AttrScope.FeatureGeometry,\n            wireframe: AttrScope.TechniqueRendering,\n            roughness: AttrScope.TechniqueRendering,\n            metalness: AttrScope.TechniqueRendering,\n            alphaTest: AttrScope.TechniqueRendering,\n            depthTest: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            emissive: AttrScope.TechniqueRendering,\n            emissiveIntensity: AttrScope.TechniqueRendering,\n            refractionRatio: AttrScope.TechniqueRendering,\n            map: AttrScope.TechniqueGeometry,\n            mapProperties: AttrScope.TechniqueGeometry,\n            normalMap: AttrScope.TechniqueGeometry,\n            normalMapProperties: AttrScope.TechniqueGeometry,\n            displacementMap: AttrScope.TechniqueGeometry,\n            displacementMapProperties: AttrScope.TechniqueGeometry,\n            roughnessMap: AttrScope.TechniqueGeometry,\n            roughnessMapProperties: AttrScope.TechniqueGeometry,\n            emissiveMap: AttrScope.TechniqueGeometry,\n            emissiveMapProperties: AttrScope.TechniqueGeometry,\n            bumpMap: AttrScope.TechniqueGeometry,\n            bumpMapProperties: AttrScope.TechniqueGeometry,\n            metalnessMap: AttrScope.TechniqueGeometry,\n            metalnessMapProperties: AttrScope.TechniqueGeometry,\n            alphaMap: AttrScope.TechniqueGeometry,\n            alphaMapProperties: AttrScope.TechniqueGeometry\n        }\n    }\n);\ntechniqueDescriptors.standard = standardTechniqueDescriptor;\n\n/**\n * Runtime representation of [[ExtrudedPolygonStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[ExtrudedPolygonTechniqueParams]].\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrScopes: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            constantHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            enableDepthPrePass: AttrScope.TechniqueGeometry,\n            animateExtrusionDuration: AttrScope.TechniqueGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColorMix: AttrScope.TechniqueGeometry,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"extruded-polygon\"] = extrudedPolygonTechniqueDescriptor;\n/**\n * Runtime representation of [[TextStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[TextTechniqueParams]].\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n\n            minZoomLevel: AttrScope.TechniqueGeometry,\n            maxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            mayOverlap: AttrScope.TechniqueGeometry,\n            reserveSpace: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.text = textTechniqueDescriptor;\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see [[ShaderTechniqueParams]].\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            primitive: AttrScope.TechniqueGeometry,\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\ntechniqueDescriptors.shader = shaderTechniqueDescriptor;\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see [[TerrainTechniqueParams]].\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see [[BaseTechniqueParams]].\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in [[StyleSetEvaluator]] or in [[DecodedTile]].\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Unique technique key derived from all dynamic expressions that were input to this particular\n     * technique instance.\n     * @hidden\n     */\n    _key: string;\n\n    /**\n     * Optimization: Unique [[Technique]] index of [[Style]] from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n\n    /**\n     * The styleSet associated to this [[Technique]].\n     * @hidden\n     */\n    _styleSet?: string;\n\n    /**\n     * The category used to assign render orders to objects created using this [[Technique]].\n     * @hidden\n     */\n    _category?: string;\n\n    /**\n     * The category used to assign render orders to secondary objects\n     * created using this [[Technique]].\n     * @hidden\n     */\n    _secondaryCategory?: string;\n}\n\n/**\n * For efficiency, [[StyleSetEvaluator]] returns [[Techniques]] additional params as defined in\n * [[IndexedTechniqueParams]].\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of [[CirclesTechnique]].\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SquaresTechnique]].\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[PoiTechnique]].\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineMarkerTechnique]].\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineTechnique]].\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]].\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]] and is a kind that\n * has special dashes.\n * @note Lines with special dashes need line caps to render properly.\n */\nexport function isSpecialDashesLineTechnique(\n    technique: Technique\n): technique is SolidLineTechnique {\n    return (\n        (technique.name === \"solid-line\" || technique.name === \"dashed-line\") &&\n        technique.dashes !== undefined &&\n        technique.dashes !== \"Square\"\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of [[SegmentsTechnique]].\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]]\n * or [[StandardExtrudedLineTechnique]].\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]].\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardExtrudedLineTechnique]].\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[FillTechnique]].\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ExtrudedPolygonTechnique]].\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardTechnique]].\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TerrainTechnique]].\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TextTechnique]].\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ShaderTechnique]].\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    if (isStandardTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isExtrudedPolygonTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isTerrainTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName base name of the marker icon.\n * @param technique the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/Extruder\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(readonly name: string, private m_channel: IChannel, options?: LoggerOptions) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @hidden\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * @hidden\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * @hidden\n */\nexport class Env {\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    lookup(_name: string): Value | undefined {\n        return undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * Adds access to map specific environment properties.\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * Available line caps types(`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n * Default is `\"Round\"`.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * Available line dash types(`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n * Default is `\"Square\"`.\n */\nexport type LineDashes = \"Square\" | \"Round\" | \"Diamond\";\n\n/**\n * The kind of geometry is used to\n *\n * a) Group objects together, allowing the group to be hidden or displayed.\n *\n * b) Assigning the objects a loading phase. If a [[PhasedTileGeometryManager]] is used, techniques\n *      without a `GeometryKind` may not be processed (at the desired phase).\n *\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *\n *    [\"line\", \"road\", \"road:highway\"]\n *\n * If it is a tunnel for a highway:\n *\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n */\nexport enum GeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/*\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of [[GeometryKind]]s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * If not specified in style file, [[StyleSetEvaluator]] will assign monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder: number;\n\n    /**\n     * The category of this technique.\n     *\n     * The category is used in conjunction with [[Theme.priorities]]\n     * to assign render orders to the objects created by this [[Style]].\n     */\n    category?: string;\n\n    /**\n     *\n     */\n    renderOrderOffset?: number;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this technique creates.\n     */\n    transient?: boolean;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry. One kind is set as default in the technique, and can be\n     * overridden in the style.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Set to `true` if this `Technique`s kind is in the set of enabled [[GeometryKind]]s, set to\n     * `false` if is in the disabled [[GeometryKind]]s. Disabling overrules enabling.\n     */\n    enabled?: boolean;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n    /**\n     * Texture coordinates are in equirectangular space.\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: boolean;\n    /**\n     * Set to 'true' if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: string | TextureBuffer;\n    mapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: string | TextureBuffer;\n    normalMapType?: number;\n    normalMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: string | TextureBuffer;\n    displacementMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: string | TextureBuffer;\n    roughnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: string | TextureBuffer;\n    emissiveMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: string | TextureBuffer;\n    bumpMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: string | TextureBuffer;\n    metalnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: string | TextureBuffer;\n    alphaMapProperties?: TextureProperties;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: number;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: number;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: number;\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @default `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority. If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @default `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @default `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap. If not\n     * defined, the property value from `iconReserveSpace` will be used.\n     * @default `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top. If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @default `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels. Defaults to\n     * `false`.\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If true, the text will appear even if the icon cannot be rendered because of missing icon\n     * graphics. Defaults to `true`.\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table. If `poiName` has a value, this value\n     * supercedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * Name of [[ImageTexture]] definition to use.\n     */\n    imageTexture?: string;\n    /**\n     * Field name to extract imageTexture content from.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to true if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false. This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are \"Basic\" and \"Standard\". Default\n     * is \"Basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     *\n     * TODO: is this TechniqueParams or Style prop ?\n     */\n    shading?: \"basic\";\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    // TODO: Make pixel units default.\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: string;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     */\n    clipping?: boolean;\n    /**\n     * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    caps?: LineCaps;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: number;\n    /**\n     * Describes secondary line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`,\n     * `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    secondaryCaps?: LineCaps;\n    /**\n     * Describes the category of the secondary geometry object created using this technique.\n     */\n    secondaryCategory?: number;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Describes line dash type (`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n     * Default is `\"Square\"`.\n     */\n    dashes?: LineDashes;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: number;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: number;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, the height of the extruded buildings will not be modified by the mercator\n     * projection distortion that happens around the poles.\n     *\n     * @default `false`\n     */\n    constantHeight?: boolean;\n\n    /**\n     * If `false`, wall geometry will not be added along the tile boundaries.\n     * @default `true`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique. Valid values are \"point\" | \"line\" | \"segments\" |\n     * \"mesh\"\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture (defaults to `128`).\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     *\n     * See [[ExtendedTileInfo.getFeatureText]].\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number;\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @default `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @default `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Technique } from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from [[Technique]]-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\nexport type TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\nexport type TechniquePropScopes<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope;\n};\n\nexport interface TechniqueDescriptor<T> {\n    attrTransparencyColor?: string;\n    attrScopes: TechniquePropScopes<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\nexport type TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\nexport function mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrScopes: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrScopes !== undefined) {\n            result.attrScopes = { ...result.attrScopes, ...descriptor.attrScopes };\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport { Technique } from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: Technique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    maxGeometryHeight?: number;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a number with the geometry's feature id.\n */\nexport type AttributeMap = {} | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Offset added to [[Technique]]'s [[renderOrder]] when calculating final `renderOrder` of\n     * geometry object from given group.\n     */\n    renderOrderOffset?: number;\n    featureId?: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"number\") {\n        return attributeMap;\n    }\n\n    if (attributeMap.hasOwnProperty(\"$id\")) {\n        return (attributeMap as any).$id as number;\n    }\n\n    return 0;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[GeoCoordinatesLike]] data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[LatLngLike]] interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            /*\n             * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n             * might be a concrete class which is not available at runtime.\n             * Consider the following example:\n             *\n             *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n             *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n             *\n             * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n             */\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.Math.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.Math.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan || 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, _unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private m_phi0: number = 0;\n    private m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = MathUtils.degToRad(clamped.latitude);\n        const lambda = MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x = this.unitScale * (MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude || 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator [[Projection]] used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme The [[TilingScheme]] used to compute bounding boxes.\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the [[Projection]] of the [[TilingScheme]].\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the [[SubdivisionScheme]] of the [[TilingScheme]].\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey The TileKey.\n     * @param result The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = MathUtils.newEmptyBox3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey The [[TileKey]].\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A [[SubdivisionScheme]] used to represent half quadtrees. This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n        // tslint:enableno-bitwise\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport class TileKeyUtils {\n    static geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return this.worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    static worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    static geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    isJsonExpr,\n    JsonExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedProperty\";\nimport { interpolatedPropertyDefinitionToJsonExpr } from \"./InterpolatedPropertyDefs\";\nimport { AttrScope, mergeTechniqueDescriptor } from \"./TechniqueDescriptor\";\nimport { IndexedTechnique, Technique, techniqueDescriptors } from \"./Techniques\";\nimport {\n    Definitions,\n    isActualSelectorDefinition,\n    isJsonExprReference,\n    LineStyle,\n    Style,\n    StyleDeclaration,\n    StyleSelector,\n    StyleSet\n} from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst emptyTechniqueDescriptor = mergeTechniqueDescriptor<Technique>({});\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n}\n\ntype InternalStyle = Style & StyleSelector & StyleInternalParams;\n\n/**\n * [[StyleConditionClassifier]] searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitContainsExpr(expr: ContainsExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            // tslint:disable-next-line:prefer-conditional-expression\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n\n    constructor(styleSet: StyleSet, definitions?: Definitions) {\n        this.m_definitions = definitions;\n        this.styleSet = resolveReferences(styleSet, definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer The optional layer name used to filter techniques.\n     * @param geometryType The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer name of layer\n     * @param geometryType type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Get the expression evaluation cache, for further feature processing.\n     *\n     * This object is valid until next `getMatchingTechniques` call.\n     */\n    get expressionEvaluatorCache() {\n        return this.m_cachedResults;\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(style.minZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(style.maxZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style Current style (could also be top of stack).\n     * @param result The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr) {\n                // the constraint is defined as expression, evaluate it and\n                // use its value\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr) {\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel > maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const techniqueDescriptor =\n            techniqueDescriptors[style.technique] || emptyTechniqueDescriptor;\n\n        const processAttribute = (attrName: string, attrValue: Value | JsonExpr | undefined) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (!deps.zoom && deps.properties.size === 0) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                let attrScope: AttrScope | undefined = (techniqueDescriptor.attrScopes as any)[\n                    attrName as any\n                ];\n\n                if (attrScope === undefined) {\n                    // Use [[AttrScope.TechniqueGeometry]] as default scope for the attribute.\n                    attrScope = AttrScope.TechniqueGeometry;\n                }\n\n                const deps = attrValue.dependencies();\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        processAttribute(\"_category\", style.category);\n        processAttribute(\"_secondaryCategory\", (style as LineStyle).secondaryCategory);\n\n        processAttribute(\"renderOrder\", style.renderOrder);\n\n        // TODO: What the heck is that !?\n        processAttribute(\"label\", style.labelProperty);\n\n        // line & solid-line secondaryRenderOrder should be generic attr\n        // TODO: maybe just warn and force move it to `attr` ?\n        processAttribute(\"secondaryRenderOrder\", (style as LineStyle).secondaryRenderOrder);\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(attrName, (style.attr as any)[attrName]);\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        const instantiationContext = { env };\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                if (attrExpr.isDynamic()) {\n                    const reducedExpr = attrExpr.instantiate(instantiationContext);\n                    return [attrName, reducedExpr];\n                }\n\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                // tslint:disable-next-line: prefer-conditional-expression\n                if (Expr.isExpr(attrValue)) {\n                    technique[attrName] = attrValue.toJSON();\n                } else {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        technique._key = key;\n        if (style.styleSet !== undefined) {\n            technique._styleSet = style.styleSet;\n        }\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: StyleDeclaration[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(\n    style: StyleDeclaration,\n    definitions: Definitions | undefined\n): InternalStyle {\n    if (isJsonExpr(style)) {\n        if (!isJsonExprReference(style)) {\n            throw new Error(\"invalid expression in this context, only 'ref's are supported\");\n        }\n        // expand and instantiate references to style definitions.\n        const definitionName = style[1];\n        const def = definitions && definitions[definitionName];\n        if (!def) {\n            throw new Error(`invalid reference '${definitionName}' - not found`);\n        }\n        if (!isActualSelectorDefinition(def)) {\n            throw new Error(`invalid reference '${definitionName}' - expected style definition`);\n        }\n        // instantiate the style\n        return resolveStyleReferences(def, definitions);\n    }\n\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * As for now, we remove all `Expr` as they are not supported on other side.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n        let attrValue: any = (technique as any)[attrName];\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { Env, Expr, ExprScope, MapEnv, Value } from \"./Expr\";\nimport { getPropertyValue, isInterpolatedProperty } from \"./InterpolatedProperty\";\nimport { InterpolatedProperty } from \"./InterpolatedPropertyDefs\";\n\nconst logger = LoggerManager.instance.create(\"TechniqueAttr\");\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Storage level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    storageLevel: number;\n\n    /**\n     * Zoom level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    zoomLevel: number;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | InterpolatedProperty | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | InterpolatedProperty | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | InterpolatedProperty | undefined,\n    defaultValue?: T\n): T | undefined {\n    const env = context instanceof Env ? context : context.env;\n\n    let evaluated: Value | undefined;\n    if (Expr.isExpr(attrValue)) {\n        try {\n            evaluated = attrValue.evaluate(\n                env,\n                ExprScope.Dynamic,\n                !(context instanceof Env) ? context.cachedExprResults : undefined\n            );\n        } catch (error) {\n            logger.error(`failed to evaluate expression '${JSON.stringify(attrValue)}': ${error}`);\n            evaluated = undefined;\n        }\n    } else if (isInterpolatedProperty(attrValue)) {\n        evaluated = getPropertyValue(attrValue, context instanceof Env ? context : context.env);\n    } else {\n        evaluated = (attrValue as unknown) as Value;\n    }\n    if (evaluated === undefined || evaluated === null) {\n        return defaultValue;\n    } else {\n        return (evaluated as unknown) as T;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ThemedTileDecoder\";\nexport * from \"./lib/TileDecoderService\";\nexport * from \"./lib/TilerService\";\nexport * from \"./lib/WorkerService\";\nexport * from \"./lib/WorkerServiceManager\";\nexport * from \"./lib/GeoJsonTiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson, ITiler } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\n// tslint:disable-next-line:no-var-requires\nconst geojsonvtExport = require(\"geojson-vt\");\n// to be able to run tests on nodejs\nconst geojsonvt = geojsonvtExport.default || geojsonvtExport;\n\ninterface GeoJsonVtIndex {\n    geojson: GeoJson;\n    getTile(level: number, column: number, row: number): any;\n}\n\nexport class GeoJsonTiler implements ITiler {\n    indexes: Map<string, GeoJsonVtIndex>;\n\n    constructor() {\n        this.indexes = new Map();\n    }\n\n    dispose() {\n        /* */\n    }\n\n    async connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    async registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (this.indexes.has(indexId)) {\n            return;\n        }\n        return this.updateIndex(indexId, input);\n    }\n\n    async updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (input instanceof URL) {\n            const response = await fetch(input.href);\n            if (!response.ok) {\n                throw new Error(\n                    `GeoJsonTiler: Unable to fetch ${input.href}: ${response.statusText}`\n                );\n            }\n            input = await response.json();\n        } else {\n            input = input as GeoJson;\n        }\n\n        const index = geojsonvt(input, {\n            maxZoom: 20, // max zoom to preserve detail on\n            indexMaxZoom: 5, // max zoom in the tile index\n            indexMaxPoints: 100000, // max number of points per tile in the tile index\n            tolerance: 3, // simplification tolerance (higher means simpler)\n            extent: 4096, // tile extent\n            buffer: 0, // tile buffer on each side\n            lineMetrics: false, // whether to calculate line metrics\n            promoteId: null, // name of a feature property to be promoted to feature.id\n            generateId: true, // whether to generate feature ids. Cannot be used with promoteId\n            debug: 0 // logging level (0, 1 or 2)\n        });\n        index.geojson = input;\n\n        this.indexes.set(indexId, index);\n    }\n\n    async getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const index = this.indexes.get(indexId);\n        if (index === undefined) {\n            throw new Error(\"Tile not found\");\n        }\n        const tile = index.getTile(tileKey.level, tileKey.column, tileKey.row);\n        if (tile !== null) {\n            tile.layer = indexId;\n            for (const feature of tile.features) {\n                feature.originalGeometry = this.getOriginalGeometry(feature, index.geojson);\n            }\n        }\n        return tile || {};\n    }\n\n    private getOriginalGeometry(feature: any, geojson: GeoJson): any {\n        switch (geojson.type) {\n            case \"Point\":\n            case \"MultiPoint\":\n            case \"LineString\":\n            case \"MultiLineString\":\n            case \"Polygon\":\n            case \"MultiPolygon\":\n            case \"GeometryCollection\":\n                return geojson;\n            case \"Feature\":\n                return geojson.geometry;\n            case \"FeatureCollection\":\n                return geojson.features[feature.id].geometry;\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    FeatureGeometry,\n    GeometryCollection,\n    MapEnv,\n    ValueMap\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { GeoBox, GeoCoordinates, TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { Vector2 } from \"three\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\n\nconst VT_JSON_EXTENTS = 4096;\n\ntype VTJsonPosition = [number, number];\n\nenum VTJsonGeometryType {\n    Unknown,\n    Point,\n    LineString,\n    Polygon\n}\n\ninterface VTJsonFeatureInterface {\n    geometry: VTJsonPosition[] | VTJsonPosition[][];\n    originalGeometry: FeatureGeometry | GeometryCollection;\n    id: string;\n    tags: ValueMap;\n    type: VTJsonGeometryType;\n}\n\ninterface VTJsonSourceInterface {\n    geometry: number[];\n    length: number;\n    id: string;\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    tags: ValueMap;\n    type: string;\n}\n\ninterface VTJsonTileInterface {\n    features: VTJsonFeatureInterface[];\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    numFeatures: number;\n    numPoints: number;\n    numSimplified: number;\n    source: VTJsonSourceInterface[];\n    transformed: boolean;\n    x: number;\n    y: number;\n    z: number;\n    layer: string;\n}\n\n/**\n * [[OmvDataAdapter]] id for [[VTJsonDataAdapter]].\n */\nexport const VTJsonDataAdapterId: string = \"vt-json\";\n\n/**\n * The class [[VTJsonDataAdapter]] converts VT-json data to geometries for the given\n * [[IGeometryProcessor]].\n */\nexport class VTJsonDataAdapter implements OmvDataAdapter {\n    id = VTJsonDataAdapterId;\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        private m_dataFilter?: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        if (isArrayBufferLike(data)) {\n            return false;\n        }\n\n        const tile = data as VTJsonTileInterface;\n        if (\n            tile.features === undefined ||\n            tile.source === undefined ||\n            tile.x === undefined ||\n            tile.y === undefined ||\n            tile.z === undefined\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    process(tile: VTJsonTileInterface, tileKey: TileKey, geoBox: GeoBox) {\n        for (const feature of tile.features) {\n            const env = new MapEnv({\n                $layer: tile.layer,\n                $geometryType: this.convertGeometryType(feature.type),\n                $level: tileKey.level,\n                $zoom: Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0)),\n                $id: feature.id,\n                ...feature.tags\n            });\n\n            switch (feature.type) {\n                case VTJsonGeometryType.Point: {\n                    for (const pointGeometry of feature.geometry) {\n                        const x = (pointGeometry as VTJsonPosition)[0];\n                        const y = (pointGeometry as VTJsonPosition)[1];\n\n                        const position = new Vector2(x, y);\n\n                        this.m_processor.processPointFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [position],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.LineString: {\n                    let untiledPositions: GeoCoordinates[] | undefined;\n                    if (feature.originalGeometry.type === \"LineString\") {\n                        untiledPositions = [];\n                        for (const [x, y] of feature.originalGeometry.coordinates) {\n                            untiledPositions.push(new GeoCoordinates(y, x));\n                        }\n                    } else if (feature.originalGeometry.type === \"MultiLineString\") {\n                        untiledPositions = [];\n                        for (const lineGeometry of feature.originalGeometry\n                            .coordinates as VTJsonPosition[][]) {\n                            for (const [x, y] of lineGeometry) {\n                                untiledPositions.push(new GeoCoordinates(y, x));\n                            }\n                        }\n                    }\n\n                    for (const lineGeometry of feature.geometry as VTJsonPosition[][]) {\n                        const line: ILineGeometry = { positions: [], untiledPositions };\n                        for (const [x, y] of lineGeometry) {\n                            const position = new Vector2(x, y);\n                            line.positions.push(position);\n                        }\n\n                        this.m_processor.processLineFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [line],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.Polygon: {\n                    const polygon: IPolygonGeometry = { rings: [] };\n                    for (const outline of feature.geometry as VTJsonPosition[][]) {\n                        const ring: Vector2[] = [];\n                        for (const [currX, currY] of outline) {\n                            const position = new Vector2(currX, currY);\n                            ring.push(position);\n                        }\n                        polygon.rings.push(ring);\n                    }\n\n                    this.m_processor.processPolygonFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        [polygon],\n                        env,\n                        tileKey.level\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Unknown: {\n                    break;\n                }\n            }\n        }\n    }\n\n    private convertGeometryType(type: VTJsonGeometryType): string {\n        switch (type) {\n            case VTJsonGeometryType.Point:\n                return \"point\";\n            case VTJsonGeometryType.LineString:\n                return \"line\";\n            case VTJsonGeometryType.Polygon:\n                return \"polygon\";\n            default:\n                return \"unknown\";\n        }\n    }\n}\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`). Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer Current layer.\n     * @param level Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features. It gets passed in the [[Env]]\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of point feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of line feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of polygon feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private m_processLayersDefault: boolean = true;\n    private m_processPointsDefault: boolean = true;\n    private m_processLinesDefault: boolean = true;\n    private m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault If `true`, all unspecified layers will be processed. If `false`,\n     * all unspecified layers will be ignored.\n     * @param processPointsDefault If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault If `true`, all unspecified polygon features will be processed.\n     * If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private disabledKinds: GeometryKindSet | undefined;\n    private enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare let self: Worker & {\n    importScripts(..._scripts: string[]): void;\n};\n\nself.importScripts(\"three.min.js\");\n\nimport { OmvTileDecoderService } from \"@here/harp-omv-datasource/index-worker\";\n\nOmvTileDecoderService.start();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/OmvDecoder\";\nexport * from \"./lib/OmvTiler\";\nexport * from \"./lib/OmvDecoderDefs\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/Functions\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of [[PriorityListElement]]s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a [[PriorityListGroup]].\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    private m_sortedGroups: Array<PriorityListGroup<T>> | undefined;\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.getGroup(element.priority);\n        if (group !== undefined) {\n            const foundIndex = group.elements.indexOf(element);\n            if (foundIndex >= 0) {\n                group.elements.splice(foundIndex, 1);\n                if (group.elements.length === 0) {\n                    const normalizedPriority = Math.floor(element.priority);\n                    this.groups.delete(normalizedPriority);\n                    if (this.m_sortedGroups) {\n                        this.m_sortedGroups = [];\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal [[PriorityListGroup]]s.\n     */\n    clear(): void {\n        this.groups.clear();\n        if (this.m_sortedGroups) {\n            this.m_sortedGroups = [];\n        }\n    }\n\n    /**\n     * Merge another [[GroupedPriorityList]] into this one.\n     *\n     * @param other Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                if (this.m_sortedGroups) {\n                    this.m_sortedGroups = [];\n                }\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    /**\n     * Return a sorted list of [[PriorityListGroup]]s.\n     */\n    get sortedGroups(): Array<PriorityListGroup<T>> {\n        if (this.m_sortedGroups && this.m_sortedGroups.length > 0) {\n            return this.m_sortedGroups;\n        }\n\n        if (!this.m_sortedGroups) {\n            this.m_sortedGroups = [];\n        }\n        for (const priorityList of this.groups) {\n            this.m_sortedGroups.push(priorityList[1]);\n        }\n\n        this.m_sortedGroups.sort((a: PriorityListGroup<T>, b: PriorityListGroup<T>) => {\n            return b.priority - a.priority;\n        });\n        return this.m_sortedGroups;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(normalizedPriority, group);\n            if (this.m_sortedGroups) {\n                this.m_sortedGroups = [];\n            }\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x X coordinate of point.\n         * @param y Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test box for inclusion of another box.\n         *\n         * @param other Box 2 to test for inclusion.\n         */\n        containsBox(other: Box): boolean {\n            const xmax = other.x + other.w;\n            const ymax = other.y + other.h;\n            return (\n                this.contains(other.x, other.y) &&\n                this.contains(xmax, other.y) &&\n                this.contains(other.x, ymax) &&\n                this.contains(xmax, ymax)\n            );\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax Point a.x\n     * @param ay Point a.y\n     * @param bx Point b.x\n     * @param by Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px Test point X\n     * @param py Test point y\n     * @param l0x Line segment start X\n     * @param l0y Line segment start Y\n     * @param l1x Line segment end X\n     * @param l1y Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a linear interpolation between the values of edge0 and edge1 based on the factor.\n     *\n     * Given two known points the linear interpolant between these points may be presented as\n     * straight line. This means that for given factor change the resulting change of return\n     * value is always const.\n     * @see https://en.wikipedia.org/wiki/Linear_interpolation\n     *\n     * @param edge0\n     * @param edge1\n     * @param factor Interpolation factor that ranges between: 0 <= x <= 1.\n     */\n    export function lerp(edge0: number, edge1: number, factor: number): number {\n        return edge0 * (1 - factor) + edge1 * factor;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val The incoming value to be converted.\n     * @param inMin Lower bound of the value's current range.\n     * @param inMax Upper bound of the value's current range.\n     * @param outMin Lower bound of the value's target range.\n     * @param outMax Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value Value to check.\n     * @param lowerBound The lower bound to check the value against.\n     * @param upperBound The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue\n     * @param endValue\n     * @param time\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods and properties into.\n * @param baseCtors Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods into.\n * @param baseCtors Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (\n                descriptor !== undefined &&\n                descriptor.get === undefined &&\n                name !== \"constructor\"\n            ) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition Condition to match, if false, throws an Error(message)\n * @param message Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of [[ISimpleChannel]] to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    // tslint:disable:member-ordering\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n    // tslint:enable:member-ordering\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* tslint:disable:max-line-length */\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n/* tslint:ensable:max-line-length */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    // tslint:disable-next-line:no-unused-variable\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Merge options into existing parameters object.\n *\n * Convenience helper with _similar_ semantics as:\n *\n *     const finalParams1 = { ...defaults, ... options };\n *     const finalParams2 = Object.assign({}, defaults, options);\n *\n * This function doesn't copy _extra_ properties of `options` that doesn't exist in `defaults`.\n * `defaults` is used as _parameters_ template.\n *\n * This doc uses following notion of `option` and `parameter` terms:\n * * `parameter` is a variable, or 'almost constant' of procedure/function/algorith/object\n *    * `parameter` usually have sensible and usually used default\n *    * `parameter` is always defined (no `undefined`, `null` or `?` in type)\n *    * `parameter` can be overriden by specyfying `option` with same name\n * * `option` means value that may be passed optionally, overrides `parameter` value with same name\n *\n * Usage:\n *\n *     interface FooParams {\n *         useTextures: boolean;\n *         opacity: number;\n *     }\n *\n *     const FOO_DEFAULTS: FooParams = {\n *         useTextures: true,\n *         opacity: 0.8\n *     };\n *\n *     type FooOptions = Partial<FooParams>;\n *\n *     function doSomething(options: FooOptions) {\n *         const params = mergeWithOptions(FOO_DEFAULTS, options);\n *             // typeof params === FooParams\n *             // params.opacity = 0.5\n *             // params.useTextures = true\n *             // params.someOtherOptionFromOtherApi is not defined\n *     }\n *     const opt = {opacity: 0.5, someOtherOptionFromOtherApi: 'aaa'};\n *     doSomething(opt);\n *\n * Rationale:\n *   * both `Object.assign` and spread operator copy extra options\n *   * `Object.assign` & `spread operator` may copy `undefined` and `null`s if they really exist\n *     in options object\n *\n * @param parameters parmeters template object holding all expected parameters\n * @param options options object\n * @returns new object with `parameters` overriden by values from `options`\n */\nexport function mergeWithOptions<T extends object>(parameters: T, options?: Partial<T>): T {\n    // NOTE: `as object` needed due to TypeScript bug:\n    //       https://github.com/Microsoft/TypeScript/issues/14409\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    const result = { ...(parameters as object) } as T;\n    if (options === undefined || options === null) {\n        return result;\n    }\n    for (const prop in parameters) {\n        if (parameters.hasOwnProperty(prop)) {\n            const optionValue = options[prop];\n            if (optionValue !== undefined && optionValue !== null) {\n                result[prop] = optionValue as any;\n            }\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like [[UriResolver]].\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new [[UriResolver]] that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function(this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    return baseUrl(window.location.href);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\n\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { InterpolationOperators } from \"./operators/InterpolationOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    private m_partialEvaluation = false;\n\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * `true` if the this context is used to partially evaluate expressions.\n     */\n    get partialEvaluation() {\n        return this.m_partialEvaluation;\n    }\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr !== undefined) {\n            return expr.accept(this.evaluator, this);\n        }\n        throw new Error(\"Failed to evaluate expression\");\n    }\n\n    /**\n     * Partially evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    partiallyEvaluate(expr: Expr | undefined): Expr {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const previousEvaluationMode = this.m_partialEvaluation;\n\n        this.m_partialEvaluation = true;\n\n        try {\n            const value = expr.accept(this.evaluator, this);\n\n            this.m_partialEvaluation = previousEvaluationMode;\n\n            if (value instanceof Expr) {\n                return value;\n            }\n\n            return LiteralExpr.fromValue(value);\n        } catch (error) {\n            // rethrow the exception\n            throw error;\n        } finally {\n            // reset the evaluation mode.\n            this.m_partialEvaluation = previousEvaluationMode;\n        }\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate [[Expr]] in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: ExprEvaluatorContext): Value {\n        const value = expr.value.accept(this, context);\n\n        const result = expr.elements.includes(value as any);\n\n        if (context.cache !== undefined) {\n            context.cache.set(expr, result);\n        }\n\n        return result;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        if (context.cache !== undefined) {\n            const v = context.cache.get(expr);\n            if (v !== undefined) {\n                return v;\n            }\n        }\n\n        const descriptor = expr.descriptor || operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            const result = descriptor.call(context, expr);\n\n            if (context.cache) {\n                context.cache.set(expr, result);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}`);\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(InterpolationOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { parseStringEncodedColor } from \"../StringEncodedNumeral\";\n\nconst operators = {\n    alpha: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            let color: Value | undefined = context.evaluate(call.args[0]);\n            if (typeof color === \"string\") {\n                color = parseStringEncodedColor(color);\n            }\n            const alpha = typeof color === \"number\" ? ColorUtils.getAlphaFromHex(color) : 1;\n            return alpha;\n        }\n    },\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.Math.clamp(r, 0, 255) / 255,\n        THREE.Math.clamp(g, 0, 255) / 255,\n        THREE.Math.clamp(b, 0, 255) / 255,\n        THREE.Math.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.Math.clamp(r, 0, 255) / 255,\n        THREE.Math.clamp(g, 0, 255) / 255,\n        THREE.Math.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.Math.euclideanModulo(h, 360) / 360,\n        THREE.Math.clamp(s, 0, 100) / 100,\n        THREE.Math.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, LiteralExpr, NumberLiteralExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { createInterpolatedProperty, evaluateInterpolatedProperty } from \"../InterpolatedProperty\";\nimport { InterpolatedProperty, InterpolatedPropertyDefinition } from \"../InterpolatedPropertyDefs\";\n\ntype InterpolateCallExpr = CallExpr & {\n    _mode?: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    _exponent?: number;\n    _stops?: number[];\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Evaluates the given piecewise function.\n */\nfunction step(context: ExprEvaluatorContext, call: CallExpr) {\n    const { args } = call;\n\n    const value = context.evaluate(args[0]) as number;\n\n    if (value === null) {\n        // returns the default value of step.\n        return context.evaluate(args[1]);\n    }\n\n    if (typeof value !== \"number\") {\n        throw new Error(`the input of a 'step' operator must have type 'number'`);\n    }\n\n    let first = 1;\n    let last = args.length / 2 - 1;\n\n    while (first < last) {\n        // tslint:disable-next-line: no-bitwise\n        const mid = (first + last) >>> 1;\n        const stop = (args[mid * 2] as NumberLiteralExpr).value;\n\n        if (value < stop) {\n            last = mid - 1;\n        } else if (value > stop) {\n            first = mid + 1;\n        } else {\n            last = mid;\n        }\n    }\n\n    const result = args[first * 2];\n\n    if (!(result instanceof NumberLiteralExpr)) {\n        throw new Error(\"expected a numeric literal\");\n    }\n\n    const index = result.value <= value ? first : first - 1;\n\n    return context.evaluate(args[index * 2 + 1]);\n}\n\n/**\n * Prepare and validate the \"interpolate\" call.\n *\n * @param call An [[Expr]] representing an \"interpolate\" call.\n * @hidden\n */\nfunction prepareInterpolateCallExpr(call: InterpolateCallExpr) {\n    if (call._interpolatedProperty || call._mode !== undefined) {\n        return;\n    }\n\n    const interpolatorType = call.args[0];\n\n    if (!(interpolatorType instanceof CallExpr)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n\n    let mode: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    let exponent: number | undefined;\n\n    if (interpolatorType.op === \"linear\") {\n        mode = \"Linear\";\n    } else if (interpolatorType.op === \"discrete\") {\n        mode = \"Discrete\";\n    } else if (interpolatorType.op === \"cubic\") {\n        mode = \"Cubic\";\n    } else if (interpolatorType.op === \"exponential\") {\n        mode = \"Exponential\";\n        const base = interpolatorType.args[0];\n        if (!(base instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected the base of the exponential interpolation\");\n        }\n        exponent = base.value;\n    } else {\n        throw new Error(\"unrecognized interpolation type\");\n    }\n\n    const input = call.args[1];\n\n    if (!(input instanceof CallExpr)) {\n        throw new Error(\"expected the input of the interpolation\");\n    }\n\n    if (input.op !== \"zoom\") {\n        throw new Error(\"only 'zoom' is supported\");\n    }\n\n    if (call.args.length === 2 || call.args.length % 2) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: number[] = [];\n    const values: Value[] = [];\n\n    let isConstantInterpolation = true;\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n\n        if (stops.length > 0 && stop.value === stops[stops.length - 1]) {\n            stops[stops.length - 1] = stop.value - 0.0000001;\n        }\n\n        stops.push(stop.value);\n\n        if (isConstantInterpolation) {\n            const value = call.args[i + 1];\n\n            if (value instanceof LiteralExpr) {\n                values.push(value.value);\n            } else {\n                isConstantInterpolation = false;\n            }\n        }\n    }\n\n    if (isConstantInterpolation) {\n        const result = createInterpolatedProperty({\n            interpolation: mode,\n            exponent,\n            zoomLevels: stops,\n            values\n        });\n\n        if (!result) {\n            throw new Error(\"failed to create interpolation\");\n        }\n\n        call._interpolatedProperty = result;\n    } else {\n        call._mode = mode;\n        call._exponent = exponent;\n        call._stops = stops;\n    }\n}\n\ntype StepCallExpr = CallExpr & {\n    /**\n     * `true` if the input of `step` call is `[\"zoom\"], otherwise false.\n     */\n    _inputIsZoom?: boolean;\n\n    /**\n     * The stops when the a constant [[InterpolatedProperty]] cannot be\n     * created for this `[\"step\"]` call.\n     */\n    _stops?: number[];\n\n    /**\n     * The [[InterpolatedProperty]] representing this `step` call,\n     * otherwise `undefined` if an interpolated property cannot\n     * be created at parsing time (e.g. one if the value of the step is not a literal).\n     */\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Classify the given `step` call.\n *\n * This function checks the input of the `step` and ensures that the stops\n * are literals.\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction classifyStepCallExpr(call: StepCallExpr) {\n    if (call._inputIsZoom !== undefined) {\n        // nothing to do, the `call` was already classified.\n        return;\n    }\n\n    if (call.args[0] === undefined) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n\n    if (call.args.length < 3 || call.args.length % 2) {\n        throw new Error(\"not enough arguments\");\n    }\n\n    const input = call.args[0];\n\n    // tslint:disable-next-line: prefer-conditional-expression\n    if (input instanceof CallExpr && input.op === \"zoom\") {\n        call._inputIsZoom = true;\n    } else {\n        call._inputIsZoom = false;\n    }\n\n    // check that the stops are literals.\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n    }\n}\n\n/**\n * Prepares the given call for the dynamic exception.\n * This method collects the stops and\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction prepareStepCallExpr(call: StepCallExpr) {\n    if (call._stops || call._interpolatedProperty) {\n        // nothing to do, the `call` was already prepared for execution.\n        return;\n    }\n\n    // collect the stops of the step call.\n    const stops: number[] = [Number.MIN_SAFE_INTEGER];\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i] as NumberLiteralExpr;\n        stops.push(stop.value);\n    }\n\n    // collect the values of the step call.\n    const values: Value[] = [];\n    let hasConstantValues = true;\n\n    for (let i = 1; hasConstantValues && i < call.args.length; i += 2) {\n        const literal = call.args[i];\n        if (literal instanceof LiteralExpr) {\n            values.push(literal.value);\n        } else {\n            hasConstantValues = false;\n        }\n    }\n\n    if (hasConstantValues) {\n        // all the values of this zoom-based `step` are constant,\n        // create an interpolated property and store it together\n        // with the call.\n        const interpolatedProperty = createInterpolatedProperty({\n            interpolation: \"Discrete\",\n            zoomLevels: stops,\n            values\n        });\n\n        if (interpolatedProperty === undefined) {\n            throw new Error(\"failed to create interpolator\");\n        }\n\n        call._interpolatedProperty = interpolatedProperty;\n    } else {\n        // the values the `[\"step\"]` call are not constants,\n        // cache the `zoomLevels` to avoid recreating input `Array`\n        // when instantiating a new [[InterpolatedProperty]].\n        call._stops = stops;\n    }\n}\n\nconst operators = {\n    interpolate: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[1] && call.args[1].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: InterpolateCallExpr): Value => {\n            prepareInterpolateCallExpr(call);\n\n            if (context.scope !== ExprScope.Dynamic) {\n                return call;\n            }\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                const values: Value[] = [];\n\n                for (let i = 2; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i + 1]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = createInterpolatedProperty({\n                    interpolation: call._mode!,\n                    exponent: call._exponent,\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return evaluateInterpolatedProperty(interpolatedProperty, context.env);\n        }\n    },\n    step: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[0] && call.args[0].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: StepCallExpr): Value => {\n            classifyStepCallExpr(call);\n\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n\n            if (context.scope === ExprScope.Condition || call._inputIsZoom === false) {\n                return step(context, call);\n            }\n\n            prepareStepCallExpr(call);\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                // the values of the interpolation are not literals,\n                // evaluate the sub expressions and combine them\n                // with the constant stops computed when preparing this call.\n                const values: Value[] = [];\n                for (let i = 1; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = createInterpolatedProperty({\n                    interpolation: \"Discrete\",\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return evaluateInterpolatedProperty(interpolatedProperty, context.env);\n        }\n    }\n};\n\nexport const InterpolationOperators: OperatorDescriptorMap = operators;\nexport type InterpolationOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Interpolant } from \"three\";\n\nexport class ExponentialInterpolant extends Interpolant {\n    /**\n     * Exponent value. Defaults to `2.0`.\n     */\n    exponent: number = 2.0;\n\n    // Note: We need to disable linting here as tslint thinks this function is never used, though it\n    // indeed is called by ``Interpolant.evaluate(level)``.\n    // tslint:disable-next-line\n    private interpolate_(i1: number, t0: number, t: number, t1: number) {\n        const result = this.resultBuffer;\n        // TODO: Remove when Interpolant types are fixed.\n        const values = (this as any).sampleValues;\n        const stride = this.valueSize;\n        const offset1 = i1 * stride;\n        const offset0 = offset1 - stride;\n        const weight1 = Math.pow((t - t0) / (t1 - t0), this.exponent);\n        const weight0 = 1 - weight1;\n\n        for (let i = 0; i !== stride; ++i) {\n            result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"ppi-scale\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            return value * scaleFactor;\n        }\n    },\n    \"world-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidth = Math.pow(2, 17) / Math.pow(2, zoom);\n            const v = pixels * zoomWidth * scaleFactor;\n            return v;\n        }\n    },\n    \"world-discrete-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidthDiscrete = Math.pow(2, 17.8) / Math.pow(2, Math.floor(zoom));\n            const v = pixels * zoomWidthDiscrete * scaleFactor;\n            return v;\n        }\n    },\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext): Value => {\n            if (context.scope === ExprScope.Condition) {\n                const zoom = context.env.lookup(\"$zoom\")!;\n                if (zoom !== undefined) {\n                    return zoom;\n                }\n                throw new Error(\"failed to get the zoom level.\");\n            }\n            // direct usages of 'zoom' outside technique filter conditions\n            // and interpolations are not allowed.\n            throw new Error(\"invalid usage of the 'zoom' operator.\");\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 1) {\n                const value = context.evaluate(call.args[0]);\n                if (typeof value !== \"number\") {\n                    throw new Error(`ìnvalid operand '${typeof value} for operator '-'`);\n                }\n\n                return -value;\n            }\n\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.Math.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\" && hasOwnProperty.call(object, memberName)) {\n        return lookupMode === LookupMode.get ? object[memberName] : true;\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.indexOf(right) !== -1;\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Env } from \"./Env\";\n\nexport interface InstantiationContext {\n    /**\n     * The [[Env]] used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\nconst emptyEnv = new Env();\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: InstantiationContext): Expr {\n        const value = expr.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const result = expr.elements.includes(value.value as any);\n            return LiteralExpr.fromValue(result);\n        }\n\n        return value === expr.value ? expr : new ContainsExpr(value, expr.elements);\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return new CallExpr(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n            const deps = newCondition.dependencies();\n            if (!deps.zoom && deps.properties.size === 0) {\n                if (Boolean(newCondition.evaluate(emptyEnv, ExprScope.Condition))) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    ContainsExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text || \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) || 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new ContainsExpr(\n                    expr,\n                    elements.map(literal => literal.value)\n                );\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            const op = getEqualityOp(this.lex.token());\n            if (op === undefined) {\n                break;\n            }\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return /unknown targetServiceType requested: /.test(error.message);\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with [[ITiler]].\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue. Useful to optimize the order of\n * decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.Math.degToRad(geoPoint.longitude);\n        result.y = THREE.Math.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity [[Projection]] used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.Math.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox Ghe given geobox\n * @param worldBox The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n\n    const minLongitude = THREE.Math.degToRad(geoBox.west);\n    const maxLongitude = THREE.Math.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        // tslint:disable-next-line: no-bitwise\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        // tslint:disable-next-line: no-bitwise\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.Math.degToRad(geoBox.south);\n    const maxLatutide = THREE.Math.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint The geo coordinates.\n * @param worldpoint The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude || 0);\n    const latitude = THREE.Math.degToRad(geoPoint.latitude);\n    const longitude = THREE.Math.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = MathUtils.newEmptyBox3() as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = MathUtils.newEmptyBox3() as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, MathUtils.newEmptyBox3(), this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.Math.degToRad(south));\n            const sinSouth = Math.sin(THREE.Math.degToRad(south));\n            const cosWest = Math.cos(THREE.Math.degToRad(west));\n            const sinWest = Math.sin(THREE.Math.degToRad(west));\n            const cosNorth = Math.cos(THREE.Math.degToRad(north));\n            const sinNorth = Math.sin(THREE.Math.degToRad(north));\n            const cosEast = Math.cos(THREE.Math.degToRad(east));\n            const sinEast = Math.sin(THREE.Math.degToRad(east));\n            const cosMidX = Math.cos(THREE.Math.degToRad(midX));\n            const sinMidX = Math.sin(THREE.Math.degToRad(midX));\n            const cosMidY = Math.cos(THREE.Math.degToRad(midY));\n            const sinMidY = Math.sin(THREE.Math.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude || 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        const latitude = THREE.Math.degToRad(geoPoint.latitude);\n        const longitude = THREE.Math.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n\n        this.projectPoint(geoPoint, result.position);\n\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given [[TilingScheme]].\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method with the current [[TileKey]] and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey The root of the subtree that should be visited.\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * [[TilingScheme]] used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The [[TilingScheme]] used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[TransformLike]] is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[TransformLike]].\n *\n * @param object The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Vector3 } from \"three\";\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix The rotation of the `OrientedBox3`.\n     * @param extents The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this [[OrientedBox3]].\n     * @param other The other [[OrientedBox3]] to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this [[OrientedBox3]].\n     *\n     * @param center The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this [[OrientedBox3]].\n     *\n     * @param size The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns true if this [[OrientedBox3]] contains the given point.\n     *\n     * @param point A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\n\nimport { Env, MapEnv, Value } from \"./Expr\";\nimport { makeDecodedTechnique } from \"./StyleSetEvaluator\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\n\n/**\n * Defines a map tile metadata.\n */\nexport interface TileInfo {\n    readonly tileKey: TileKey;\n    readonly setupTime: number;\n    readonly transferList?: ArrayBuffer[];\n    readonly numBytes: number;\n}\n\n/**\n * Represents a feature group type for tile info.\n */\nexport enum FeatureGroupType {\n    Point,\n    Line,\n    Polygon\n}\n\n/**\n * Minimum estimated size of a JS object.\n */\nconst MINIMUM_OBJECT_SIZE_ESTIMATION = 100;\n\n/**\n * Structure of arrays containing data for all features of this group. No methods, since the object\n * is being passed as part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n */\nexport class FeatureGroup {\n    /** featureIds */\n    featureIds: Array<number | undefined> = new Array<number | undefined>();\n\n    /** Indices into [[ExtendedTileInfo]].techniqueCatalog */\n    techniqueIndex: number[];\n\n    /** Indices into [[ExtendedTileInfo]].textCatalog. */\n    textIndex: number[];\n\n    /** Indices into positions. */\n    positionIndex: number[];\n\n    /** XY coordinates of this group. */\n    positions: number[];\n\n    /** number of features */\n    numFeatures: number = 0;\n\n    /** number of positions of elements (2 per point) */\n    numPositions: number = 0;\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].layerCatalog. Only available if\n     * [[OmvFeatureGroup]] has been constructed with `storeExtendedTags` set to `true`.\n     */\n    layerIndex?: number[];\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].classCatalog. Only available if\n     * [[OmvFeatureGroup]] has been constructed with `storeExtendedTags` set to `true`.\n     */\n    classIndex?: number[];\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].typeCatalog. Only available if [[OmvFeatureGroup]]\n     * has been constructed with `storeExtendedTags` set to `true`.\n     */\n    typeIndex?: number[];\n\n    /**\n     * Construct featureGroup.\n     *\n     * @param storeExtendedTags Pass `true` to create fields for more OMV tags (`layer`, `class`\n     * and `type`).\n     */\n    constructor(storeExtendedTags: boolean, startSize: number = 5000) {\n        this.featureIds = new Array<number>(startSize);\n        this.featureIds.length = startSize;\n        this.techniqueIndex = new Array<number>(startSize);\n        this.techniqueIndex.length = startSize;\n        this.textIndex = new Array<number>(startSize);\n        this.textIndex.length = startSize;\n        this.positionIndex = new Array<number>(startSize);\n        this.positionIndex.length = startSize;\n        this.positions = new Array<number>(10 * startSize);\n        this.positions.length = 10 * startSize;\n\n        if (storeExtendedTags) {\n            this.layerIndex = new Array<number>(startSize);\n            this.layerIndex.length = startSize;\n            this.classIndex = new Array<number>(startSize);\n            this.classIndex.length = startSize;\n            this.typeIndex = new Array<number>(startSize);\n            this.typeIndex.length = startSize;\n        }\n    }\n\n    /**\n     * Compute size in bytes.\n     */\n    getNumBytes(): number {\n        return (\n            (this.featureIds.length +\n                this.techniqueIndex.length +\n                this.textIndex.length +\n                this.positionIndex.length +\n                this.positions.length +\n                (this.layerIndex !== undefined ? this.layerIndex.length : 0) +\n                (this.classIndex !== undefined ? this.classIndex.length : 0) +\n                (this.typeIndex !== undefined ? this.typeIndex.length : 0)) *\n            8\n        );\n    }\n}\n\n/**\n * Structure of arrays containing data for roads. No methods, since the object is being passed as\n * part of [[ExtendedTileInfo]] across \"process boundaries\" to the web worker.\n */\nexport class LineFeatureGroup extends FeatureGroup {\n    /**\n     * An array of road segment ids. Is the same length as `featureIds` but certain elements can be\n     * `undefined` (if this line feature is not a road).\n     */\n    segmentIds?: number[];\n\n    /**\n     * An array of road start offsets. Certain elements may be `undefined` (if this line feature is\n     * not a road).\n     */\n    segmentStartOffsets?: number[];\n\n    /**\n     * An array of road end offsets. Certain elements may be `undefined` (if this line feature is\n     * not a road).\n     */\n    segmentEndOffsets?: number[];\n\n    /**\n     * An array of object defined by the user. Certain elements may be `undefined` (if this line\n     * feature is not a road, or if the object for that feature is undefined).\n     */\n    userData: Array<{} | undefined> = [];\n\n    /** @override */\n    getNumBytes(): number {\n        return (\n            super.getNumBytes() +\n            ((this.segmentIds !== undefined ? this.segmentIds.length : 0) +\n                (this.segmentStartOffsets !== undefined ? this.segmentStartOffsets.length : 0) +\n                (this.segmentEndOffsets !== undefined ? this.segmentEndOffsets.length : 0)) *\n                8\n        );\n    }\n}\n\n/**\n * Structure of arrays containing data for polygons. No methods, since the object is being passed as\n * part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nexport class PolygonFeatureGroup extends FeatureGroup {\n    /**\n     * Indices into innerRingStartIndex. One entry for every polygon feature.\n     *\n     * Number of rings is computed by either:\n     *\n     * a) Computing from the next innerRingStart, or\n     *\n     * b) Computing from the size of the array.\n     */\n    outerRingStartIndex: number[];\n\n    /**\n     * One entry for every polygon feature. Contains `true` if a polygon ring is an _outside_ ring,\n     * `false` otherwise.\n     */\n    innerRingIsOuterContour: number[];\n\n    /**\n     * Indices into [[OmvFeatureGroup]]`.positions`. One index for every ring.\n     *\n     * Number of inner rings is computed by either:\n     *\n     * a) Computing from the next innerRingStart, or\n     *\n     * b) Computing from the size of the array.\n     */\n    innerRingStartIndex: number[];\n\n    /**\n     * Number of rings stored in all polygons in tis group. Used to keep size of the\n     * arrays.\n     */\n    groupNumRings: number = 0;\n\n    constructor(storeExtendedTags: boolean, startSize: number = 5000) {\n        super(storeExtendedTags, startSize);\n\n        this.outerRingStartIndex = new Array<number>(startSize);\n        this.outerRingStartIndex.length = startSize;\n        this.innerRingIsOuterContour = new Array<number>(startSize);\n        this.innerRingIsOuterContour.length = startSize;\n        this.innerRingStartIndex = new Array<number>(startSize);\n        this.innerRingStartIndex.length = startSize;\n    }\n\n    /** @override */\n    getNumBytes(): number {\n        return (\n            super.getNumBytes() +\n            ((this.outerRingStartIndex !== undefined ? this.outerRingStartIndex.length : 0) +\n                (this.innerRingIsOuterContour !== undefined\n                    ? this.innerRingIsOuterContour.length\n                    : 0) +\n                (this.innerRingStartIndex !== undefined ? this.innerRingStartIndex.length : 0)) *\n                8\n        );\n    }\n}\n\n/**\n * Class to hold infos from [[OmvTile]]s. Optimized for fast serialization when being passed from\n * webworker to main thread. No methods, since the object is being passed across \"process\n * boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nexport class ExtendedTileInfo implements TileInfo {\n    /**\n     * Catalog of strings. Addressed by every features stringIndex.\n     */\n    readonly textCatalog: string[] = new Array<string>();\n    /**\n     * Catalog of techniques. Addressed by every features featureIndex.\n     */\n    readonly techniqueCatalog: IndexedTechnique[] = new Array<IndexedTechnique>();\n\n    /**\n     * Feature group containing all infos about `POINT` features.\n     */\n    readonly pointGroup: FeatureGroup;\n\n    /**\n     * Feature group containing all infos about `LINESTRING` features.\n     */\n    readonly lineGroup: LineFeatureGroup;\n\n    /**\n     * Feature group containing all infos about `POLYGON` features.\n     */\n    readonly polygonGroup: PolygonFeatureGroup;\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly layerCatalog?: string[];\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly classCatalog?: string[];\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly typeCatalog?: string[];\n\n    /**\n     * Used for performance diagnostics.\n     */\n    setupTime: number = 0;\n\n    /**\n     * Size in bytes.\n     */\n    numBytes: number = 0;\n\n    constructor(readonly tileKey: TileKey, storeExtendedTags: boolean) {\n        this.pointGroup = new FeatureGroup(storeExtendedTags);\n        this.lineGroup = new LineFeatureGroup(storeExtendedTags);\n        this.polygonGroup = new PolygonFeatureGroup(storeExtendedTags);\n\n        if (storeExtendedTags) {\n            this.layerCatalog = new Array<string>();\n            this.classCatalog = new Array<string>();\n            this.typeCatalog = new Array<string>();\n        }\n    }\n\n    /**\n     * Compute the memory footprint caused by objects owned by the `ExtendedTileInfo`.\n     */\n    getNumBytes(): number {\n        let numBytes = MINIMUM_OBJECT_SIZE_ESTIMATION;\n        for (const str of this.textCatalog) {\n            numBytes += 2 * str.length;\n        }\n\n        numBytes += this.techniqueCatalog.length * MINIMUM_OBJECT_SIZE_ESTIMATION;\n\n        numBytes += this.pointGroup.getNumBytes();\n        numBytes += this.lineGroup.getNumBytes();\n        numBytes += this.polygonGroup.getNumBytes();\n\n        if (this.layerCatalog !== undefined) {\n            for (const str of this.layerCatalog) {\n                numBytes += 2 * str.length;\n            }\n            for (const str of this.classCatalog!) {\n                numBytes += 2 * str.length;\n            }\n            for (const str of this.typeCatalog!) {\n                numBytes += 2 * str.length;\n            }\n        }\n\n        return numBytes;\n    }\n}\n\nexport namespace ExtendedTileInfo {\n    function finishFeatureGroup(featureGroup: FeatureGroup) {\n        featureGroup.featureIds.length = featureGroup.numFeatures;\n        featureGroup.techniqueIndex.length = featureGroup.numFeatures;\n        featureGroup.textIndex.length = featureGroup.numFeatures;\n        featureGroup.positionIndex.length = featureGroup.numFeatures;\n        featureGroup.positions.length = featureGroup.numPositions;\n\n        if (featureGroup.layerIndex !== undefined) {\n            featureGroup.layerIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.classIndex !== undefined) {\n            featureGroup.classIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.typeIndex !== undefined) {\n            featureGroup.typeIndex.length = featureGroup.numFeatures;\n        }\n    }\n\n    function finishPolygonFeatureGroup(polygonGroup: PolygonFeatureGroup) {\n        finishFeatureGroup(polygonGroup);\n        polygonGroup.outerRingStartIndex.length = polygonGroup.numFeatures;\n        polygonGroup.innerRingIsOuterContour.length = polygonGroup.groupNumRings;\n        polygonGroup.innerRingStartIndex.length = polygonGroup.groupNumRings;\n    }\n\n    function finishLineFeatureGroup(lineGroup: LineFeatureGroup) {\n        finishFeatureGroup(lineGroup);\n        if (lineGroup.segmentIds !== undefined) {\n            lineGroup.segmentIds.length = lineGroup.numFeatures;\n            lineGroup.segmentStartOffsets!.length = lineGroup.numFeatures;\n            lineGroup.segmentEndOffsets!.length = lineGroup.numFeatures;\n        }\n    }\n\n    /**\n     * Finalize the tile's features groups.\n     */\n    export function finish(tileInfo: ExtendedTileInfo) {\n        finishFeatureGroup(tileInfo.pointGroup);\n        finishLineFeatureGroup(tileInfo.lineGroup);\n        finishPolygonFeatureGroup(tileInfo.polygonGroup);\n        tileInfo.numBytes = tileInfo.getNumBytes();\n    }\n\n    /**\n     * Returns the number of features in this feature group.\n     */\n    export function featureGroupSize(featureGroup: FeatureGroup): number {\n        return featureGroup.numFeatures;\n    }\n\n    /**\n     * Check if the feature group is finalized.\n     */\n    export function featureGroupFinished(featureGroup: FeatureGroup): boolean {\n        return featureGroup.numPositions === featureGroup.positions.length;\n    }\n\n    /**\n     * Check if the tileInfo is finalized.\n     */\n    export function tileInfoFinished(tileInfo: ExtendedTileInfo): boolean {\n        return (\n            featureGroupFinished(tileInfo.pointGroup) &&\n            featureGroupFinished(tileInfo.lineGroup) &&\n            featureGroupFinished(tileInfo.polygonGroup)\n        );\n    }\n\n    /**\n     * Determine the name of (OMV) feature. It implements the special handling required\n     * to determine the text content of a feature from its tags, which are passed in as the `env`.\n     *\n     * @param env Environment containing the tags from the (OMV) feature.\n     * @param useAbbreviation `true` to use the abbreviation if available.\n     * @param useIsoCode `true` to use the tag \"iso_code\".\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    export function getFeatureName(\n        env: Env,\n        useAbbreviation?: boolean,\n        useIsoCode?: boolean,\n        languages?: string[]\n    ): string | undefined {\n        let name;\n        if (useAbbreviation) {\n            const abbreviation = env.lookup(`name:short`);\n            if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n                return abbreviation;\n            }\n        }\n        if (useIsoCode) {\n            const isoCode = env.lookup(`iso_code`);\n            if (typeof isoCode === \"string\" && isoCode.length > 0) {\n                return isoCode;\n            }\n        }\n        if (languages !== undefined) {\n            for (const lang of languages) {\n                name = env.lookup(`name:${lang}`) || env.lookup(`name_${lang}`);\n                if (typeof name === \"string\" && name.length > 0) {\n                    return name;\n                }\n            }\n        }\n        name = env.lookup(\"name\");\n        if (typeof name === \"string\") {\n            return name;\n        }\n        return undefined;\n    }\n\n    /**\n     * Determine the text string of the map feature. It implements the special handling required\n     * to determine the text content of a feature from its tags, which are passed in as the `env`.\n     *\n     * @param feature Feature, including properties from the (OMV) feature.\n     * @param technique technique defining how text should be created from feature\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    export function getFeatureText(\n        context: Env | AttrEvaluationContext,\n        technique: Technique,\n        languages?: string[]\n    ): string | undefined {\n        let useAbbreviation: boolean | undefined;\n        let useIsoCode: boolean | undefined;\n        const env = context instanceof Env ? context : context.env;\n        if (\n            isTextTechnique(technique) ||\n            isPoiTechnique(technique) ||\n            isLineMarkerTechnique(technique)\n        ) {\n            if (technique.text !== undefined) {\n                return evaluateTechniqueAttr(context, technique.text);\n            }\n            if (technique.label !== undefined) {\n                const name = env.lookup(technique.label);\n                return typeof name === \"string\" ? name : undefined;\n            }\n            useAbbreviation = technique.useAbbreviation;\n            useIsoCode = technique.useIsoCode;\n        }\n\n        return getFeatureName(env, useAbbreviation, useIsoCode, languages);\n    }\n}\n\n/**\n * Support class for [[ExtendedTileInfo]]. Assist in filling it with data.\n */\nexport class ExtendedTileInfoWriter {\n    /** Map to identify which techniques already have been added to the [[ExtendedTileInfo]]. */\n    private readonly techniqueIndexMap = new Map<number, number>();\n    /** Map to identify which strings already have been added to the [[ExtendedTileInfo]]. */\n    private readonly stringMap = new Map<string, number>();\n    /** Map to identify which `layer` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly layerMap = new Map<string, number>();\n    /** Map to identify which `class` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly classMap = new Map<string, number>();\n    /** Map to identify which `type` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly typeMap = new Map<string, number>();\n\n    /**\n     * Create an [[ExtendedTileInfoWriter]] for an [[ExtendedTileInfo]]. Assist in filling the\n     * [[ExtendedTileInfo]] with data.\n     *\n     * @param tileInfo [[ExtendedTileInfo]] to write data to.\n     * @param storeExtendedTags Pass `true` if feature data like `layer`, `class`or `type` should\n     *          be stored for every feature.\n     */\n    constructor(readonly tileInfo: ExtendedTileInfo, readonly storeExtendedTags: boolean) {}\n\n    /**\n     * Adds a [[Technique]] to the catalog of techniques. Individual techniques have a `_index` file\n     * which has been created in the [[StyleSetEvaluator]]. This index is required to identify a\n     * technique. The `Map` is used to map techniques to already added techniques, or store the\n     * technique as new, and add it to the map.\n     *\n     * @param technique The [[Technique]] to add.\n     */\n    addTechnique(technique: IndexedTechnique): number {\n        let infoTileTechniqueIndex = this.techniqueIndexMap.get(technique._index);\n        if (infoTileTechniqueIndex !== undefined) {\n            return infoTileTechniqueIndex;\n        }\n\n        const decodedTechnique = makeDecodedTechnique(technique);\n\n        infoTileTechniqueIndex = this.tileInfo.techniqueCatalog.length;\n        this.techniqueIndexMap.set(decodedTechnique._index, infoTileTechniqueIndex);\n        this.tileInfo.techniqueCatalog.push(decodedTechnique);\n\n        return infoTileTechniqueIndex;\n    }\n\n    /**\n     * Add a feature.\n     *\n     * @param featureGroup The feature group to add to.\n     * @param technique The technique to add.\n     * @param env The `env` which is a mix of original OMV feature tags and fields added by the\n     *      [[StyleSetEvaluator]]\n     * @param featureId The featureId, a number unique for many features (but not all).\n     * @param infoTileTechniqueIndex The previously computed index of the technique. Must have been\n     *      computed by `addTechnique(technique)`.\n     * @param isPolygonGroup `true`for polygons.\n     */\n    addFeature(\n        featureGroup: FeatureGroup,\n        env: MapEnv,\n        featureId: number | undefined,\n        featureText: string | undefined,\n        infoTileTechniqueIndex: number,\n        featureGroupType: FeatureGroupType\n    ) {\n        // compute name/label of feature\n        let stringIndex = -1;\n        if (featureText !== undefined && featureText.length > 0) {\n            stringIndex = this.addText(featureText);\n        }\n\n        // add indices into the arrays.\n        featureGroup.featureIds[featureGroup.numFeatures] = featureId;\n        featureGroup.techniqueIndex[featureGroup.numFeatures] = infoTileTechniqueIndex;\n        featureGroup.textIndex[featureGroup.numFeatures] = stringIndex;\n        featureGroup.positionIndex[featureGroup.numFeatures] = featureGroup.numPositions;\n\n        switch (featureGroupType) {\n            case FeatureGroupType.Polygon:\n                // polygons need the extra fields for polygon rings\n                const polygonGroup = featureGroup as PolygonFeatureGroup;\n                assert(polygonGroup.outerRingStartIndex !== undefined);\n                assert(polygonGroup.innerRingStartIndex !== undefined);\n                assert(polygonGroup.innerRingIsOuterContour !== undefined);\n                polygonGroup.outerRingStartIndex[featureGroup.numFeatures] =\n                    polygonGroup.groupNumRings;\n                break;\n            case FeatureGroupType.Line:\n                (featureGroup as LineFeatureGroup).userData[featureGroup.numFeatures] = env.entries;\n                break;\n        }\n\n        // store the extra feature fields\n        if (this.storeExtendedTags) {\n            featureGroup.layerIndex![featureGroup.numFeatures] = this.addLayer(\n                env.lookup(\"$layer\")\n            );\n            featureGroup.classIndex![featureGroup.numFeatures] = this.addClass(env.lookup(\"class\"));\n            featureGroup.typeIndex![featureGroup.numFeatures] = this.addType(env.lookup(\"type\"));\n        }\n\n        featureGroup.numFeatures++;\n    }\n\n    /**\n     * Add the X/Y coordinate of the point. Only for point feature groups.\n     *\n     * @param featureGroup The feature group to add it to.\n     * @param x X Position of point.\n     * @param y Y Position of point.\n     */\n    addFeaturePoint(featureGroup: FeatureGroup, x: number, y: number) {\n        featureGroup.positions[featureGroup.numPositions++] = x;\n        featureGroup.positions[featureGroup.numPositions++] = y;\n    }\n\n    /**\n     * Add the line points as X/Y coordinates to the line feature.\n     *\n     * If a line feature has more than one line (rare for HERE data), it should define multiple\n     * line features for it.\n     *\n     * @param featureGroup The feature group to add to. Must be line feature group.\n     * @param points The X/Y coordinates of the points.\n     */\n    addFeaturePoints(featureGroup: FeatureGroup, points: number[]) {\n        const n = featureGroup.numPositions;\n        const l = points.length;\n        const p = featureGroup.positions;\n        for (let i = 0; i < l; i++) {\n            p[n + i] = points[i];\n        }\n        featureGroup.numPositions += points.length;\n    }\n\n    /**\n     * Add the information about road segments to the line feature. Performs lazy initialization of\n     * `segmentIds`, `segmentStartOffsets`, and `segmentEndOffsets` members of a\n     * [[LineFeatureGroup]] instance.\n     *\n     * @param featureGroup The line feature group to add information to.\n     * @param segmentId Segment id of a feature.\n     * @param startOffset Start offset of a feature.\n     * @param endOffset End offset of a feature.\n     */\n    addRoadSegments(\n        featureGroup: LineFeatureGroup,\n        segmentId: number,\n        startOffset: number,\n        endOffset: number\n    ) {\n        if (featureGroup.segmentIds === undefined) {\n            featureGroup.segmentIds = new Array<number>();\n            featureGroup.segmentStartOffsets = new Array<number>();\n            featureGroup.segmentEndOffsets = new Array<number>();\n        }\n\n        featureGroup.segmentIds[featureGroup.numFeatures - 1] = segmentId;\n        featureGroup.segmentStartOffsets![featureGroup.numFeatures - 1] = startOffset;\n        featureGroup.segmentEndOffsets![featureGroup.numFeatures - 1] = endOffset;\n    }\n\n    /**\n     * Add a single ring to the polygon. Can be called multiple times to add multiple rings to the\n     * polygon.\n     *\n     * @param featureGroup Polygon feature group to add polygon ring to.\n     * @param contour The X/Y coordinates of the ring.\n     * @param isOuterRing Pass `true`if it is a outer ring, otherwise `false`.\n     */\n    addRingPoints(featureGroup: PolygonFeatureGroup, contour: number[], isOuterRing: boolean) {\n        featureGroup.innerRingStartIndex[featureGroup.groupNumRings] = featureGroup.numPositions;\n        featureGroup.innerRingIsOuterContour[featureGroup.groupNumRings] = isOuterRing ? 1 : 0;\n        featureGroup.groupNumRings++;\n\n        const n = featureGroup.numPositions;\n        const l = contour.length;\n        const p = featureGroup.positions;\n        for (let i = 0; i < l; i++) {\n            p[n + i] = contour[i];\n        }\n        featureGroup.numPositions += contour.length;\n    }\n\n    /**\n     * Finalize the tile info's feature group.\n     */\n    finish(): any {\n        ExtendedTileInfo.finish(this.tileInfo);\n    }\n\n    private addText(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.textCatalog, this.stringMap);\n    }\n\n    private addLayer(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.layerCatalog!, this.layerMap);\n    }\n\n    private addClass(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.classCatalog!, this.classMap);\n    }\n\n    private addType(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.typeCatalog!, this.typeMap);\n    }\n\n    // Add a string to the strings catalog. Returns index into the catalog.\n    private addStringValue(\n        str: Value | undefined,\n        catalog: string[],\n        map: Map<string, number>\n    ): number {\n        if (str === undefined || str === null) {\n            return -1;\n        }\n        const name = str.toString();\n        let i = map.get(name);\n        if (i !== undefined) {\n            return i;\n        }\n        i = catalog.length;\n        catalog.push(name);\n        map.set(name, i);\n        return i;\n    }\n}\n\n/**\n * Support for [[ExtendedTileInfo]]. Defines the accessor that allows to access the polygon data.\n */\nexport interface ExtendedTileInfoPolygonAccessor {\n    /**\n     * Number of rings in the polygon.\n     */\n    numRings: number;\n\n    /**\n     * Return if ring is an outer ring.\n     *\n     * @param ringIndex Specify ring index.\n     * @return `true` if ring is an outer ring, `false` otherwise.\n     */\n    isOuterRing(ringIndex: number): boolean;\n\n    /**\n     * Return information about the vertices that make up the ring.\n     *\n     * @param ringIndex Specify ring index.\n     * @returns Info about the array, start and number of points in the ring.\n     */\n    getPoints(\n        ringIndex: number\n    ): {\n        points: ArrayLike<number>;\n        pointsStart: number;\n        numPointValues: number;\n    };\n}\n\n/**\n * Implementation of [[ExtendedTileInfoPolygonAccessor]].\n */\nclass ExtendedTileInfoPolygonAccessorImpl implements ExtendedTileInfoPolygonAccessor {\n    /**\n     * Accessed data for polygons feature group.\n     */\n    polygons?: PolygonFeatureGroup;\n    /**\n     * Feature's index in the group.\n     */\n    featureIndex: number = 0;\n    /**\n     * Indicates where the ring starts.\n     */\n    ringStart: number = 0;\n    /**\n     * Number of rings.\n     */\n    numRings: number = 0;\n\n    /**\n     * Setup the accessor for extended [[TileInfo]].\n     *\n     * @param polygons polygons feature group.\n     * @param featureIndex feature's index in the group.\n     * @param ringStart where the ring starts.\n     * @param numRings number of rings.\n     */\n    setup(\n        polygons: PolygonFeatureGroup,\n        featureIndex: number,\n        ringStart: number,\n        numRings: number\n    ) {\n        this.polygons = polygons;\n        this.featureIndex = featureIndex;\n        this.ringStart = ringStart;\n        this.numRings = numRings;\n    }\n\n    /**\n     * Shut down the accessor and free all references.\n     */\n    reset() {\n        this.polygons = undefined;\n        this.featureIndex = 0;\n        this.ringStart = 0;\n        this.numRings = 0;\n    }\n\n    isOuterRing(ringIndex: number): boolean {\n        assert(ringIndex >= 0);\n        assert(ringIndex < this.numRings);\n        assert(this.polygons !== undefined);\n        if (ringIndex < 0 || ringIndex >= this.numRings || this.polygons === undefined) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n        return this.polygons.innerRingIsOuterContour[this.ringStart + ringIndex] !== 0;\n    }\n\n    getPoints(\n        ringIndex: number\n    ): {\n        points: ArrayLike<number>;\n        pointsStart: number;\n        numPointValues: number;\n    } {\n        assert(ringIndex >= 0);\n        assert(ringIndex < this.numRings);\n        assert(this.polygons !== undefined);\n        if (ringIndex < 0 || ringIndex >= this.numRings || this.polygons === undefined) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n\n        // compute the start/size of the points in this ring. All `points` are actually just the\n        // indices of a single X/Y coordinate.\n        const pointsStart = this.polygons.innerRingStartIndex[this.ringStart + ringIndex];\n\n        let numPointValues: number;\n        if (ringIndex < this.numRings - 1) {\n            numPointValues =\n                this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n        } else {\n            if (this.ringStart + ringIndex < this.polygons.innerRingStartIndex.length - 1) {\n                numPointValues =\n                    this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n            } else {\n                numPointValues = this.polygons.positions.length - pointsStart;\n            }\n        }\n\n        return {\n            points: this.polygons.positions,\n            pointsStart,\n            numPointValues\n        };\n    }\n}\n\n/**\n * Interface that a client of [[ExtendedTileInfoAccessor]] has to implement.\n */\nexport interface ExtendedTileInfoHandler {\n    acceptPoint?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        x: number,\n        y: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number\n    ): void;\n\n    acceptLine?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number,\n        points: ArrayLike<number>,\n        pointsStart: number,\n        numElements: number,\n        segmentId?: number,\n        startOffset?: number,\n        endOffset?: number\n    ): void;\n\n    acceptPolygon?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number,\n        polygonAccessor: ExtendedTileInfoPolygonAccessor\n    ): void;\n}\n\n/**\n * Supporting class for [[ExtendedTileInfo]]. Takes an [[ExtendedTileInfoHandler]] and calls an\n * `accept` for every feature of the [[ExtendedTileInfo]], or just all features of a specified\n * `featureId`.\n */\nexport class ExtendedTileInfoVisitor {\n    // static instance to work without allocations.\n    private static polygonAccessor = new ExtendedTileInfoPolygonAccessorImpl();\n\n    constructor(readonly tileInfo: ExtendedTileInfo) {}\n\n    /**\n     * Visit all feature in the [[ExtendedTileInfo]]\n     *\n     * @param handler Let the `handler` visit all features.\n     */\n    visitAll(handler: ExtendedTileInfoHandler) {\n        this.visitAllPointFeatures(handler);\n        this.visitAllLineFeatures(handler);\n        this.visitAllPolygonFeatures(handler);\n    }\n\n    /**\n     * Visit all features of a specified featureId.\n     *\n     * @param featureId The featureId to visit.\n     * @param handler The `handler` to use.\n     */\n    visitFeature(featureId: number, handler: ExtendedTileInfoHandler): number {\n        let numFeaturesFound = 0;\n        const numPointFeatures = this.tileInfo.pointGroup.numFeatures;\n        const pointFeatures = this.tileInfo.pointGroup.featureIds;\n        for (let i = 0; i < numPointFeatures; i++) {\n            if (pointFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPointFeature(i, handler);\n            }\n        }\n        const numLineFeatures = this.tileInfo.lineGroup.numFeatures;\n        const lineFeatures = this.tileInfo.lineGroup.featureIds;\n        for (let i = 0; i < numLineFeatures; i++) {\n            if (lineFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitLineFeature(i, handler);\n            }\n        }\n        const numPolygonFeatures = this.tileInfo.polygonGroup.numFeatures;\n        const polygonsFeatures = this.tileInfo.polygonGroup.featureIds;\n        for (let i = 0; i < numPolygonFeatures; i++) {\n            if (polygonsFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPolygonFeature(i, handler);\n            }\n        }\n        return numFeaturesFound;\n    }\n\n    /**\n     * Visit all `POINT` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    visitAllPointFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.pointGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitPointFeature(i, handler);\n        }\n    }\n\n    /**\n     * Visit all `LINESTRING` features.\n     *\n     * @param handler The handler to use.\n     */\n    visitAllLineFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.lineGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitLineFeature(i, handler);\n        }\n    }\n\n    /**\n     * Visit all `POLYGON` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    visitAllPolygonFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.polygonGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitPolygonFeature(i, handler);\n        }\n    }\n\n    private getTag(featureIndex: number, index: number[]): number {\n        return index !== undefined && index[featureIndex] >= 0 ? index[featureIndex] : -1;\n    }\n\n    /**\n     * Call the `handler` on a point feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitPointFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        const tileInfo = this.tileInfo;\n        const points = tileInfo.pointGroup;\n\n        const start = points.positionIndex[featureIndex];\n        const x = points.positions[start];\n        const y = points.positions[start + 1];\n\n        if (!!handler.acceptPoint) {\n            handler.acceptPoint(\n                points.featureIds[featureIndex],\n                points.techniqueIndex[featureIndex],\n                x,\n                y,\n                points.textIndex[featureIndex],\n                this.getTag(featureIndex, points.layerIndex!),\n                this.getTag(featureIndex, points.classIndex!),\n                this.getTag(featureIndex, points.typeIndex!)\n            );\n        }\n    }\n\n    /**\n     * Call the `handler` on a line feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitLineFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        const tileInfo = this.tileInfo;\n        const lines = tileInfo.lineGroup;\n\n        const numFeatures = lines.numFeatures;\n        const positionsStart = lines.positionIndex[featureIndex];\n        const numPointValues =\n            featureIndex === numFeatures - 1\n                ? lines.positions.length - positionsStart\n                : lines.positionIndex[featureIndex + 1] - positionsStart;\n\n        let segmentId: number | undefined;\n        let startOffset: number | undefined;\n        let endOffset: number | undefined;\n\n        if (lines.segmentIds !== undefined) {\n            segmentId = lines.segmentIds[featureIndex];\n            startOffset = lines.segmentStartOffsets![featureIndex];\n            endOffset = lines.segmentEndOffsets![featureIndex];\n        }\n\n        if (!!handler.acceptLine) {\n            handler.acceptLine(\n                lines.featureIds[featureIndex],\n                lines.techniqueIndex[featureIndex],\n                lines.textIndex[featureIndex],\n                this.getTag(featureIndex, lines.layerIndex!),\n                this.getTag(featureIndex, lines.classIndex!),\n                this.getTag(featureIndex, lines.typeIndex!),\n                tileInfo.lineGroup.positions,\n                positionsStart,\n                numPointValues,\n                segmentId,\n                startOffset,\n                endOffset\n            );\n        }\n    }\n\n    /**\n     * Call the `handler` on a polygon feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitPolygonFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        if (handler.acceptPolygon === undefined) {\n            return;\n        }\n\n        const tileInfo = this.tileInfo;\n        const polygons = tileInfo.polygonGroup;\n\n        const numFeatures = polygons.numFeatures;\n        const ringStart = polygons.outerRingStartIndex[featureIndex];\n        const numRings =\n            featureIndex === numFeatures - 1\n                ? polygons.innerRingStartIndex.length - ringStart\n                : polygons.outerRingStartIndex[featureIndex + 1] - ringStart;\n\n        // Use a static instance, so we do not allocate anything here\n        ExtendedTileInfoVisitor.polygonAccessor.setup(polygons, featureIndex, ringStart, numRings);\n\n        handler.acceptPolygon(\n            polygons.featureIds[featureIndex],\n            polygons.techniqueIndex[featureIndex],\n            polygons.textIndex[featureIndex],\n            this.getTag(featureIndex, polygons.layerIndex!),\n            this.getTag(featureIndex, polygons.classIndex!),\n            this.getTag(featureIndex, polygons.typeIndex!),\n            ExtendedTileInfoVisitor.polygonAccessor\n        );\n\n        // Free all data references.\n        ExtendedTileInfoVisitor.polygonAccessor.reset();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned [[Expr]] objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_inExprs = new Map<Expr, ContainsExpr[]>();\n    private readonly m_matchExprs: MatchExpr[] = [];\n    private readonly m_caseExprs: CaseExpr[] = [];\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique [[Expr]]\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr The [[Expr]] to add to this [[ExprPool]].\n     * @returns A unique [[Expr]] that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_objectLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        if (!this.m_inExprs.has(value)) {\n            this.m_inExprs.set(value, []);\n        }\n        const inExprs = this.m_inExprs.get(value)!;\n        for (const inExpr of inExprs) {\n            if (inExpr.elements.length !== expr.elements.length) {\n                continue;\n            }\n            // find the index of the first element in the cached 'in' expr\n            // that is not contained in 'expr.elements'.\n            const i = inExpr.elements.findIndex(x => !expr.elements.includes(x));\n            if (i === -1) {\n                return inExpr;\n            }\n        }\n        const e = new ContainsExpr(value, expr.elements);\n        this.m_inExprs.set(value, [e]);\n        return e;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        for (const candidate of this.m_matchExprs) {\n            if (candidate.value !== value) {\n                continue;\n            }\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n        const r = new MatchExpr(value, branches, fallback);\n        this.m_matchExprs.push(r);\n        return r;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n\n        for (const candidate of this.m_caseExprs) {\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n\n        const r = new CaseExpr(branches, fallback);\n        this.m_caseExprs.push(r);\n        return r;\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = new CallExpr(expr.op, expressions);\n        calls.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { StyleDeclaration, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: StyleDeclaration) => boolean): boolean {\n        const visit = (style: StyleDeclaration): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ITileDecoder,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\n\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nexport abstract class ThemedTileDecoder implements ITileDecoder {\n    languages?: string[];\n    m_storageLevelOffset: number = 0;\n\n    protected m_styleSetEvaluator?: StyleSetEvaluator;\n    abstract connect(): Promise<void>;\n\n    dispose() {\n        // implemented in subclasses\n    }\n\n    decodeTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        if (this.m_styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"No style is defined\"));\n        }\n\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    }\n\n    // tslint:disable:no-unused-variable\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        return Promise.resolve(undefined);\n    }\n    // tslint:disable:no-unused-variable\n\n    configure(\n        styleSet?: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        if (styleSet !== undefined) {\n            this.m_styleSetEvaluator = new StyleSetEvaluator(styleSet, definitions);\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n        if (options !== undefined && options.storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = options.storageLevelOffset;\n        }\n    }\n\n    /**\n     * Create a [[DecodedTile]] from binary tile data and a theme description in form of a\n     * [[StyleSetEvaluator]].\n     *\n     * @param data Binary data in form of [[ArrayBufferLike]], or any object.\n     * @param tileKey Quadtree address of tile.\n     * @param styleSetEvaluator Processor of [[Theme]], identifies styling techniques applicable to\n     *      individual objects.\n     * @param projection Projection used by the individual data sources.\n     */\n    abstract decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile>;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Fills an index buffer with the indices for the extruded walls for a polygon contour.\n *\n * @param indexBuffer Index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param contour Vertices that compose the contour.\n * @param contourEdges Collection of booleans indicating if contour edges should be added.\n * @param boundaryWalls If `false`, walls in tile boundaries will not be created.\n *\n */\nexport function addExtrudedWalls(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    contour: number[],\n    contourEdges?: boolean[],\n    boundaryWalls?: boolean\n): void {\n    // Infer the index buffer's position of the vertices that form the extruded-polygons' walls\n    // by stepping through the contour segment by segment.\n    const nSegments = contour.length / vertexStride;\n    for (let i = 0; i < nSegments; ++i) {\n        const vFootprint0 = vertexOffset + i * 2;\n        const vRoof0 = vFootprint0 + 1;\n        const vFootprint1 = vertexOffset + ((i + 1) % nSegments) * 2;\n        const vRoof1 = vFootprint1 + 1;\n        if (boundaryWalls !== false || contourEdges === undefined) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        } else if (contourEdges[i]) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer Edge index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param polygonContour Vertices that compose the contour.\n * @param polygonContourEdges Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute,\n    TypedArray\n} from \"three\";\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: TypedArray): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as TypedArray;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    addBuffersToTransferList,\n    getProjection,\n    ITileDecoder,\n    WorkerDecoderProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\nconst logger = LoggerManager.instance.create(\"TileDecoderService\");\n\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nexport class TileDecoderService extends WorkerService {\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param decoder   [[TileDecoder]] instance.\n     */\n    static start(serviceId: string, decoder: ITileDecoder) {\n        return new TileDecoderService(serviceId, decoder);\n    }\n\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param m_decoder Decoder to handle the decoding and info requests.\n     */\n    constructor(readonly serviceId: string, private readonly m_decoder: ITileDecoder) {\n        super(serviceId);\n        this.m_decoder.connect();\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerDecoderProtocol.isDecodeTileRequest(request)) {\n            return this.handleDecodeTileRequest(request);\n        } else if (WorkerDecoderProtocol.isTileInfoRequest(request)) {\n            return this.handleTileInfoRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request Message of type [[ConfigurationMessage]].\n     * @override\n     */\n    protected handleMessage(message: any) {\n        if (WorkerDecoderProtocol.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        } else {\n            logger.error(`[${this.serviceId}]: invalid message ${message.type}`);\n        }\n    }\n\n    private handleDecodeTileRequest(\n        request: WorkerDecoderProtocol.DecodeTileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.decodeTile(request.data, tileKey, projection).then(decodedTile => {\n            const transferList: ArrayBuffer[] = [];\n            decodedTile.geometries.forEach(geom => {\n                geom.vertexAttributes.forEach(attr => {\n                    if (attr.buffer instanceof ArrayBuffer) {\n                        transferList.push(attr.buffer);\n                    }\n                });\n\n                if (geom.index && geom.index.buffer instanceof ArrayBuffer) {\n                    transferList.push(geom.index.buffer);\n                }\n\n                if (\n                    geom.objInfos !== undefined &&\n                    geom.objInfos.length === 1 &&\n                    typeof geom.objInfos[0] === \"object\" &&\n                    \"displacementMap\" in (geom.objInfos[0] as any)\n                ) {\n                    transferList.push((geom.objInfos[0] as any).displacementMap.buffer);\n                }\n            });\n\n            decodedTile.techniques.forEach(technique => {\n                addBuffersToTransferList(technique, transferList);\n            });\n\n            return {\n                response: decodedTile,\n                transferList\n            };\n        });\n    }\n\n    private handleTileInfoRequest(\n        request: WorkerDecoderProtocol.TileInfoRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(tileInfo => {\n            const transferList: ArrayBuffer[] =\n                tileInfo !== undefined && tileInfo.transferList !== undefined\n                    ? tileInfo.transferList\n                    : [];\n            return {\n                response: tileInfo,\n                transferList\n            };\n        });\n    }\n\n    private handleConfigurationMessage(message: WorkerDecoderProtocol.ConfigurationMessage) {\n        this.m_decoder.configure(\n            message.styleSet,\n            message.definitions,\n            message.languages,\n            message.options\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler, WorkerTilerProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { GeoJsonTiler } from \"./GeoJsonTiler\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * An extension to [[WorkerService]], the `TilerService` implements an asynchronous (message based)\n * service to tile untiled payloads in web workers. The `TilerService` itself lives in the web\n * worker, and communicates with messages by means of a [[ConcurrentWorkerSet]] with the\n * application.\n *\n * The `TilerService` registers tile indices (parent tile to be subdivided) by handling a\n * [[RegisterIndexRequest]], and can later retrieve tiled payloads from through the [[TileRequest]].\n * The data is sent back in form of a [[WorkerServiceResponse]].\n */\nexport class TilerService extends WorkerService {\n    /**\n     * Start a [[TilerService]].\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    static start(serviceId: string) {\n        return new TilerService(serviceId);\n    }\n    tiler: ITiler = new GeoJsonTiler();\n\n    /**\n     * Set up the `TilerService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    constructor(readonly serviceId: string) {\n        super(serviceId);\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request [[WorkerTilerProtocol]] request.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerTilerProtocol.isRegisterIndexRequest(request)) {\n            return this.handleRegisterIndexRequest(request);\n        } else if (WorkerTilerProtocol.isUpdateIndexRequest(request)) {\n            return this.handleUpdateIndexRequest(request);\n        } else if (WorkerTilerProtocol.isTileRequest(request)) {\n            return this.handleTileRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    private async handleTileRequest(\n        request: WorkerTilerProtocol.TileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const tile = await this.tiler.getTile(request.index, tileKey);\n\n        return { response: tile || {} };\n    }\n\n    private async handleRegisterIndexRequest(\n        message: WorkerTilerProtocol.RegisterIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n        await this.tiler.registerIndex(message.id, input);\n\n        return { response: {} };\n    }\n\n    private async handleUpdateIndexRequest(\n        message: WorkerTilerProtocol.UpdateIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n\n        this.tiler.updateIndex(message.id, input);\n\n        return { response: {} };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * Factory function that creates [[WorkerService]].\n */\nexport type WorkerServiceFactory = (serviceId: string) => WorkerService;\n\n/**\n * Worker service class definition as needed by [[WorkerServiceManager.register]].\n */\nexport interface WorkerServiceDescriptor {\n    serviceType: string;\n    factory: WorkerServiceFactory;\n}\n\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nexport class WorkerServiceManager extends WorkerService {\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    static getInstance() {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n            );\n        }\n        return this.m_service;\n    }\n\n    /**\n     * Default instance of `WorkerServiceManager`.\n     */\n    private static m_service: WorkerServiceManager;\n\n    /**\n     * Contains all registered service factories indexed by `serviceType`.\n     */\n    private m_factories = new Map<string, WorkerServiceFactory>();\n\n    /**\n     * Contains all managed worker services indexed by their `serviceId`.\n     */\n    private m_services = new Map<string, WorkerService>();\n\n    private constructor(\n        serviceId: string = WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n    ) {\n        super(serviceId);\n    }\n\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor service type and factory\n     */\n    register(workerServiceDescriptor: WorkerServiceDescriptor): void {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    }\n\n    /** @override */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (request.type === WorkerServiceProtocol.Requests.CreateService) {\n            const existingService = this.m_services.get(request.targetServiceId);\n            if (existingService !== undefined) {\n                throw Error(\n                    // tslint:disable-next-line: max-line-length\n                    `error - service with targetServiceId='${request.targetServiceId}' already running, ignoring CreateService request`\n                );\n            }\n\n            const factory = this.m_factories.get(request.targetServiceType);\n\n            if (factory === undefined) {\n                throw Error(`unknown targetServiceType requested: '${request.targetServiceType}'`);\n            }\n\n            const service = factory(request.targetServiceId);\n            this.m_services.set(request.targetServiceId, service);\n        }\n        if (request.type === WorkerServiceProtocol.Requests.DestroyService) {\n            const service = this.m_services.get(request.targetServiceId);\n            if (service === undefined) {\n                throw Error(`unknown targetServiceId '${request.targetServiceId}'`);\n            }\n            service.destroy();\n            this.m_services.delete(request.targetServiceId);\n        }\n\n        return Promise.resolve({\n            response: {}\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, MapEnv, Value, ValueMap } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport * as Long from \"long\";\nimport { Vector2 } from \"three\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { OmvGeometryType } from \"./OmvDecoderDefs\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\nimport { com } from \"./proto/vector_tile\";\n\n/**\n * @hidden\n */\nexport enum CommandKind {\n    MoveTo = 1,\n    LineTo = 2,\n    ClosePath = 7\n}\n\n/**\n * @hidden\n */\nexport interface BaseCommand {\n    kind: CommandKind;\n}\n\n/**\n * @hidden\n */\nexport interface PositionCommand extends BaseCommand {\n    position: Vector2;\n}\n\n/**\n * @hidden\n */\nexport type GeometryCommand = BaseCommand | PositionCommand;\n\n/**\n * @hidden\n */\nexport function isMoveToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.MoveTo;\n}\n\n/**\n * @hidden\n */\nexport function isLineToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.LineTo;\n}\n\n/**\n * @hidden\n */\nexport function isClosePathCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.ClosePath;\n}\n\n/**\n * @hidden\n */\nexport interface OmvVisitor {\n    visitLayer?(layer: com.mapbox.pb.Tile.ILayer): boolean;\n    endVisitLayer?(layer: com.mapbox.pb.Tile.ILayer): void;\n    visitPointFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitLineFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitPolygonFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n}\n\n/**\n * @hidden\n */\nexport function visitOmv(vectorTile: com.mapbox.pb.Tile, visitor: OmvVisitor) {\n    if (!vectorTile.layers) {\n        return;\n    }\n\n    for (const layer of vectorTile.layers) {\n        if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n            visitOmvLayer(layer, visitor);\n        }\n        if (visitor.endVisitLayer) {\n            visitor.endVisitLayer(layer);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport function visitOmvLayer(layer: com.mapbox.pb.Tile.ILayer, visitor: OmvVisitor) {\n    if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n        if (layer.features) {\n            for (const feature of layer.features) {\n                switch (feature.type) {\n                    case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POINT:\n                        if (visitor.visitPointFeature) {\n                            visitor.visitPointFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.LINESTRING:\n                        if (visitor.visitLineFeature) {\n                            visitor.visitLineFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POLYGON:\n                        if (visitor.visitPolygonFeature) {\n                            visitor.visitPolygonFeature(feature);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    if (visitor.endVisitLayer) {\n        visitor.endVisitLayer(layer);\n    }\n}\n\n/**\n * @hidden\n */\nexport interface FeatureAttributesVisitor {\n    visitAttribute(name: string, value: com.mapbox.pb.Tile.IValue): boolean;\n}\n\n/**\n * @hidden\n */\nexport class FeatureAttributes {\n    accept(\n        layer: com.mapbox.pb.Tile.ILayer,\n        feature: com.mapbox.pb.Tile.IFeature,\n        visitor: FeatureAttributesVisitor\n    ): void {\n        const { keys, values } = layer;\n        const tags = feature.tags;\n\n        if (!tags || !keys || !values) {\n            return;\n        }\n\n        for (let i = 0; i < tags.length; i += 2) {\n            const key = keys[tags[i]];\n            const value = values[tags[i + 1]];\n            if (!visitor.visitAttribute(key, value)) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport interface GeometryCommandsVisitor {\n    type: \"Point\" | \"Line\" | \"Polygon\";\n    visitCommand(command: GeometryCommand): void;\n}\n\n/**\n * @hidden\n */\nexport class GeometryCommands {\n    accept(geometry: number[] | null, visitor: GeometryCommandsVisitor) {\n        if (!geometry) {\n            return;\n        }\n\n        const geometryCount = geometry.length;\n\n        let currX = 0;\n        let currY = 0;\n\n        const xCoords: number[] = [];\n        const yCoords: number[] = [];\n        const commands: GeometryCommand[] = [];\n        for (let cmdIndex = 0; cmdIndex < geometryCount; ) {\n            // tslint:disable:no-bitwise\n            const kind = (geometry[cmdIndex] & 0x7) as CommandKind;\n            const count = geometry[cmdIndex] >> 0x3;\n            // tslint:enable:no-bitwise\n            ++cmdIndex;\n\n            if (kind === CommandKind.MoveTo || kind === CommandKind.LineTo) {\n                for (let n = 0; n < count; ++n) {\n                    const xx = geometry[cmdIndex++];\n                    const yy = geometry[cmdIndex++];\n\n                    // tslint:disable:no-bitwise\n                    currX += (xx >> 1) ^ -(xx & 1);\n                    currY += (yy >> 1) ^ -(yy & 1);\n                    if (visitor.type === \"Polygon\") {\n                        xCoords.push(currX);\n                        yCoords.push(currY);\n                    }\n\n                    const position = new Vector2(currX, currY);\n                    commands.push({ kind, position });\n                }\n            } else {\n                for (const command of commands) {\n                    visitor.visitCommand(command);\n                }\n                visitor.visitCommand({ kind });\n                xCoords.length = 0;\n                yCoords.length = 0;\n                commands.length = 0;\n            }\n        }\n\n        if (commands.length > 0) {\n            for (const command of commands) {\n                visitor.visitCommand(command);\n            }\n        }\n    }\n}\n\nconst propertyCategories = [\n    \"stringValue\",\n    \"floatValue\",\n    \"doubleValue\",\n    \"intValue\",\n    \"uintValue\",\n    \"sintValue\",\n    \"boolValue\"\n];\n\nfunction simplifiedValue(value: com.mapbox.pb.Tile.IValue): Value {\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (const category of propertyCategories) {\n        if (hasOwnProperty.call(value, category)) {\n            const v = value[category as keyof com.mapbox.pb.Tile.IValue];\n\n            if (v === undefined) {\n                throw new Error(\"unpexted undefined value\");\n            }\n\n            return Long.isLong(v) ? (v as any).toNumber() : v;\n        }\n    }\n\n    throw new Error(\"not happening\");\n}\n\nfunction replaceReservedName(name: string): string {\n    switch (name) {\n        case \"id\":\n            return \"$id\";\n        default:\n            return name;\n    } // switch\n}\n\nfunction decodeFeatureId(\n    feature: com.mapbox.pb.Tile.IFeature,\n    logger?: ILogger\n): number | undefined {\n    if (feature.id !== undefined) {\n        if (typeof feature.id === \"number\") {\n            return feature.id;\n        } else if (feature.id !== null && Long.isLong(feature.id)) {\n            if (feature.id.greaterThan(Number.MAX_SAFE_INTEGER)) {\n                if (logger !== undefined) {\n                    logger.error(\n                        \"Invalid ID: Larger than largest available Number in feature: \",\n                        feature\n                    );\n                }\n            }\n            return (feature.id as any).toNumber(); // long\n        }\n    }\n    return undefined;\n}\n\nfunction readAttributes(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    defaultAttributes: ValueMap = {}\n): ValueMap {\n    const attrs = new FeatureAttributes();\n\n    const attributes: ValueMap = defaultAttributes || {};\n\n    attrs.accept(layer, feature, {\n        visitAttribute: (name, value) => {\n            attributes[replaceReservedName(name)] = simplifiedValue(value);\n            return true;\n        }\n    });\n\n    return attributes;\n}\n\nfunction createFeatureEnv(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    geometryType: string,\n    storageLevel: number,\n    storageLevelOffset?: number,\n    logger?: ILogger,\n    parent?: Env\n): MapEnv {\n    const attributes: ValueMap = {\n        $layer: layer.name,\n        $level: storageLevel,\n        $zoom: Math.max(0, storageLevel - (storageLevelOffset || 0)),\n        $geometryType: geometryType\n    };\n\n    // Some sources serve `id` directly as `IFeature` property ...\n    if (feature.id !== undefined) {\n        const featureId = decodeFeatureId(feature, logger);\n        if (featureId !== undefined) {\n            attributes.$id = featureId;\n        }\n    }\n\n    readAttributes(layer, feature, attributes);\n\n    return new MapEnv(attributes, parent);\n}\n\nfunction asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType {\n    if (feature === undefined) {\n        return OmvGeometryType.UNKNOWN;\n    }\n\n    switch (feature.type) {\n        case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n            return OmvGeometryType.UNKNOWN;\n        case com.mapbox.pb.Tile.GeomType.POINT:\n            return OmvGeometryType.POINT;\n        case com.mapbox.pb.Tile.GeomType.LINESTRING:\n            return OmvGeometryType.LINESTRING;\n        case com.mapbox.pb.Tile.GeomType.POLYGON:\n            return OmvGeometryType.POLYGON;\n        default:\n            return OmvGeometryType.UNKNOWN;\n    } // switch\n}\n\n/**\n * The class [[OmvProtobufDataAdapter]] converts OMV protobuf geo data\n * to geometries for the given [[IGeometryProcessor]].\n */\nexport class OmvProtobufDataAdapter implements OmvDataAdapter, OmvVisitor {\n    id = \"omv-protobuf\";\n\n    private readonly m_geometryCommands = new GeometryCommands();\n    private readonly m_processor: IGeometryProcessor;\n    private readonly m_logger?: ILogger;\n    private m_dataFilter?: OmvFeatureFilter;\n\n    private m_tileKey!: TileKey;\n    private m_layer!: com.mapbox.pb.Tile.ILayer;\n\n    /**\n     * Constructs a new [[OmvProtobufDataAdapter]].\n     *\n     * @param processor The [[IGeometryProcessor]] used to process the data.\n     * @param dataFilter The [[OmvFeatureFilter]] used to filter features.\n     * @param logger The [[ILogger]] used to log diagnostic messages.\n     */\n    constructor(processor: IGeometryProcessor, dataFilter?: OmvFeatureFilter, logger?: ILogger) {\n        this.m_processor = processor;\n        this.m_dataFilter = dataFilter;\n        this.m_logger = logger;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    /**\n     * Checks that the given data can be processed by this [[OmvProtobufDataAdapter]].\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        return isArrayBufferLike(data);\n    }\n\n    /**\n     * Processes the given data payload using this adapter's [[IGeometryProcessor]].\n     *\n     * @param data The data payload to process.\n     * @param tileKey The [[TileKey]] of the tile enclosing the data.\n     */\n    process(data: ArrayBufferLike, tileKey: TileKey) {\n        const payload = new Uint8Array(data);\n        const proto = com.mapbox.pb.Tile.decode(payload);\n\n        this.m_tileKey = tileKey;\n\n        visitOmv(proto, this);\n    }\n\n    /**\n     * Visits the OMV layer.\n     *\n     * @param layer The OMV layer to process.\n     */\n    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean {\n        this.m_layer = layer;\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = layer.name;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLayer(layerName, storageLevel)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Visits point features.\n     *\n     * @param feature The OMV point features to process.\n     */\n    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPointFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: Vector2[] = [];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Point\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    geometry.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"point\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPointFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the line features.\n     *\n     * @param feature The line features to process.\n     */\n    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLineFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: ILineGeometry[] = [];\n        let positions: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Line\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    positions = [command.position];\n                    geometry.push({ positions });\n                } else if (isLineToCommand(command)) {\n                    positions.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"line\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processLineFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the polygon features.\n     *\n     * @param feature The polygon features to process.\n     */\n    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPolygonFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: IPolygonGeometry[] = [];\n        const currentPolygon: IPolygonGeometry = { rings: [] };\n        let currentRing: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Polygon\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    currentRing = [command.position];\n                } else if (isLineToCommand(command)) {\n                    currentRing.push(command.position);\n                } else if (isClosePathCommand(command)) {\n                    currentPolygon.rings.push(currentRing);\n                }\n            }\n        });\n\n        if (currentPolygon.rings.length > 0) {\n            geometry.push(currentPolygon);\n        }\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"polygon\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPolygonFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            env,\n            storageLevel\n        );\n    }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.com = (function() {\n\n    /**\n     * Namespace com.\n     * @exports com\n     * @namespace\n     */\n    var com = {};\n\n    com.mapbox = (function() {\n\n        /**\n         * Namespace mapbox.\n         * @memberof com\n         * @namespace\n         */\n        var mapbox = {};\n\n        mapbox.pb = (function() {\n\n            /**\n             * Namespace pb.\n             * @memberof com.mapbox\n             * @namespace\n             */\n            var pb = {};\n\n            pb.Tile = (function() {\n\n                /**\n                 * Properties of a Tile.\n                 * @memberof com.mapbox.pb\n                 * @interface ITile\n                 * @property {Array.<com.mapbox.pb.Tile.ILayer>|null} [layers] Tile layers\n                 */\n\n                /**\n                 * Constructs a new Tile.\n                 * @memberof com.mapbox.pb\n                 * @classdesc Represents a Tile.\n                 * @implements ITile\n                 * @constructor\n                 * @param {com.mapbox.pb.ITile=} [properties] Properties to set\n                 */\n                function Tile(properties) {\n                    this.layers = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Tile layers.\n                 * @member {Array.<com.mapbox.pb.Tile.ILayer>} layers\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 */\n                Tile.prototype.layers = $util.emptyArray;\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 3:\n                            if (!(message.layers && message.layers.length))\n                                message.layers = [];\n                            message.layers.push($root.com.mapbox.pb.Tile.Layer.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Creates a Tile message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 */\n                Tile.fromObject = function fromObject(object) {\n                    if (object instanceof $root.com.mapbox.pb.Tile)\n                        return object;\n                    var message = new $root.com.mapbox.pb.Tile();\n                    if (object.layers) {\n                        if (!Array.isArray(object.layers))\n                            throw TypeError(\".com.mapbox.pb.Tile.layers: array expected\");\n                        message.layers = [];\n                        for (var i = 0; i < object.layers.length; ++i) {\n                            if (typeof object.layers[i] !== \"object\")\n                                throw TypeError(\".com.mapbox.pb.Tile.layers: object expected\");\n                            message.layers[i] = $root.com.mapbox.pb.Tile.Layer.fromObject(object.layers[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Tile message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {com.mapbox.pb.Tile} message Tile\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Tile.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.layers = [];\n                    if (message.layers && message.layers.length) {\n                        object.layers = [];\n                        for (var j = 0; j < message.layers.length; ++j)\n                            object.layers[j] = $root.com.mapbox.pb.Tile.Layer.toObject(message.layers[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Tile to JSON.\n                 * @function toJSON\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Tile.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * GeomType enum.\n                 * @name com.mapbox.pb.Tile.GeomType\n                 * @enum {string}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} POINT=1 POINT value\n                 * @property {number} LINESTRING=2 LINESTRING value\n                 * @property {number} POLYGON=3 POLYGON value\n                 */\n                Tile.GeomType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"POINT\"] = 1;\n                    values[valuesById[2] = \"LINESTRING\"] = 2;\n                    values[valuesById[3] = \"POLYGON\"] = 3;\n                    return values;\n                })();\n\n                Tile.Value = (function() {\n\n                    /**\n                     * Properties of a Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IValue\n                     * @property {string|null} [stringValue] Value stringValue\n                     * @property {number|null} [floatValue] Value floatValue\n                     * @property {number|null} [doubleValue] Value doubleValue\n                     * @property {number|Long|null} [intValue] Value intValue\n                     * @property {number|Long|null} [uintValue] Value uintValue\n                     * @property {number|Long|null} [sintValue] Value sintValue\n                     * @property {boolean|null} [boolValue] Value boolValue\n                     */\n\n                    /**\n                     * Constructs a new Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Value.\n                     * @implements IValue\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IValue=} [properties] Properties to set\n                     */\n                    function Value(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Value stringValue.\n                     * @member {string} stringValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.stringValue = \"\";\n\n                    /**\n                     * Value floatValue.\n                     * @member {number} floatValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.floatValue = 0;\n\n                    /**\n                     * Value doubleValue.\n                     * @member {number} doubleValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.doubleValue = 0;\n\n                    /**\n                     * Value intValue.\n                     * @member {number|Long} intValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.intValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value uintValue.\n                     * @member {number|Long} uintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Value sintValue.\n                     * @member {number|Long} sintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.sintValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value boolValue.\n                     * @member {boolean} boolValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.boolValue = false;\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Value();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.stringValue = reader.string();\n                                break;\n                            case 2:\n                                message.floatValue = reader.float();\n                                break;\n                            case 3:\n                                message.doubleValue = reader.double();\n                                break;\n                            case 4:\n                                message.intValue = reader.int64();\n                                break;\n                            case 5:\n                                message.uintValue = reader.uint64();\n                                break;\n                            case 6:\n                                message.sintValue = reader.sint64();\n                                break;\n                            case 7:\n                                message.boolValue = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     */\n                    Value.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Value)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Value();\n                        if (object.stringValue != null)\n                            message.stringValue = String(object.stringValue);\n                        if (object.floatValue != null)\n                            message.floatValue = Number(object.floatValue);\n                        if (object.doubleValue != null)\n                            message.doubleValue = Number(object.doubleValue);\n                        if (object.intValue != null)\n                            if ($util.Long)\n                                (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                            else if (typeof object.intValue === \"string\")\n                                message.intValue = parseInt(object.intValue, 10);\n                            else if (typeof object.intValue === \"number\")\n                                message.intValue = object.intValue;\n                            else if (typeof object.intValue === \"object\")\n                                message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                        if (object.uintValue != null)\n                            if ($util.Long)\n                                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n                            else if (typeof object.uintValue === \"string\")\n                                message.uintValue = parseInt(object.uintValue, 10);\n                            else if (typeof object.uintValue === \"number\")\n                                message.uintValue = object.uintValue;\n                            else if (typeof object.uintValue === \"object\")\n                                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n                        if (object.sintValue != null)\n                            if ($util.Long)\n                                (message.sintValue = $util.Long.fromValue(object.sintValue)).unsigned = false;\n                            else if (typeof object.sintValue === \"string\")\n                                message.sintValue = parseInt(object.sintValue, 10);\n                            else if (typeof object.sintValue === \"number\")\n                                message.sintValue = object.sintValue;\n                            else if (typeof object.sintValue === \"object\")\n                                message.sintValue = new $util.LongBits(object.sintValue.low >>> 0, object.sintValue.high >>> 0).toNumber();\n                        if (object.boolValue != null)\n                            message.boolValue = Boolean(object.boolValue);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Value message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Value} message Value\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Value.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.stringValue = \"\";\n                            object.floatValue = 0;\n                            object.doubleValue = 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.intValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.intValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.uintValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.sintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.sintValue = options.longs === String ? \"0\" : 0;\n                            object.boolValue = false;\n                        }\n                        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                            object.stringValue = message.stringValue;\n                        if (message.floatValue != null && message.hasOwnProperty(\"floatValue\"))\n                            object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;\n                        if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                        if (message.intValue != null && message.hasOwnProperty(\"intValue\"))\n                            if (typeof message.intValue === \"number\")\n                                object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                            else\n                                object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n                            if (typeof message.uintValue === \"number\")\n                                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n                            else\n                                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n                        if (message.sintValue != null && message.hasOwnProperty(\"sintValue\"))\n                            if (typeof message.sintValue === \"number\")\n                                object.sintValue = options.longs === String ? String(message.sintValue) : message.sintValue;\n                            else\n                                object.sintValue = options.longs === String ? $util.Long.prototype.toString.call(message.sintValue) : options.longs === Number ? new $util.LongBits(message.sintValue.low >>> 0, message.sintValue.high >>> 0).toNumber() : message.sintValue;\n                        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n                            object.boolValue = message.boolValue;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Value to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Value.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Value;\n                })();\n\n                Tile.Feature = (function() {\n\n                    /**\n                     * Properties of a Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IFeature\n                     * @property {number|Long|null} [id] Feature id\n                     * @property {Array.<number>|null} [tags] Feature tags\n                     * @property {com.mapbox.pb.Tile.GeomType|null} [type] Feature type\n                     * @property {Array.<number>|null} [geometry] Feature geometry\n                     */\n\n                    /**\n                     * Constructs a new Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Feature.\n                     * @implements IFeature\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IFeature=} [properties] Properties to set\n                     */\n                    function Feature(properties) {\n                        this.tags = [];\n                        this.geometry = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Feature id.\n                     * @member {number|Long} id\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Feature tags.\n                     * @member {Array.<number>} tags\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * Feature type.\n                     * @member {com.mapbox.pb.Tile.GeomType} type\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.type = 0;\n\n                    /**\n                     * Feature geometry.\n                     * @member {Array.<number>} geometry\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.geometry = $util.emptyArray;\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Feature();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = reader.uint64();\n                                break;\n                            case 2:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.tags.push(reader.uint32());\n                                } else\n                                    message.tags.push(reader.uint32());\n                                break;\n                            case 3:\n                                message.type = reader.int32();\n                                break;\n                            case 4:\n                                if (!(message.geometry && message.geometry.length))\n                                    message.geometry = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.geometry.push(reader.uint32());\n                                } else\n                                    message.geometry.push(reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     */\n                    Feature.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Feature)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Feature();\n                        if (object.id != null)\n                            if ($util.Long)\n                                (message.id = $util.Long.fromValue(object.id)).unsigned = true;\n                            else if (typeof object.id === \"string\")\n                                message.id = parseInt(object.id, 10);\n                            else if (typeof object.id === \"number\")\n                                message.id = object.id;\n                            else if (typeof object.id === \"object\")\n                                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = object.tags[i] >>> 0;\n                        }\n                        switch (object.type) {\n                        case \"UNKNOWN\":\n                        case 0:\n                            message.type = 0;\n                            break;\n                        case \"POINT\":\n                        case 1:\n                            message.type = 1;\n                            break;\n                        case \"LINESTRING\":\n                        case 2:\n                            message.type = 2;\n                            break;\n                        case \"POLYGON\":\n                        case 3:\n                            message.type = 3;\n                            break;\n                        }\n                        if (object.geometry) {\n                            if (!Array.isArray(object.geometry))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.geometry: array expected\");\n                            message.geometry = [];\n                            for (var i = 0; i < object.geometry.length; ++i)\n                                message.geometry[i] = object.geometry[i] >>> 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Feature message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Feature} message Feature\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Feature.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.tags = [];\n                            object.geometry = [];\n                        }\n                        if (options.defaults) {\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.id = options.longs === String ? \"0\" : 0;\n                            object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            if (typeof message.id === \"number\")\n                                object.id = options.longs === String ? String(message.id) : message.id;\n                            else\n                                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = options.enums === String ? $root.com.mapbox.pb.Tile.GeomType[message.type] : message.type;\n                        if (message.geometry && message.geometry.length) {\n                            object.geometry = [];\n                            for (var j = 0; j < message.geometry.length; ++j)\n                                object.geometry[j] = message.geometry[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Feature to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Feature.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Feature;\n                })();\n\n                Tile.Layer = (function() {\n\n                    /**\n                     * Properties of a Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface ILayer\n                     * @property {number} version Layer version\n                     * @property {string} name Layer name\n                     * @property {Array.<com.mapbox.pb.Tile.IFeature>|null} [features] Layer features\n                     * @property {Array.<string>|null} [keys] Layer keys\n                     * @property {Array.<com.mapbox.pb.Tile.IValue>|null} [values] Layer values\n                     * @property {number|null} [extent] Layer extent\n                     */\n\n                    /**\n                     * Constructs a new Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Layer.\n                     * @implements ILayer\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.ILayer=} [properties] Properties to set\n                     */\n                    function Layer(properties) {\n                        this.features = [];\n                        this.keys = [];\n                        this.values = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Layer version.\n                     * @member {number} version\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.version = 1;\n\n                    /**\n                     * Layer name.\n                     * @member {string} name\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.name = \"\";\n\n                    /**\n                     * Layer features.\n                     * @member {Array.<com.mapbox.pb.Tile.IFeature>} features\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.features = $util.emptyArray;\n\n                    /**\n                     * Layer keys.\n                     * @member {Array.<string>} keys\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.keys = $util.emptyArray;\n\n                    /**\n                     * Layer values.\n                     * @member {Array.<com.mapbox.pb.Tile.IValue>} values\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.values = $util.emptyArray;\n\n                    /**\n                     * Layer extent.\n                     * @member {number} extent\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.extent = 4096;\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Layer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 15:\n                                message.version = reader.uint32();\n                                break;\n                            case 1:\n                                message.name = reader.string();\n                                break;\n                            case 2:\n                                if (!(message.features && message.features.length))\n                                    message.features = [];\n                                message.features.push($root.com.mapbox.pb.Tile.Feature.decode(reader, reader.uint32()));\n                                break;\n                            case 3:\n                                if (!(message.keys && message.keys.length))\n                                    message.keys = [];\n                                message.keys.push(reader.string());\n                                break;\n                            case 4:\n                                if (!(message.values && message.values.length))\n                                    message.values = [];\n                                message.values.push($root.com.mapbox.pb.Tile.Value.decode(reader, reader.uint32()));\n                                break;\n                            case 5:\n                                message.extent = reader.uint32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"version\"))\n                            throw $util.ProtocolError(\"missing required 'version'\", { instance: message });\n                        if (!message.hasOwnProperty(\"name\"))\n                            throw $util.ProtocolError(\"missing required 'name'\", { instance: message });\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Layer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     */\n                    Layer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Layer)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Layer();\n                        if (object.version != null)\n                            message.version = object.version >>> 0;\n                        if (object.name != null)\n                            message.name = String(object.name);\n                        if (object.features) {\n                            if (!Array.isArray(object.features))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.features: array expected\");\n                            message.features = [];\n                            for (var i = 0; i < object.features.length; ++i) {\n                                if (typeof object.features[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.features: object expected\");\n                                message.features[i] = $root.com.mapbox.pb.Tile.Feature.fromObject(object.features[i]);\n                            }\n                        }\n                        if (object.keys) {\n                            if (!Array.isArray(object.keys))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.keys: array expected\");\n                            message.keys = [];\n                            for (var i = 0; i < object.keys.length; ++i)\n                                message.keys[i] = String(object.keys[i]);\n                        }\n                        if (object.values) {\n                            if (!Array.isArray(object.values))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.values: array expected\");\n                            message.values = [];\n                            for (var i = 0; i < object.values.length; ++i) {\n                                if (typeof object.values[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.values: object expected\");\n                                message.values[i] = $root.com.mapbox.pb.Tile.Value.fromObject(object.values[i]);\n                            }\n                        }\n                        if (object.extent != null)\n                            message.extent = object.extent >>> 0;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Layer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Layer} message Layer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Layer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.features = [];\n                            object.keys = [];\n                            object.values = [];\n                        }\n                        if (options.defaults) {\n                            object.name = \"\";\n                            object.extent = 4096;\n                            object.version = 1;\n                        }\n                        if (message.name != null && message.hasOwnProperty(\"name\"))\n                            object.name = message.name;\n                        if (message.features && message.features.length) {\n                            object.features = [];\n                            for (var j = 0; j < message.features.length; ++j)\n                                object.features[j] = $root.com.mapbox.pb.Tile.Feature.toObject(message.features[j], options);\n                        }\n                        if (message.keys && message.keys.length) {\n                            object.keys = [];\n                            for (var j = 0; j < message.keys.length; ++j)\n                                object.keys[j] = message.keys[j];\n                        }\n                        if (message.values && message.values.length) {\n                            object.values = [];\n                            for (var j = 0; j < message.values.length; ++j)\n                                object.values[j] = $root.com.mapbox.pb.Tile.Value.toObject(message.values[j], options);\n                        }\n                        if (message.extent != null && message.hasOwnProperty(\"extent\"))\n                            object.extent = message.extent;\n                        if (message.version != null && message.hasOwnProperty(\"version\"))\n                            object.version = message.version;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Layer to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Layer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Layer;\n                })();\n\n                return Tile;\n            })();\n\n            return pb;\n        })();\n\n        return mapbox;\n    })();\n\n    return com;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    BufferAttribute,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ExtendedTileInfo,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryType,\n    getFeatureId,\n    Group,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLabelRejectionLineTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isSolidLineTechnique,\n    isSpecialDashesLineTechnique,\n    isStandardTechnique,\n    isTextTechnique,\n    LineMarkerTechnique,\n    PathGeometry,\n    PoiGeometry,\n    PoiTechnique,\n    StyleColor,\n    Technique,\n    TextGeometry,\n    TextPathGeometry,\n    TextTechnique,\n    textureCoordinateType,\n    TextureCoordinateType\n} from \"@here/harp-datasource-protocol\";\nimport {\n    Env,\n    IMeshBuffers,\n    StyleSetEvaluator,\n    Value\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LineGroup } from \"@here/harp-lines/lib/Lines\";\nimport { triangulateLine } from \"@here/harp-lines/lib/TriangulateLines\";\nimport { assert, getOptionValue, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport earcut from \"earcut\";\nimport * as THREE from \"three\";\n\nimport {\n    normalizedEquirectangularProjection,\n    ProjectionType,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { LinesGeometry } from \"./OmvDataSource\";\nimport { IOmvEmitter, OmvDecoder, Ring } from \"./OmvDecoder\";\nimport {\n    tile2world,\n    webMercatorTile2TargetTile,\n    webMercatorTile2TargetWorld,\n    world2tile\n} from \"./OmvUtils\";\n\nimport {\n    AttrEvaluationContext,\n    evaluateTechniqueAttr\n} from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\n// tslint:disable-next-line:max-line-length\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport { ExtrusionFeatureDefs } from \"@here/harp-materials/lib/MapMeshMaterialsDefs\";\nimport { clipPolygon } from \"./clipPolygon\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecodedTileEmitter\");\n\nconst tempTileOrigin = new THREE.Vector3();\nconst tempVertOrigin = new THREE.Vector3();\nconst tempVertNormal = new THREE.Vector3();\nconst tempFootDisp = new THREE.Vector3();\nconst tempRoofDisp = new THREE.Vector3();\n\nconst tmpV2 = new THREE.Vector2();\nconst tmpV2r = new THREE.Vector2();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV3r = new THREE.Vector3();\nconst tmpV4 = new THREE.Vector3();\n\nconst tempP0 = new THREE.Vector2();\nconst tempP1 = new THREE.Vector2();\nconst tempPreviousTangent = new THREE.Vector2();\n\nconst tmpPointA = new THREE.Vector3();\nconst tmpPointB = new THREE.Vector3();\nconst tmpPointC = new THREE.Vector3();\nconst tmpPointD = new THREE.Vector3();\nconst tmpPointE = new THREE.Vector3();\nconst tmpLine = new THREE.Line3();\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text. Based on the estimated screen size of a tile.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Estimation \"fudge factor\", tweaking the size estimation to\n *\n * a) allow room for zooming in to the tile, and\n *\n * b) allow for some tilting, where the edge of a tile closer to the camera has more space.\n *\n * Useful values are between 0 (allow all labels), 0.5 (allow labels at twice the default display\n * size of the tile) and 1.0 (skip labels that would normally not be displayed at default tile\n * size).\n */\nconst SIZE_ESTIMATION_FACTOR = 0.5;\n\n/**\n * Maximum allowed corner angle inside a label path.\n */\nconst MAX_CORNER_ANGLE = Math.PI / 8;\n\n/**\n * Used to identify an invalid (or better: unused) array index.\n */\nconst INVALID_ARRAY_INDEX = -1;\n\n// for tilezen by default extrude all buildings even those without height data\nclass MeshBuffers implements IMeshBuffers {\n    readonly positions: number[] = [];\n    readonly normals: number[] = [];\n    readonly textureCoordinates: number[] = [];\n    readonly colors: number[] = [];\n    readonly extrusionAxis: number[] = [];\n    readonly indices: number[] = [];\n    readonly edgeIndices: number[] = [];\n    readonly groups: Group[] = [];\n    readonly texts: number[] = [];\n    readonly pathLengths: number[] = [];\n    readonly stringCatalog: Array<string | undefined> = [];\n    readonly imageTextures: number[] = [];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[] = [];\n\n    /**\n     * An optional list of additional data that can be used as additional data for the object\n     * picking.\n     */\n    readonly objInfos: AttributeMap[] = [];\n\n    constructor(readonly type: GeometryType) {}\n\n    addText(text: string) {\n        let index = this.stringCatalog.indexOf(text);\n\n        if (index < 0) {\n            index = this.stringCatalog.length;\n            this.stringCatalog.push(text);\n        }\n        return index;\n    }\n}\n\nexport enum LineType {\n    Simple,\n    Complex\n}\n\ntype TexCoordsFunction = (tilePos: THREE.Vector2, tileExtents: number) => { u: number; v: number };\nconst tmpColor = new THREE.Color();\n\nexport class OmvDecodedTileEmitter implements IOmvEmitter {\n    // mapping from style index to mesh buffers\n    private readonly m_meshBuffers = new Map<number, MeshBuffers>();\n\n    private readonly m_geometries: Geometry[] = [];\n    private readonly m_textGeometries: TextGeometry[] = [];\n    private readonly m_textPathGeometries: TextPathGeometry[] = [];\n    private readonly m_pathGeometries: PathGeometry[] = [];\n    private readonly m_poiGeometries: PoiGeometry[] = [];\n    private readonly m_simpleLines: LinesGeometry[] = [];\n    private readonly m_solidLines: LinesGeometry[] = [];\n\n    private readonly m_sources: string[] = [];\n    private m_maxGeometryHeight: number = 0;\n\n    constructor(\n        private readonly m_decodeInfo: OmvDecoder.DecodeInfo,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_gatherFeatureAttributes: boolean,\n        private readonly m_skipShortLabels: boolean,\n        private readonly m_enableElevationOverlay: boolean,\n        private readonly m_languages?: string[]\n    ) {}\n\n    get projection() {\n        return this.m_decodeInfo.targetProjection;\n    }\n\n    get center() {\n        return this.m_decodeInfo.center;\n    }\n\n    /**\n     * Creates the Point of Interest geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const techniqueIndex = technique._index;\n            const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, GeometryType.Point);\n\n            if (meshBuffers === undefined) {\n                continue;\n            }\n\n            const { positions, texts, imageTextures, objInfos } = meshBuffers;\n\n            const shouldCreateTextGeometries =\n                isTextTechnique(technique) || isPoiTechnique(technique);\n\n            let imageTexture: string | undefined;\n            const wantsPoi = isPoiTechnique(technique);\n\n            if (wantsPoi) {\n                const poiTechnique = technique as PoiTechnique;\n                imageTexture = evaluateTechniqueAttr(context, poiTechnique.imageTexture);\n\n                // TODO: Move to decoder independent parts of code.\n                if (poiTechnique.poiName !== undefined) {\n                    imageTexture = evaluateTechniqueAttr(context, poiTechnique.poiName);\n                } else if (typeof poiTechnique.poiNameField === \"string\") {\n                    const poiNameFieldValue = env.lookup(poiTechnique.poiNameField) as string;\n                    imageTexture = poiNameFieldValue;\n                } else if (typeof poiTechnique.imageTextureField === \"string\") {\n                    const imageTextureValue = env.lookup(poiTechnique.imageTextureField) as string;\n                    imageTexture = composeTechniqueTextureName(imageTextureValue, poiTechnique);\n                }\n            }\n\n            for (const pos of geometry) {\n                if (shouldCreateTextGeometries) {\n                    const textTechnique = technique as TextTechnique;\n                    const text = ExtendedTileInfo.getFeatureText(\n                        context,\n                        textTechnique,\n                        this.m_languages\n                    );\n\n                    if (text !== undefined && text.length > 0) {\n                        texts.push(meshBuffers.addText(text));\n                    } else {\n                        texts.push(INVALID_ARRAY_INDEX);\n                    }\n                }\n\n                // Always store the position, otherwise the following POIs will be\n                // misplaced.\n                if (shouldCreateTextGeometries) {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                } else {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV3);\n                }\n                positions.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                objInfos.push(\n                    this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                );\n\n                if (wantsPoi) {\n                    if (imageTexture === undefined) {\n                        imageTextures.push(INVALID_ARRAY_INDEX);\n                    } else {\n                        imageTextures.push(meshBuffers.addText(imageTexture));\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Creates the line geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const localLines: number[][] = []; // lines in target tile space.\n        const worldLines: number[][] = []; // lines in world space.\n        const uvs: number[][] = [];\n        const offsets: number[][] = [];\n        const { projectedTileBounds } = this.m_decodeInfo;\n        let localLineSegments: number[][]; // lines in target tile space for special dashes.\n\n        const tileWidth = projectedTileBounds.max.x - projectedTileBounds.min.x;\n        const tileHeight = projectedTileBounds.max.y - projectedTileBounds.min.y;\n        const tileSizeInMeters = Math.max(tileWidth, tileHeight);\n\n        let computeTexCoords: TexCoordsFunction | undefined;\n        let texCoordinateType: TextureCoordinateType | undefined;\n\n        const hasUntiledLines = geometry[0].untiledPositions !== undefined;\n\n        // If true, special handling for dashes is required (round and diamond shaped dashes).\n        let hasIndividualLineSegments = false;\n        let hasContinuousLineSegments = false;\n\n        // Check if any of the techniques needs texture coordinates\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            if (!computeTexCoords) {\n                computeTexCoords = this.getComputeTexCoordsFunc(technique);\n                texCoordinateType = this.getTextureCoordinateType(technique);\n            } else {\n                // Support generation of only one type of texture coordinates.\n                const otherTexCoordType = this.getTextureCoordinateType(technique);\n                assert(otherTexCoordType === undefined || texCoordinateType === otherTexCoordType);\n            }\n\n            hasIndividualLineSegments =\n                hasIndividualLineSegments || isSpecialDashesLineTechnique(technique);\n\n            hasContinuousLineSegments = hasContinuousLineSegments || !hasIndividualLineSegments;\n        }\n\n        for (const polyline of geometry) {\n            // Compute the world position of the untiled line and its distance to the origin of the\n            // line to properly join lines.\n            const untiledLine: number[] = [];\n            let lineDist = 0;\n            if (hasUntiledLines) {\n                this.m_decodeInfo.targetProjection.projectPoint(\n                    polyline.untiledPositions![0],\n                    tmpV3r\n                );\n                polyline.untiledPositions!.forEach(pos => {\n                    // Calculate the distance to the next un-normalized point.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos, tmpV3);\n                    lineDist += tmpV3.distanceTo(tmpV3r);\n                    tmpV3r.copy(tmpV3);\n\n                    // Pushed the normalized point for line matching.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos.normalized(), tmpV3);\n                    untiledLine.push(tmpV3.x, tmpV3.y, tmpV3.z, lineDist);\n                });\n            }\n\n            // Add continuous line as individual segments to improve special dashes by overlapping\n            // their connecting vertices. The technique/style should defined round or rectangular\n            // caps.\n            if (hasIndividualLineSegments) {\n                localLineSegments = [];\n\n                // Compute length of whole line and offsets of individual segments.\n                let lineLength = 0;\n                const pointCount = polyline.positions.length;\n                if (pointCount > 1) {\n                    let lastSegmentOffset = 0;\n\n                    for (let i = 0; i < pointCount - 1; i++) {\n                        const localLine: number[] = [];\n                        const worldLine: number[] = [];\n                        const lineUvs: number[] = [];\n                        const segmentOffsets: number[] = [];\n\n                        const pos1 = polyline.positions[i];\n                        const pos2 = polyline.positions[i + 1];\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos1, tmpV3);\n                        worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos2, tmpV4);\n                        worldLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        if (computeTexCoords) {\n                            {\n                                const { u, v } = computeTexCoords(pos1, extents);\n                                lineUvs.push(u, v);\n                            }\n                            {\n                                const { u, v } = computeTexCoords(pos2, extents);\n                                lineUvs.push(u, v);\n                            }\n                        }\n                        if (hasUntiledLines) {\n                            // Find where in the [0...1] range relative to the line our current\n                            // vertex lies.\n                            let offset =\n                                this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                            offset = this.findRelativePositionInLine(tmpV4, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                        } else {\n                            segmentOffsets.push(lastSegmentOffset);\n\n                            // Compute length of segment and whole line to scale down later.\n                            const segmentLength = tmpV3.distanceTo(tmpV4);\n                            lineLength += segmentLength;\n                            lastSegmentOffset += segmentLength;\n                            segmentOffsets.push(lastSegmentOffset);\n                        }\n\n                        tmpV3.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        tmpV4.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        localLineSegments!.push(localLine);\n                        worldLines.push(worldLine);\n                        uvs.push(lineUvs);\n                        offsets.push(segmentOffsets);\n                    }\n                }\n\n                if (!hasUntiledLines && lineLength > 0) {\n                    // Scale down each individual segment to range [0..1] for whole line.\n                    for (const segOffsets of offsets) {\n                        segOffsets.forEach((offs, index) => {\n                            segOffsets[index] = offs / lineLength;\n                        });\n                    }\n                }\n            }\n\n            // Add continuous lines\n            if (hasContinuousLineSegments) {\n                const localLine: number[] = [];\n                const worldLine: number[] = [];\n                const lineUvs: number[] = [];\n                const lineOffsets: number[] = [];\n                polyline.positions.forEach(pos => {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                    worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                    if (computeTexCoords) {\n                        const { u, v } = computeTexCoords(pos, extents);\n                        lineUvs.push(u, v);\n                    }\n                    if (hasUntiledLines) {\n                        // Find where in the [0...1] range relative to the line our current vertex\n                        // lines.\n                        const offset =\n                            this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                        lineOffsets.push(offset);\n                    }\n                    tmpV3.sub(this.m_decodeInfo.center);\n                    localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                });\n                localLines.push(localLine);\n                worldLines.push(worldLine);\n                uvs.push(lineUvs);\n                offsets.push(lineOffsets);\n            }\n        }\n\n        const wantCircle = this.m_decodeInfo.tileKey.level >= 11;\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            const techniqueIndex = technique._index;\n            const techniqueName = technique.name;\n\n            if (isLineTechnique(technique) || isSolidLineTechnique(technique)) {\n                const lineGeometry = isLineTechnique(technique)\n                    ? this.m_simpleLines\n                    : this.m_solidLines;\n\n                const lineType = isLineTechnique(technique) ? LineType.Simple : LineType.Complex;\n\n                if (hasIndividualLineSegments) {\n                    assert(\n                        localLineSegments! !== undefined,\n                        \"OmvDecodedTileEmitter#processLineFeature: \" +\n                            \"Internal error - No localLineSegments\"\n                    );\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLineSegments!,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        offsets\n                    );\n                }\n                if (localLines.length > 0) {\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLines,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        hasUntiledLines ? offsets : undefined\n                    );\n                }\n            } else if (\n                isTextTechnique(technique) ||\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique)\n            ) {\n                const textTechnique = technique as TextTechnique;\n                const text = ExtendedTileInfo.getFeatureText(\n                    context,\n                    textTechnique,\n                    this.m_languages\n                );\n\n                if (text === undefined || text.length === 0) {\n                    continue;\n                }\n                let validLines: number[][] = [];\n\n                if (this.m_skipShortLabels) {\n                    // Filter the lines, keep only those that are long enough for labelling. Also,\n                    // split jagged label paths to keep processing and rendering only those that\n                    // have no sharp corners, which would not be rendered anyway.\n\n                    const metersPerPixel = tileSizeInMeters / this.m_decodeInfo.tileSizeOnScreen;\n                    const minEstimatedLabelLength =\n                        MIN_AVERAGE_CHAR_WIDTH *\n                        text.length *\n                        metersPerPixel *\n                        SIZE_ESTIMATION_FACTOR;\n                    const minEstimatedLabelLengthSqr =\n                        minEstimatedLabelLength * minEstimatedLabelLength;\n\n                    validLines = this.splitJaggyLines(\n                        worldLines,\n                        minEstimatedLabelLengthSqr,\n                        MAX_CORNER_ANGLE\n                    );\n                } else {\n                    validLines = worldLines;\n                }\n\n                if (validLines.length === 0) {\n                    continue;\n                }\n\n                if (isTextTechnique(technique)) {\n                    if (text === undefined) {\n                        continue;\n                    }\n                    for (const path of validLines) {\n                        const pathLengthSqr = Math2D.computeSquaredLineLength(path);\n                        this.m_textPathGeometries.push({\n                            technique: techniqueIndex,\n                            path,\n                            pathLengthSqr,\n                            text: String(text),\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? env.entries\n                                : getFeatureId(env.entries)\n                        });\n                    }\n                } else {\n                    const lineMarkerTechnique = technique as LineMarkerTechnique;\n\n                    let imageTexture = evaluateTechniqueAttr(\n                        context,\n                        lineMarkerTechnique.imageTexture\n                    );\n\n                    // TODO: `imageTextureField` and `imageTexturePrefix` and `imageTexturePostfix`\n                    // are now deprecated\n\n                    // TODO: Move to decoder independent parts of code.\n                    if (typeof lineMarkerTechnique.imageTextureField === \"string\") {\n                        const imageTextureValue = env.lookup(lineMarkerTechnique.imageTextureField);\n                        imageTexture = imageTextureValue as string;\n                        if (typeof lineMarkerTechnique.imageTexturePrefix === \"string\") {\n                            imageTexture = lineMarkerTechnique.imageTexturePrefix + imageTexture;\n                        }\n                        if (typeof lineMarkerTechnique.imageTexturePostfix === \"string\") {\n                            imageTexture = imageTexture + lineMarkerTechnique.imageTexturePostfix;\n                        }\n                    }\n\n                    for (const aLine of validLines) {\n                        this.m_poiGeometries.push({\n                            technique: techniqueIndex,\n                            positions: {\n                                name: \"position\",\n                                type: \"float\",\n                                buffer: new Float32Array(aLine).buffer,\n                                itemCount: 3\n                            },\n                            texts: [0],\n                            stringCatalog: [text, imageTexture],\n                            imageTextures: [1],\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? [env.entries]\n                                : [getFeatureId(env.entries)]\n                        });\n                    }\n                }\n            } else if (isLabelRejectionLineTechnique(technique)) {\n                for (const path of worldLines) {\n                    const worldPath: Vector3Like[] = [];\n                    for (let i = 0; i < path.length; i += 3) {\n                        worldPath.push(new THREE.Vector3().fromArray(path, i) as Vector3Like);\n                    }\n                    this.m_pathGeometries.push({\n                        path: worldPath\n                    });\n                }\n            } else if (isExtrudedLineTechnique(technique)) {\n                const meshBuffers = this.findOrCreateMeshBuffers(\n                    techniqueIndex,\n                    GeometryType.ExtrudedLine\n                );\n                if (meshBuffers === undefined) {\n                    continue;\n                }\n                const { positions, indices, groups, featureStarts, objInfos } = meshBuffers;\n                const start = indices.length;\n\n                const lineWidth = evaluateTechniqueAttr<number>(context, technique.lineWidth);\n\n                if (lineWidth === undefined) {\n                    continue;\n                }\n\n                const techniqueCaps = evaluateTechniqueAttr<string>(\n                    context,\n                    technique.caps,\n                    \"Circle\"\n                );\n\n                const addCircle = wantCircle && techniqueCaps === \"Circle\";\n\n                localLines.forEach(aLine => {\n                    triangulateLine(aLine, lineWidth, positions, indices, addCircle);\n                    featureStarts.push(start);\n                    objInfos.push(\n                        this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                    );\n                });\n\n                const count = indices.length - start;\n                groups.push({ start, count, technique: techniqueIndex, featureId });\n            } else {\n                logger.warn(\n                    `OmvDecodedTileEmitter#processLineFeature: Invalid line technique\n                     ${techniqueName} for layer: ${env.entries.$layer} `\n                );\n            }\n        }\n    }\n\n    /**\n     * Creates the polygons geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param feature The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        techniques.forEach(technique => {\n            if (technique === undefined) {\n                return;\n            }\n\n            const techniqueIndex = technique._index;\n\n            if (techniqueIndex === undefined) {\n                throw new Error(\n                    \"OmvDecodedTileEmitter#processPolygonFeature: \" +\n                        \"Internal error - No technique index\"\n                );\n            }\n\n            const polygons: Ring[][] = [];\n\n            const isExtruded = isExtrudedPolygonTechnique(technique);\n            const isFilled = isFillTechnique(technique);\n            const isStandard = isStandardTechnique(technique);\n\n            const isPolygon = isExtruded || isFilled || isStandard;\n            const computeTexCoords = this.getComputeTexCoordsFunc(technique);\n            const vertexStride = computeTexCoords !== undefined ? 4 : 2;\n\n            let clipRing: THREE.Vector2[] | undefined;\n\n            for (const polygon of geometry) {\n                const rings: Ring[] = [];\n\n                for (const outline of polygon.rings) {\n                    const ringContour: number[] = [];\n\n                    let coords = outline;\n\n                    if (isFilled || isStandard) {\n                        const shouldClipPolygon = coords.some(\n                            p => p.x < 0 || p.x > extents || p.y < 0 || p.y > extents\n                        );\n\n                        if (shouldClipPolygon) {\n                            if (!clipRing) {\n                                clipRing = [\n                                    new THREE.Vector2(0, 0),\n                                    new THREE.Vector2(extents, 0),\n                                    new THREE.Vector2(extents, extents),\n                                    new THREE.Vector2(0, extents)\n                                ];\n                            }\n\n                            coords = clipPolygon(coords, clipRing);\n                        }\n                    }\n\n                    if (coords.length === 0) {\n                        continue;\n                    }\n\n                    for (const coord of coords) {\n                        ringContour.push(coord.x, coord.y);\n                        if (computeTexCoords !== undefined) {\n                            const { u, v } = computeTexCoords(coord, extents);\n                            ringContour.push(u, v);\n                        }\n                    }\n\n                    rings.push(new Ring(extents, vertexStride, ringContour));\n                }\n\n                if (rings.length === 0) {\n                    continue;\n                }\n\n                polygons.push(rings);\n            }\n\n            const isLine = isSolidLineTechnique(technique) || isLineTechnique(technique);\n            if (isPolygon) {\n                this.applyPolygonTechnique(\n                    polygons,\n                    technique,\n                    techniqueIndex,\n                    featureId,\n                    context,\n                    extents\n                );\n            } else if (isLine) {\n                const lineGeometry =\n                    technique.name === \"line\" ? this.m_simpleLines : this.m_solidLines;\n\n                const lineType = technique.name === \"line\" ? LineType.Simple : LineType.Complex;\n\n                // Use individual line segments instead of a continuous line in special cases (round\n                // and diamond shaped dashes).\n                const needIndividualLineSegments = isSpecialDashesLineTechnique(technique);\n\n                polygons.forEach(rings => {\n                    const lines: number[][] = [];\n                    const offsets: number[][] | undefined = needIndividualLineSegments\n                        ? []\n                        : undefined;\n                    rings.forEach(ring => {\n                        const length = ring.contour.length / ring.vertexStride;\n                        let line: number[] = [];\n\n                        // Compute length of whole line and offsets of individual segments.\n                        let ringLength = 0;\n                        let lastSegmentOffset = 0;\n                        let segmentOffsets: number[] | undefined = needIndividualLineSegments\n                            ? []\n                            : undefined;\n\n                        for (let i = 0; i < length; ++i) {\n                            if (needIndividualLineSegments && line.length > 0) {\n                                // Allocate a line for every segment.\n                                line = [];\n                                segmentOffsets = [];\n                            }\n\n                            const nextIdx = (i + 1) % length;\n                            const currX = ring.contour[i * ring.vertexStride];\n                            const currY = ring.contour[i * ring.vertexStride + 1];\n                            const nextX = ring.contour[nextIdx * ring.vertexStride];\n                            const nextY = ring.contour[nextIdx * ring.vertexStride + 1];\n\n                            const isOutline = !(\n                                (currX <= 0 && nextX <= 0) ||\n                                (currX >= ring.extents && nextX >= ring.extents) ||\n                                (currY <= 0 && nextY <= 0) ||\n                                (currY >= ring.extents && nextY >= ring.extents)\n                            );\n\n                            if (!isOutline && line.length !== 0) {\n                                lines.push(line);\n                                line = [];\n                            } else if (isOutline && line.length === 0) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(currX, currY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                                if (needIndividualLineSegments) {\n                                    // Add next point as the end point of this line segment.\n                                    webMercatorTile2TargetTile(\n                                        extents,\n                                        this.m_decodeInfo,\n                                        tmpV2.set(nextX, nextY),\n                                        tmpV4\n                                    );\n                                    line.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                                    segmentOffsets!.push(lastSegmentOffset);\n\n                                    // Compute length of segment and whole line to scale down later.\n                                    const segmentLength = tmpV3.distanceTo(tmpV4);\n                                    ringLength += segmentLength;\n                                    lastSegmentOffset += segmentLength;\n                                    segmentOffsets!.push(lastSegmentOffset);\n                                }\n                            }\n                            if (isOutline && !needIndividualLineSegments) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(nextX, nextY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n\n                            if (needIndividualLineSegments && line.length > 0 && ringLength > 0) {\n                                // Scale down each individual segment to range [0..1] for the whole\n                                // line.\n                                segmentOffsets!.forEach((offs, index) => {\n                                    segmentOffsets![index] = offs / ringLength;\n                                });\n\n                                // Close the line segment as a single line.\n                                lines.push(line);\n                                offsets!.push(segmentOffsets!);\n                            }\n                        }\n\n                        if (!needIndividualLineSegments && line.length > 0) {\n                            lines.push(line);\n                        }\n                    });\n\n                    if (lines.length === 0) {\n                        return;\n                    }\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        lines,\n                        context,\n                        undefined,\n                        offsets!\n                    );\n                });\n            }\n        });\n    }\n\n    /**\n     * Creates the geometries that belongs to the [[Tile].\n     *\n     * @returns The [[DecodedTile]]\n     */\n    getDecodedTile(): DecodedTile {\n        this.createGeometries();\n        this.processSimpleLines(this.m_simpleLines);\n        this.processLines(this.m_solidLines);\n\n        const decodedTile: DecodedTile = {\n            techniques: this.m_styleSetEvaluator.decodedTechniques,\n            geometries: this.m_geometries,\n            decodeTime: undefined\n        };\n        if (this.m_textGeometries.length > 0) {\n            decodedTile.textGeometries = this.m_textGeometries;\n        }\n        if (this.m_poiGeometries.length > 0) {\n            decodedTile.poiGeometries = this.m_poiGeometries;\n        }\n        if (this.m_textPathGeometries.length > 0) {\n            decodedTile.textPathGeometries = this.m_textPathGeometries;\n        }\n        if (this.m_pathGeometries.length > 0) {\n            decodedTile.pathGeometries = this.m_pathGeometries;\n        }\n        if (this.m_sources.length !== 0) {\n            decodedTile.copyrightHolderIds = this.m_sources;\n        }\n        decodedTile.maxGeometryHeight = this.m_maxGeometryHeight;\n        return decodedTile;\n    }\n\n    /**\n     * Split the lines array into multiple parts if there are sharp corners. Reject parts that are\n     * too short to display the label text.\n     *\n     * @param {number[][]} lines Array containing the points of the paths.\n     * @param {number} minEstimatedLabelLengthSqr Minimum label size squared.\n     * @param {number} maxCornerAngle Maximum angle between consecutive path segments in radians.\n     * @returns The split and filtered lines array.\n     */\n    protected splitJaggyLines(\n        lines: number[][],\n        minEstimatedLabelLengthSqr: number,\n        maxCornerAngle: number\n    ): number[][] {\n        const validLines: number[][] = [];\n\n        const computeBoundingBoxSizeSqr = (\n            aLine: number[],\n            startIndex: number,\n            endIndex: number\n        ): number => {\n            let minX = Number.MAX_SAFE_INTEGER;\n            let maxX = Number.MIN_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            let maxY = Number.MIN_SAFE_INTEGER;\n            for (let i = startIndex; i < endIndex; i += 3) {\n                const x = aLine[i];\n                const y = aLine[i + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n\n            return (maxX - minX) * (maxX - minX) + (maxY - minY) * (maxY - minY);\n        };\n\n        // Work on a copy of the path.\n        const pathsToCheck = lines.slice();\n\n        while (pathsToCheck.length > 0) {\n            const path = pathsToCheck.pop();\n\n            if (path === undefined || path.length < 6) {\n                continue;\n            }\n\n            let splitIndex = -1;\n\n            for (let i = 0; i < path.length - 3; i += 3) {\n                tempP0.set(path[i], path[i + 1]);\n                tempP1.set(path[i + 3], path[i + 4]);\n                const tangent = tempP1.sub(tempP0).normalize();\n\n                if (i > 0) {\n                    const theta = Math.atan2(\n                        tempPreviousTangent.x * tangent.y - tangent.x * tempPreviousTangent.y,\n                        tangent.dot(tempPreviousTangent)\n                    );\n\n                    if (Math.abs(theta) > maxCornerAngle) {\n                        splitIndex = i;\n                        break;\n                    }\n                }\n                tempPreviousTangent.set(tangent.x, tangent.y);\n            }\n\n            if (splitIndex > 0) {\n                // Estimate if the first part of the path is long enough for the label.\n                const firstPathLengthSqr = computeBoundingBoxSizeSqr(path, 0, splitIndex + 3);\n                // Estimate if the second part of the path is long enough for the label.\n                const secondPathLengthSqr = computeBoundingBoxSizeSqr(\n                    path,\n                    splitIndex,\n                    path.length\n                );\n\n                if (firstPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Split off the valid first path points with a clone of the path.\n                    validLines.push(path.slice(0, splitIndex + 3));\n                }\n\n                if (secondPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Now process the second part of the path, it may have to be split\n                    // again.\n                    pathsToCheck.push(path.slice(splitIndex));\n                }\n            } else {\n                // Estimate if the path is long enough for the label, otherwise ignore\n                // it for rendering text. First, compute the bounding box in world\n                // coordinates.\n                const pathLengthSqr = computeBoundingBoxSizeSqr(path, 0, path.length);\n\n                if (pathLengthSqr > minEstimatedLabelLengthSqr) {\n                    validLines.push(path);\n                }\n            }\n        }\n\n        return validLines;\n    }\n\n    private getTextureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n        // Set TileSpace coordinate type to generate texture coordinates for the displacement map\n        // used in elevation overlay.\n        if (\n            (isFillTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isExtrudedPolygonTechnique(technique)) &&\n            this.m_enableElevationOverlay\n        ) {\n            return TextureCoordinateType.TileSpace;\n        }\n\n        return textureCoordinateType(technique);\n    }\n\n    private getComputeTexCoordsFunc(technique: Technique): TexCoordsFunction | undefined {\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        return texCoordType === TextureCoordinateType.TileSpace\n            ? (tilePos: THREE.Vector2, tileExtents: number) => {\n                  const { x: u, y: v } = new THREE.Vector2()\n                      .copy(tilePos)\n                      .divideScalar(tileExtents);\n                  return { u, v: 1 - v };\n              }\n            : texCoordType === TextureCoordinateType.EquirectangularSpace\n            ? (tilePos: THREE.Vector2, extents: number) => {\n                  const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV2r);\n                  const { x: u, y: v } = normalizedEquirectangularProjection.reprojectPoint(\n                      webMercatorProjection,\n                      new THREE.Vector3(worldPos.x, worldPos.y, 0)\n                  );\n                  return { u, v };\n              }\n            : undefined;\n    }\n\n    private applyLineTechnique(\n        linesGeometry: LinesGeometry[],\n        technique: IndexedTechnique,\n        techniqueIndex: number,\n        lineType = LineType.Complex,\n        featureAttributes: AttributeMap,\n        lines: number[][],\n        context: AttrEvaluationContext,\n        uvs?: number[][],\n        offsets?: number[][]\n    ): void {\n        const renderOrderOffset = evaluateTechniqueAttr<number>(\n            context,\n            technique.renderOrderOffset,\n            0\n        );\n\n        let lineGroup: LineGroup;\n        const lineGroupGeometries = linesGeometry.find(aLine => {\n            return (\n                aLine.technique === techniqueIndex && aLine.renderOrderOffset === renderOrderOffset\n            );\n        });\n        const hasNormalsAndUvs = uvs !== undefined;\n        if (lineGroupGeometries === undefined) {\n            lineGroup = new LineGroup(hasNormalsAndUvs, undefined, lineType === LineType.Simple);\n            const aLine: LinesGeometry = {\n                type: lineType === LineType.Complex ? GeometryType.SolidLine : GeometryType.Line,\n                technique: techniqueIndex,\n                renderOrderOffset:\n                    renderOrderOffset !== undefined ? Number(renderOrderOffset) : undefined,\n                lines: lineGroup\n            };\n\n            const techniqueTransient = evaluateTechniqueAttr<boolean>(\n                context,\n                technique.transient,\n                false\n            );\n            if (!techniqueTransient && this.m_gatherFeatureAttributes) {\n                // if this technique is transient, do not save the featureIds with the geometry\n                aLine.objInfos = [featureAttributes];\n                aLine.featureStarts = [0];\n            }\n\n            linesGeometry.push(aLine);\n        } else {\n            lineGroup = lineGroupGeometries.lines;\n\n            if (\n                this.m_gatherFeatureAttributes &&\n                lineGroupGeometries.objInfos &&\n                lineGroupGeometries.featureStarts\n            ) {\n                // Add ID to tag the geometry, also provide the current length of the index\n                // attribute\n                lineGroupGeometries.objInfos.push(featureAttributes);\n                lineGroupGeometries.featureStarts.push(lineGroup.indices.length);\n            }\n        }\n        let i = 0;\n        lines.forEach(aLine => {\n            lineGroup.add(\n                this.m_decodeInfo.center,\n                aLine,\n                this.projection,\n                offsets ? offsets[i] : undefined,\n                uvs ? uvs[i] : undefined\n            );\n            i++;\n        });\n    }\n\n    private applyPolygonTechnique(\n        polygons: Ring[][],\n        technique: Technique,\n        techniqueIndex: number,\n        featureId: number | undefined,\n        context: AttrEvaluationContext,\n        extents: number\n    ): void {\n        const isExtruded = isExtrudedPolygonTechnique(technique);\n\n        const geometryType = isExtruded ? GeometryType.ExtrudedPolygon : GeometryType.Polygon;\n        const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, geometryType);\n\n        if (meshBuffers === undefined) {\n            return;\n        }\n\n        const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n        const fillTechnique = technique as FillTechnique;\n        const boundaryWalls = extrudedPolygonTechnique.boundaryWalls !== false;\n\n        const isFilled = isFillTechnique(technique);\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        let height = evaluateTechniqueAttr<number>(context, extrudedPolygonTechnique.height);\n\n        let floorHeight = evaluateTechniqueAttr<number>(\n            context,\n            extrudedPolygonTechnique.floorHeight\n        );\n\n        if (height === undefined) {\n            // Get the height values for the footprint and extrusion.\n            const featureHeight = context.env.lookup(\"height\") as number;\n            const styleSetDefaultHeight = evaluateTechniqueAttr<number>(\n                context,\n                extrudedPolygonTechnique.defaultHeight\n            );\n            height =\n                featureHeight !== undefined\n                    ? featureHeight\n                    : styleSetDefaultHeight !== undefined\n                    ? styleSetDefaultHeight\n                    : 0;\n        }\n\n        if (floorHeight === undefined) {\n            const featureMinHeight = context.env.lookup(\"min_height\") as number;\n            floorHeight = featureMinHeight !== undefined && !isFilled ? featureMinHeight : 0;\n        }\n\n        // Prevent that extruded buildings are completely flat (can introduce errors in normal\n        // computation and extrusion).\n        height = Math.max(floorHeight + ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT, height);\n\n        const styleSetConstantHeight = getOptionValue(\n            extrudedPolygonTechnique.constantHeight,\n            false\n        );\n\n        this.m_decodeInfo.tileBounds.getCenter(tempTileOrigin);\n\n        const {\n            positions,\n            normals,\n            textureCoordinates,\n            colors,\n            extrusionAxis,\n            indices,\n            edgeIndices,\n            groups\n        } = meshBuffers;\n\n        const featureStride = texCoordType !== undefined ? 4 : 2;\n        const vertexStride = featureStride + 2;\n        const isSpherical = this.m_decodeInfo.targetProjection.type === ProjectionType.Spherical;\n\n        const edgeWidth = isExtruded\n            ? extrudedPolygonTechnique.lineWidth || 0.0\n            : isFilled\n            ? fillTechnique.lineWidth || 0.0\n            : 0.0;\n        const hasEdges = edgeWidth > 0.0;\n\n        let color: THREE.Color | undefined;\n        if (isExtrudedPolygonTechnique(technique)) {\n            if (getOptionValue(technique.vertexColors, false)) {\n                let colorValue = evaluateTechniqueAttr<StyleColor>(context, technique.color);\n                if (colorValue === undefined) {\n                    const featureColor = context.env.lookup(\"color\");\n                    if (this.isColorStringValid(featureColor)) {\n                        colorValue = String(featureColor);\n                    }\n                }\n                if (colorValue === undefined) {\n                    colorValue = evaluateTechniqueAttr<number | string>(\n                        context,\n                        technique.defaultColor,\n                        0x000000\n                    );\n                }\n\n                if (colorValue === undefined) {\n                    colorValue = 0x000000;\n                }\n                tmpColor.set(colorValue as any);\n\n                color = tmpColor;\n            }\n        }\n\n        for (const polygon of polygons) {\n            const startIndexCount = indices.length;\n\n            for (let ringIndex = 0; ringIndex < polygon.length; ) {\n                const vertices: number[] = [];\n                const polygonBaseVertex = positions.length / 3;\n\n                const { contour, winding } = polygon[ringIndex++];\n                for (let i = 0; i < contour.length / featureStride; ++i) {\n                    // Invert the Y component to preserve the correct winding without transforming\n                    // from webMercator's local to global space.\n                    for (let j = 0; j < featureStride; ++j) {\n                        vertices.push((j === 1 ? -1 : 1) * contour[i * featureStride + j]);\n                    }\n\n                    // Calculate nextEdge and nextWall.\n                    const nextIdx = (i + 1) % (contour.length / featureStride);\n                    const currX = contour[i * featureStride];\n                    const currY = contour[i * featureStride + 1];\n                    const nextX = contour[nextIdx * featureStride];\n                    const nextY = contour[nextIdx * featureStride + 1];\n                    const insideExtents = !(\n                        (currX <= 0 && nextX <= 0) ||\n                        (currX >= extents && nextX >= extents) ||\n                        (currY <= 0 && nextY <= 0) ||\n                        (currY >= extents && nextY >= extents)\n                    );\n\n                    vertices.push(\n                        insideExtents ? nextIdx : -1,\n                        boundaryWalls || insideExtents ? nextIdx : -1\n                    );\n                }\n\n                // Iterate over the inner rings. The inner rings have the opposite winding\n                // of the outer rings.\n                const holes: number[] = [];\n                while (ringIndex < polygon.length && polygon[ringIndex].winding !== winding) {\n                    const vertexOffset = vertices.length / vertexStride;\n                    holes.push(vertexOffset);\n\n                    const hole = polygon[ringIndex++].contour;\n                    for (let i = 0; i < hole.length / featureStride; ++i) {\n                        // Invert the Y component to preserve the correct winding without\n                        // transforming from webMercator's local to global space.\n                        for (let j = 0; j < featureStride; ++j) {\n                            vertices.push((j === 1 ? -1 : 1) * hole[i * featureStride + j]);\n                        }\n\n                        // Calculate nextEdge and nextWall.\n                        const nextIdx = (i + 1) % (hole.length / featureStride);\n                        const currX = hole[i * featureStride];\n                        const currY = hole[i * featureStride + 1];\n                        const nextX = hole[nextIdx * featureStride];\n                        const nextY = hole[nextIdx * featureStride + 1];\n                        const insideExtents = !(\n                            (currX <= 0 && nextX <= 0) ||\n                            (currX >= extents && nextX >= extents) ||\n                            (currY <= 0 && nextY <= 0) ||\n                            (currY >= extents && nextY >= extents)\n                        );\n\n                        vertices.push(\n                            insideExtents ? vertexOffset + nextIdx : -1,\n                            boundaryWalls || insideExtents ? vertexOffset + nextIdx : -1\n                        );\n                    }\n                }\n\n                try {\n                    // Triangulate the footprint polyline.\n                    const triangles = earcut(vertices, holes, vertexStride);\n                    const originalVertexCount = vertices.length / vertexStride;\n\n                    // Subdivide for spherical projections if needed.\n                    if (isSpherical) {\n                        const geom = new THREE.BufferGeometry();\n\n                        const positionArray = [];\n                        const uvArray = [];\n                        const edgeArray = [];\n                        const wallArray = [];\n\n                        // Transform to global webMercator coordinates to be able to reproject to\n                        // sphere.\n                        for (let i = 0; i < vertices.length; i += vertexStride) {\n                            const worldPos = tile2world(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(vertices[i], vertices[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            positionArray.push(worldPos.x, worldPos.y, 0);\n                            if (texCoordType !== undefined) {\n                                uvArray.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            edgeArray.push(vertices[i + featureStride]);\n                            wallArray.push(vertices[i + featureStride + 1]);\n                        }\n\n                        // Create the temporary geometry used for subdivision.\n                        const posAttr = new THREE.BufferAttribute(\n                            new Float32Array(positionArray),\n                            3\n                        );\n                        geom.setAttribute(\"position\", posAttr);\n                        let uvAttr: THREE.BufferAttribute | undefined;\n                        if (texCoordType !== undefined) {\n                            uvAttr = new THREE.BufferAttribute(new Float32Array(uvArray), 2);\n                            geom.setAttribute(\"uv\", uvAttr);\n                        }\n                        const edgeAttr = new THREE.BufferAttribute(new Float32Array(edgeArray), 1);\n                        geom.setAttribute(\"edge\", edgeAttr);\n                        const wallAttr = new THREE.BufferAttribute(new Float32Array(wallArray), 1);\n                        geom.setAttribute(\"wall\", edgeAttr);\n                        const indexAttr = new THREE.BufferAttribute(new Uint32Array(triangles), 1);\n                        geom.setIndex(indexAttr);\n\n                        // FIXME(HARP-5700): Subdivision modifier ignores texture coordinates.\n                        const modifier = new SphericalGeometrySubdivisionModifier(\n                            THREE.Math.degToRad(10),\n                            webMercatorProjection\n                        );\n                        modifier.modify(geom);\n\n                        // Reassemble the vertex buffer, transforming the subdivided global\n                        // webMercator points back to local space.\n                        vertices.length = 0;\n                        triangles.length = 0;\n                        for (let i = 0; i < posAttr.array.length; i += 3) {\n                            const tilePos = world2tile(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(posAttr.array[i], posAttr.array[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            vertices.push(tilePos.x, tilePos.y);\n                            if (texCoordType !== undefined) {\n                                vertices.push(uvAttr!.array[(i / 3) * 2]);\n                                vertices.push(uvAttr!.array[(i / 3) * 2 + 1]);\n                            }\n                            vertices.push(edgeAttr.array[i / 3]);\n                            vertices.push(wallAttr.array[i / 3]);\n                        }\n\n                        const geomIndex = geom.getIndex();\n                        if (geomIndex !== null) {\n                            triangles.push(...(geomIndex.array as Float32Array));\n                        }\n                    }\n\n                    // Add the footprint/roof vertices to the position buffer.\n                    tempVertNormal.set(0, 0, 1);\n\n                    // Assemble the vertex buffer.\n                    for (let i = 0; i < vertices.length; i += vertexStride) {\n                        webMercatorTile2TargetTile(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV2.set(vertices[i], vertices[i + 1]),\n                            tmpV3,\n                            true\n                        );\n\n                        let scaleFactor = 1.0;\n                        if (isExtruded && styleSetConstantHeight !== true) {\n                            tempVertOrigin.set(\n                                tempTileOrigin.x + tmpV3.x,\n                                tempTileOrigin.y + tmpV3.y,\n                                tempTileOrigin.z + tmpV3.z\n                            );\n                            scaleFactor = this.m_decodeInfo.targetProjection.getScaleFactor(\n                                tempVertOrigin\n                            );\n                        }\n                        this.m_maxGeometryHeight = Math.max(\n                            this.m_maxGeometryHeight,\n                            scaleFactor * height\n                        );\n\n                        if (isSpherical) {\n                            tempVertNormal\n                                .set(tmpV3.x, tmpV3.y, tmpV3.z)\n                                .add(this.center)\n                                .normalize();\n                        }\n\n                        tempFootDisp.copy(tempVertNormal).multiplyScalar(floorHeight * scaleFactor);\n                        tempRoofDisp.copy(tempVertNormal).multiplyScalar(height * scaleFactor);\n                        positions.push(\n                            tmpV3.x + tempFootDisp.x,\n                            tmpV3.y + tempFootDisp.y,\n                            tmpV3.z + tempFootDisp.z\n                        );\n                        if (texCoordType !== undefined) {\n                            textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        if (this.m_enableElevationOverlay) {\n                            normals.push(...tempVertNormal.toArray());\n                        }\n                        if (isExtruded) {\n                            positions.push(\n                                tmpV3.x + tempRoofDisp.x,\n                                tmpV3.y + tempRoofDisp.y,\n                                tmpV3.z + tempRoofDisp.z\n                            );\n                            extrusionAxis.push(\n                                0.0,\n                                0.0,\n                                0.0,\n                                0.0,\n                                tempRoofDisp.x - tempFootDisp.x,\n                                tempRoofDisp.y - tempFootDisp.y,\n                                tempRoofDisp.z - tempFootDisp.z,\n                                1.0\n                            );\n                            if (texCoordType !== undefined) {\n                                textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            if (this.m_enableElevationOverlay) {\n                                normals.push(...tempVertNormal.toArray());\n                            }\n                            if (color !== undefined) {\n                                colors.push(color.r, color.g, color.b, color.r, color.g, color.b);\n                            }\n                        }\n                    }\n\n                    // Add the footprint/roof indices to the index buffer.\n                    for (let i = 0; i < triangles.length; i += 3) {\n                        if (isExtruded) {\n                            // When extruding we duplicate the vertices, so that all even vertices\n                            // belong to the bottom and all odd vertices belong to the top.\n                            const i0 = polygonBaseVertex + triangles[i + 0] * 2 + 1;\n                            const i1 = polygonBaseVertex + triangles[i + 1] * 2 + 1;\n                            const i2 = polygonBaseVertex + triangles[i + 2] * 2 + 1;\n                            indices.push(i0, i1, i2);\n                        } else {\n                            const i0 = polygonBaseVertex + triangles[i + 0];\n                            const i1 = polygonBaseVertex + triangles[i + 1];\n                            const i2 = polygonBaseVertex + triangles[i + 2];\n                            indices.push(i0, i1, i2);\n                        }\n                    }\n\n                    // Assemble the index buffer for edges (follow vertices as linked list).\n                    if (hasEdges) {\n                        this.addEdges(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            positions,\n                            vertices,\n                            edgeIndices,\n                            isExtruded,\n                            extrudedPolygonTechnique.footprint,\n                            extrudedPolygonTechnique.maxSlope\n                        );\n                    }\n                    if (isExtruded) {\n                        this.addWalls(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            vertices,\n                            indices\n                        );\n                    }\n                } catch (err) {\n                    logger.error(`cannot triangulate geometry`, err);\n                }\n            }\n\n            if (this.m_gatherFeatureAttributes) {\n                meshBuffers.objInfos.push(context.env.entries);\n                meshBuffers.featureStarts.push(startIndexCount);\n            }\n\n            const count = indices.length - startIndexCount;\n            if (count > 0) {\n                groups.push({\n                    start: startIndexCount,\n                    count,\n                    technique: techniqueIndex,\n                    featureId\n                });\n            }\n        }\n    }\n\n    private createGeometries() {\n        this.m_meshBuffers.forEach((meshBuffers, techniqueIdx) => {\n            if (meshBuffers.positions.length === 0) {\n                return;\n            } // nothing to do\n\n            if (\n                !this.m_styleSetEvaluator.techniques ||\n                this.m_styleSetEvaluator.techniques.length <= techniqueIdx\n            ) {\n                throw new Error(\"Invalid technique index\");\n            }\n\n            const technique = this.m_styleSetEvaluator.techniques[techniqueIdx];\n            if (technique === undefined) {\n                return;\n            }\n\n            const positionElements = new Float32Array(meshBuffers.positions);\n\n            if (meshBuffers.texts.length > 0 && isTextTechnique(technique)) {\n                this.m_textGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.texts.length > 0 && isPoiTechnique(technique)) {\n                this.m_poiGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    imageTextures: meshBuffers.imageTextures,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.groups.length === 0) {\n                // create a default group containing all the vertices in the position attribute.\n\n                meshBuffers.groups.push({\n                    start: 0,\n                    count: positionElements.length / 3,\n                    technique: techniqueIdx\n                });\n            }\n\n            const geometry: Geometry = {\n                type: meshBuffers.type,\n                vertexAttributes: [\n                    {\n                        name: \"position\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3,\n                        type: \"float\"\n                    }\n                ],\n                groups: meshBuffers.groups\n            };\n\n            if (meshBuffers.normals.length > 0) {\n                const normals = new Float32Array(meshBuffers.normals);\n                assert(\n                    normals.length === positionElements.length,\n                    \"length of normals buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                geometry.vertexAttributes.push({\n                    name: \"normal\",\n                    buffer: normals.buffer as ArrayBuffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.colors.length > 0) {\n                const colors = new Float32Array(meshBuffers.colors);\n                assert(\n                    colors.length === positionElements.length,\n                    \"length of colors buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                geometry.vertexAttributes.push({\n                    name: \"color\",\n                    buffer: colors.buffer as ArrayBuffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.textureCoordinates.length > 0) {\n                const positionCount = meshBuffers.positions.length / 3;\n                const texCoordCount = meshBuffers.textureCoordinates.length / 2;\n                assert(\n                    texCoordCount === positionCount,\n                    \"length of textureCoordinates buffer is different than the length of the\" +\n                        \"position buffer\"\n                );\n\n                const textureCoordinates = new Float32Array(meshBuffers.textureCoordinates);\n                geometry.vertexAttributes.push({\n                    name: \"uv\",\n                    buffer: textureCoordinates.buffer as ArrayBuffer,\n                    itemCount: 2,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.extrusionAxis.length > 0) {\n                const extrusionAxis = new Float32Array(meshBuffers.extrusionAxis);\n                assert(\n                    extrusionAxis.length / 4 === positionElements.length / 3,\n                    \"length of extrusionAxis buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                geometry.vertexAttributes.push({\n                    name: \"extrusionAxis\",\n                    buffer: extrusionAxis.buffer as ArrayBuffer,\n                    itemCount: 4,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.indices.length > 0) {\n                // TODO: use uint16 for buffers when possible\n                geometry.index = {\n                    name: \"index\",\n                    buffer: new Uint32Array(meshBuffers.indices).buffer as ArrayBuffer,\n                    itemCount: 1,\n                    type: \"uint32\"\n                };\n            }\n\n            if (meshBuffers.edgeIndices.length > 0) {\n                // TODO: use uint16 for buffers when possible. Issue HARP-3987\n                geometry.edgeIndex = {\n                    name: \"edgeIndex\",\n                    buffer: new Uint32Array(meshBuffers.edgeIndices as number[])\n                        .buffer as ArrayBuffer,\n                    itemCount: 1,\n                    type: \"uint32\"\n                };\n            }\n\n            geometry.featureStarts = meshBuffers.featureStarts;\n            geometry.objInfos = meshBuffers.objInfos;\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const renderOrderOffset = linesGeometry.renderOrderOffset;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = new Uint32Array(indices).buffer as ArrayBuffer;\n            const attr: InterleavedBufferAttribute = {\n                type: \"float\",\n                stride: linesGeometry.lines.stride,\n                buffer,\n                attributes: linesGeometry.lines.vertexAttributes\n            };\n            const geometry: Geometry = {\n                type: GeometryType.SolidLine,\n                index: {\n                    buffer: index,\n                    itemCount: 1,\n                    type: \"uint32\",\n                    name: \"index\"\n                },\n                interleavedVertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique, renderOrderOffset }],\n                vertexAttributes: [],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processSimpleLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const renderOrderOffset = linesGeometry.renderOrderOffset;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = new Uint32Array(indices).buffer as ArrayBuffer;\n            const attr: BufferAttribute = {\n                buffer,\n                itemCount: 3,\n                type: \"float\",\n                name: \"position\"\n            };\n            const geometry: Geometry = {\n                type: GeometryType.Line,\n                index: {\n                    buffer: index,\n                    itemCount: 1,\n                    type: \"uint32\",\n                    name: \"index\"\n                },\n                vertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique, renderOrderOffset }],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private findOrCreateMeshBuffers(index: number, type: GeometryType): MeshBuffers | undefined {\n        let buffers = this.m_meshBuffers.get(index);\n\n        if (buffers !== undefined) {\n            if (buffers.type !== type) {\n                logger.error(`MeshBuffer has been created with wrong type \"${GeometryType[type]}\"\n                instead of \"${GeometryType[buffers.type]}\"`);\n                return undefined;\n            }\n            return buffers;\n        }\n        buffers = new MeshBuffers(type);\n        this.m_meshBuffers.set(index, buffers);\n        return buffers;\n    }\n\n    private processFeatureCommon(env: Env) {\n        const source = env.lookup(\"source\");\n        if (typeof source === \"string\" && source !== \"\") {\n            if (!this.m_sources.includes(source)) {\n                this.m_sources.push(source);\n            }\n        }\n    }\n\n    private isColorStringValid(color: Value | undefined): color is string {\n        return typeof color === \"string\" && color.length > 0;\n    }\n\n    private addEdges(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        positions: number[],\n        vertices: number[],\n        indices: number[],\n        isExtruded: boolean,\n        hasFootprint?: boolean,\n        maxSlope?: number\n    ) {\n        const tmpEdgeA = new THREE.Vector3();\n        const tmpEdgeB = new THREE.Vector3();\n        let firstRingVertex: number | undefined;\n        let prevRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    if (!isExtruded) {\n                        indices.push(\n                            featureBaseVertex + currRingVertex,\n                            featureBaseVertex + nextRingVertex\n                        );\n                    } else {\n                        if (hasFootprint === true) {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + nextRingVertex * 2\n                            );\n                        }\n                        indices.push(\n                            featureBaseVertex + currRingVertex * 2 + 1,\n                            featureBaseVertex + nextRingVertex * 2 + 1\n                        );\n\n                        if (maxSlope !== undefined) {\n                            if (prevRingVertex !== undefined) {\n                                const prevPos = (featureBaseVertex + prevRingVertex * 2) * 3;\n                                const currPos = (featureBaseVertex + currRingVertex * 2) * 3;\n                                const nextPos = (featureBaseVertex + nextRingVertex * 2) * 3;\n                                tmpEdgeA\n                                    .set(\n                                        positions[currPos] - positions[prevPos],\n                                        positions[currPos + 1] - positions[prevPos + 1],\n                                        positions[currPos + 2] - positions[prevPos + 2]\n                                    )\n                                    .normalize();\n                                tmpEdgeB\n                                    .set(\n                                        positions[nextPos] - positions[currPos],\n                                        positions[nextPos + 1] - positions[currPos + 1],\n                                        positions[nextPos + 2] - positions[currPos + 2]\n                                    )\n                                    .normalize();\n                                if (tmpEdgeA.dot(tmpEdgeB) <= maxSlope) {\n                                    indices.push(\n                                        featureBaseVertex + currRingVertex * 2,\n                                        featureBaseVertex + currRingVertex * 2 + 1\n                                    );\n                                }\n                            }\n                        } else {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + currRingVertex * 2 + 1\n                            );\n                        }\n                    }\n                    prevRingVertex = currRingVertex;\n                    currRingVertex = nextRingVertex;\n                }\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n            prevRingVertex = undefined;\n        }\n    }\n\n    private addWalls(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        vertices: number[],\n        indices: number[]\n    ) {\n        let firstRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride + 1];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    indices.push(\n                        featureBaseVertex + currRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2\n                    );\n                }\n                currRingVertex = nextRingVertex;\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n        }\n    }\n\n    private findRelativePositionInLine(p: THREE.Vector3, line: number[]): number {\n        let lineDist = Infinity;\n        let lineOffset = 0;\n        for (let i = 0; i < line.length; i += 4) {\n            // Find the closest point C in segment AB to point P.\n            tmpLine.set(\n                tmpPointA.set(line[i], line[i + 1], line[i + 2]),\n                tmpPointB.set(line[i + 4], line[i + 5], line[i + 6])\n            );\n            tmpLine.closestPointToPoint(p, true, tmpPointC);\n\n            // If P is in AB (or really close), save A as anchor point and C (to estimate distance\n            // from segment origin).\n            const dist = tmpPointC.distanceTo(p);\n            if (dist < lineDist) {\n                tmpPointD.copy(tmpPointC);\n                tmpPointE.copy(tmpPointA);\n                lineDist = dist;\n                lineOffset = line[i + 3];\n            }\n        }\n        // Return the relative position of P inside the line.\n        return lineOffset + tmpPointD.distanceTo(tmpPointE);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        { name: \"bitangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        { name: \"bitangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center Center of the polyline.\n * @param polyline Array of `numbers` describing a polyline.\n * @param offsets Array of `numbers` representing line segment offsets.\n * @param uvs Array of `numbers` representing texture coordinates.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    projection: Projection,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpNormal.add(center); // tmpNormal contains world position\n        projection.surfaceNormal(tmpNormal, tmpNormal);\n        const angle = computeBitangent(\n            tmpNormal,\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline Array of `numbers` describing a polyline.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices Array of vertex attributes.\n     * @param colors Array of vertex colors.\n     * @param indices Array of vertex indices.\n     * @param geometry [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision If `true` will create high-precision vertex information.\n     * @param isSimple `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center World center of the provided points.\n     * @param points Sequence of (x,y,z) coordinates.\n     * @param offsets Sequence of line segment offsets.\n     * @param uvs Sequence of (u,v) texture coordinates.\n     * @param colors Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        projection: Projection,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                projection,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0)\n        .add(t1)\n        .normalize()\n        .cross(n)\n        .normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x The line end X (used as circle center X)\n * @param y The line end Y (used as circle center Y)\n * @param lineAngle The cap incline angle\n * @param radius The cap (circle) radius\n * @param vertices The input vertex buffer (cap vertices are added there)\n * @param indices The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth Width of line.\n */\n// tslint:disable-next-line:no-unused-variable\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points Sequence of (x,y,z) coordinates.\n * @param width The width of the extruded line.\n * @param vertices The output vertex buffer.\n * @param indices The output index buffer.\n * @param startWithCircle `true` if the line should start will a circle.\n * @param endWithCircle `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n)\n                .sub(p)\n                .normalize()\n                .cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(-inclineWidth)\n                        .add(p);\n\n                    p1.copy(prevBt)\n                        .multiplyScalar(width)\n                        .add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(inclineWidth)\n                        .add(p);\n\n                    p3.copy(bt)\n                        .multiplyScalar(width)\n                        .add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt)\n                    .multiplyScalar(-width)\n                    .add(p);\n\n                p1.copy(averageBt)\n                    .multiplyScalar(width)\n                    .add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt)\n                .multiplyScalar(-width)\n                .add(p);\n\n            p1.copy(prevBt)\n                .multiplyScalar(width)\n                .add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer Buffer with vertices.\n * @param startOffset Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer Array of vertex elements of a triangulated line.\n * @param startIndex Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle The maximum angle in radians between two vertices and the origin.\n     * @param projection The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array = new Float32Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a The position of the first vertex of the triangle.\n     * @param b The position of the second vertex of the triangle.\n     * @param c The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.01;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\nconst tmpBA = new Vector2();\nconst tmpQP = new Vector2();\nconst tmpA = new Vector2();\nconst tmpB = new Vector2();\n\n/**\n * Clip the given polygon using the Sutherland-Hodgman algorithm.\n */\nexport function clipPolygon(polygon: Vector2[], clip: Vector2[]): Vector2[] {\n    if (polygon.length === 0) {\n        return polygon;\n    }\n    if (!polygon[0].equals(polygon[polygon.length - 1])) {\n        // close the polygon if needed.\n        polygon = [...polygon, polygon[0]];\n    }\n    let outputList = polygon;\n    for (let e = 0; e < clip.length; ++e) {\n        const p = clip[e];\n        const q = clip[(e + 1) % clip.length];\n        const inputList = outputList;\n        outputList = [];\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = inputList[(i + inputList.length - 1) % inputList.length];\n            if (inside(currentPoint, p, q)) {\n                if (!inside(prevPoint, p, q)) {\n                    outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n                }\n                outputList.push(currentPoint);\n            } else if (inside(prevPoint, p, q)) {\n                outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n            }\n        }\n    }\n    return outputList;\n}\n\nfunction computeIntersection(\n    a: Vector2,\n    b: Vector2,\n    p: Vector2,\n    q: Vector2,\n    result = new Vector2()\n): Vector2 {\n    tmpBA.subVectors(b, a);\n    tmpQP.subVectors(q, p);\n    const c1 = a.cross(tmpBA);\n    const c2 = p.cross(tmpQP);\n    const D = tmpBA.cross(tmpQP);\n    const x = (tmpBA.x * c2 - tmpQP.x * c1) / D;\n    const y = (tmpBA.y * c2 - tmpQP.y * c1) / D;\n    return result.set(x, y).round();\n}\n\nfunction inside(point: Vector2, p: Vector2, q: Vector2) {\n    tmpA.subVectors(q, p);\n    tmpB.subVectors(point, p);\n    return tmpA.cross(tmpB) > 0;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    ExtendedTileInfo,\n    ExtendedTileInfoWriter,\n    FeatureGroupType,\n    IndexedTechnique\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport * as THREE from \"three\";\n\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { IOmvEmitter, OmvDecoder, Ring } from \"./OmvDecoder\";\nimport { webMercatorTile2TargetTile } from \"./OmvUtils\";\n\nexport class OmvTileInfoEmitter implements IOmvEmitter {\n    private readonly m_tileInfo: ExtendedTileInfo;\n    private readonly m_tileInfoWriter: ExtendedTileInfoWriter;\n\n    /**\n     * Create OmvTileInfoEmitter object\n     *\n     * @param m_decodeInfo\n     * @param m_styleSetEvaluator\n     * @param m_storeExtendedTags\n     * @param m_gatherRoadSegments\n     */\n    constructor(\n        private readonly m_decodeInfo: OmvDecoder.DecodeInfo,\n        // tslint:disable-next-line:no-unused-variable\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_storeExtendedTags: boolean,\n        private readonly m_gatherRoadSegments: boolean,\n        private readonly m_languages?: string[]\n    ) {\n        this.m_tileInfo = new ExtendedTileInfo(m_decodeInfo.tileKey, this.m_storeExtendedTags);\n        this.m_tileInfoWriter = new ExtendedTileInfoWriter(\n            this.m_tileInfo,\n            this.m_storeExtendedTags\n        );\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const tileInfoWriter = this.m_tileInfoWriter;\n        const tmpV = new THREE.Vector3();\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            for (const pos of geometry) {\n                webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                tileInfoWriter.addFeature(\n                    this.m_tileInfo.pointGroup,\n                    context.env,\n                    featureId,\n                    featureText,\n                    infoTileTechniqueIndex,\n                    FeatureGroupType.Point\n                );\n                tileInfoWriter.addFeaturePoint(this.m_tileInfo.pointGroup, tmpV.x, tmpV.y);\n            }\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const tileInfoWriter = this.m_tileInfoWriter;\n        const env = context.env;\n\n        const tmpV = new THREE.Vector3();\n\n        const lines: number[][] = [];\n\n        for (const polyline of geometry) {\n            const line: number[] = [];\n            for (const pos of polyline.positions) {\n                webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                line.push(tmpV.x, tmpV.y);\n            }\n            lines.push(line);\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            for (const aLine of lines) {\n                tileInfoWriter.addFeature(\n                    this.m_tileInfo.lineGroup,\n                    env,\n                    featureId,\n                    featureText,\n                    infoTileTechniqueIndex,\n                    FeatureGroupType.Line\n                );\n\n                tileInfoWriter.addFeaturePoints(this.m_tileInfo.lineGroup, aLine);\n            }\n        }\n\n        if (this.m_gatherRoadSegments) {\n            const segmentId = env.lookup(\"segmentId\") as number;\n            if (segmentId !== undefined) {\n                const startOffset = env.lookup(\"startOffset\");\n                const endOffset = env.lookup(\"endOffset\");\n                tileInfoWriter.addRoadSegments(\n                    this.m_tileInfo.lineGroup,\n                    segmentId,\n                    startOffset !== undefined ? (startOffset as number) : 0,\n                    endOffset !== undefined ? (endOffset as number) : 1\n                );\n            }\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        if (techniques.length === 0) {\n            throw new Error(\n                \"OmvTileInfoEmitter#processPolygonFeature: Internal error - No technique index\"\n            );\n        }\n\n        const tileInfoWriter = this.m_tileInfoWriter;\n\n        const tmpV = new THREE.Vector3();\n\n        const polygons: Ring[][] = [];\n\n        for (const polygon of geometry) {\n            const rings: Ring[] = [];\n            for (const outline of polygon.rings) {\n                const contour: number[] = [];\n                for (const pos of outline) {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                    contour.push(tmpV.x, tmpV.y, tmpV.z);\n                }\n                rings.push(new Ring(extents, 3, contour));\n            }\n            polygons.push(rings);\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            tileInfoWriter.addFeature(\n                this.m_tileInfo.polygonGroup,\n                context.env,\n                featureId,\n                featureText,\n                infoTileTechniqueIndex,\n                FeatureGroupType.Polygon\n            );\n        }\n\n        for (const rings of polygons) {\n            // rings are shared between techniques\n            if (rings.length === 0) {\n                continue;\n            }\n            const outerRingWinding = rings[0].winding;\n            for (const aRing of rings) {\n                tileInfoWriter.addRingPoints(\n                    this.m_tileInfo.polygonGroup,\n                    aRing.contour,\n                    aRing.winding === outerRingWinding\n                );\n            }\n        }\n    }\n\n    getTileInfo(): ExtendedTileInfo {\n        this.m_tileInfoWriter.finish();\n        return this.m_tileInfo;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { OmvGenericFeatureModifier } from \"./OmvDataFilter\";\nimport { OmvFeatureFilterDescription, OmvFilterDescription } from \"./OmvDecoderDefs\";\n\nconst logger = LoggerManager.instance.create(\"OmvTomTomFeatureModifier\");\n\nconst DEFAULT_BUILDING_COLOR = \"#AAAAAA\";\nconst DEFAULT_DO_EXTRUDE_BUILDINGS = \"true\";\nconst DEFAULT_BUILDING_MIN_HEIGHT = \"2\";\nconst DEFAULT_BUILDING_HEIGHT = \"20\";\n\n/**\n * Modifies the MapEnv of the TomTom Vector Tiles to be similar to the OMV format, so that the same\n * theme files can be used.\n */\nexport class OmvTomTomFeatureModifier extends OmvGenericFeatureModifier {\n    constructor(description: OmvFeatureFilterDescription) {\n        super(description);\n    }\n\n    /** @override */\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        this.rewriteEnvironment(layer, env);\n        return super.doProcessFeature(itemsToProcess, itemsToIgnore, layer, env, defaultResult);\n    }\n\n    /**\n     * Rewrites the Environment to match the environment naming used in OMV.\n     *\n     * Does not cover roadlabels, as the roadlabels in the Tomtom format are delivered in a\n     * different format combined in the environment with the road line geometry, which is\n     * represented as two separate environment in the default format.\n     *\n     * @param layer\n     * @param env\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // Rewriting landuse layers\n        if (this.isWood(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"wood\");\n        } else if (this.isHospital(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"hospital\");\n        } else if (this.isCemetery(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"cemetery\");\n        } else if (this.isIndustrial(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"industrial\");\n        } else if (this.isPark(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"park\");\n        } else if (this.isBuiltup(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"builtup\");\n            // Rewriting the water layer\n        } else if (this.isWater(layer)) {\n            this.updateEnvironment(env, \"water\");\n            // Rewriting the road label layer\n        } else if (this.isRoadLabel(layer)) {\n            this.updateEnvironment(env, \"road_label\");\n            // Rewriting road layers with category classes\n        } else if (this.isRoadPath(layer)) {\n            this.updateEnvironment(env, \"road\", \"path\");\n        } else if (this.isRoadStreet(layer)) {\n            this.updateEnvironment(env, \"road\", \"street\");\n        } else if (this.isRoadPrimary(layer)) {\n            this.updateEnvironment(env, \"road\", \"primary\");\n        } else if (this.isRoadSecondary(layer)) {\n            this.updateEnvironment(env, \"road\", \"secondary\");\n        } else if (this.isRailway(layer)) {\n            this.updateEnvironment(env, \"road\", \"major_rail\");\n        } else if (this.isFerry(layer)) {\n            this.updateEnvironment(env, \"road\", \"ferry\");\n            // Rewriting aeroway layer\n        } else if (this.isAeroway(layer)) {\n            this.updateEnvironment(env, \"aeroway\");\n            // Rewriting border layer\n        } else if (this.isBorder(layer)) {\n            this.updateEnvironment(env, \"admin\");\n            // Rewriting label layers\n        } else if (this.isCountryLabel(layer)) {\n            this.updateEnvironment(env, \"country_label\");\n        } else if (this.isCountyLabel(layer)) {\n            this.updateEnvironment(env, \"county_label\");\n        } else if (this.isRegionLabel(layer)) {\n            this.updateEnvironment(env, \"region_label\");\n        } else if (this.isStateLabel(layer)) {\n            this.updateEnvironment(env, \"state_label\");\n        } else if (this.isPlaceLabel(layer)) {\n            this.updateEnvironment(env, \"place_label\");\n        } else if (this.isWaterLabel(layer)) {\n            this.updateEnvironment(env, \"water_label\");\n        } else if (this.isMarineLabel(layer)) {\n            this.updateEnvironment(env, \"marine_label\");\n        } else if (this.isPoiLabel(layer)) {\n            this.updateEnvironment(env, \"poi_label\");\n            // Rewriting building layer\n        } else if (this.isBuilding(layer)) {\n            this.updateEnvironment(env, \"building\");\n            env.entries.color = DEFAULT_BUILDING_COLOR;\n            env.entries.extrude = DEFAULT_DO_EXTRUDE_BUILDINGS;\n            env.entries.min_height = DEFAULT_BUILDING_MIN_HEIGHT;\n            env.entries.height = DEFAULT_BUILDING_HEIGHT;\n        } else {\n            logger.info(`Not yet rewritten layer: ##${env.entries.$layer}## `);\n        }\n\n        // Add tunnel structure if its a tunnel\n        if (this.isTunnel(layer)) {\n            env.entries.structure = \"tunnel\";\n        }\n\n        //Add bridge structure if its a bridge\n        if (this.isBridge(layer)) {\n            env.entries.structure = \"bridge\";\n        }\n    }\n\n    private updateEnvironment(\n        env: MapEnv,\n        layer: string,\n        newClass?: string,\n        structure?: string\n    ): void {\n        env.entries.$layer = layer;\n        if (newClass !== undefined) {\n            env.entries.class = newClass;\n        }\n        if (structure !== undefined) {\n            env.entries.structure = structure;\n        }\n    }\n\n    private isWood(layer: string): boolean {\n        return layer === \"Woodland\" || layer === \"Moor or heathland\";\n    }\n\n    private isHospital(layer: string): boolean {\n        return layer === \"Hospital\";\n    }\n\n    private isCemetery(layer: string): boolean {\n        return layer === \"Cemetery\";\n    }\n\n    private isIndustrial(layer: string): boolean {\n        return layer.indexOf(\"Industrial\") >= 0 || layer === \"Airport\";\n    }\n\n    private isPark(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"City park\" ||\n            layer === \"National park\" ||\n            layer === \"Regional park\" ||\n            layer.indexOf(\"grass\") >= 0 ||\n            layer.indexOf(\"greens\") >= 0\n        );\n    }\n\n    private isBuiltup(layer: string): boolean {\n        return (\n            layer === \"Built-up area\" ||\n            layer === \"Town paved area\" ||\n            layer === \"Shopping\" ||\n            layer === \"University\" ||\n            layer === \"Stadium\" ||\n            layer.indexOf(\"ground\") > 0\n        );\n    }\n\n    private isWater(layer: string): boolean {\n        return (\n            layer === \"Other water\" ||\n            layer === \"Ocean or sea\" ||\n            layer === \"Ocean\" ||\n            layer === \"Lake\" ||\n            layer === \"Sea\" ||\n            layer === \"Town swimming pool\" ||\n            layer === \"River\"\n        );\n    }\n\n    private isRoadLabel(layer: string): boolean {\n        return layer.indexOf(\"road label\") >= 0;\n    }\n\n    private isRoadPath(layer: string): boolean {\n        return (\n            layer.indexOf(\"path\") > 0 ||\n            layer === \"Parking road\" ||\n            layer === \"Town walkway\" ||\n            layer === \"Pedestrian road\" ||\n            layer === \"Walkway road\" ||\n            layer === \"Town carriageway divider\" ||\n            layer === \"Runway\" ||\n            layer === \"Non public road\"\n        );\n    }\n\n    private isRoadStreet(layer: string): boolean {\n        return (\n            layer.indexOf(\"Minor local road\") >= 0 ||\n            layer.indexOf(\"minor local road\") >= 0 ||\n            layer.indexOf(\"Toll local road\") >= 0 ||\n            layer.indexOf(\"Local road\") >= 0\n        );\n    }\n    private isRoadPrimary(layer: string): boolean {\n        return (\n            layer.indexOf(\"Major local road\") >= 0 ||\n            layer.indexOf(\"Major road\") >= 0 ||\n            layer.indexOf(\"major road\") >= 0 ||\n            layer.indexOf(\"Motorway\") >= 0 ||\n            layer.indexOf(\"motorway\") >= 0 ||\n            layer.indexOf(\"International road\") >= 0 ||\n            layer.indexOf(\"international road\") >= 0\n        );\n    }\n\n    private isRoadSecondary(layer: string): boolean {\n        return (\n            layer.indexOf(\"connecting road\") >= 0 ||\n            layer.indexOf(\"Connecting road\") >= 0 ||\n            layer.indexOf(\"secondary road\") >= 0 ||\n            layer.indexOf(\"Secondary road\") >= 0\n        );\n    }\n\n    private isRailway(layer: string): boolean {\n        return layer === \"Railway\";\n    }\n\n    private isFerry(layer: string): boolean {\n        return layer === \"Ferry road\";\n    }\n\n    private isBorder(layer: string): boolean {\n        return layer.indexOf(\"border\") > 0;\n    }\n\n    private isCountryLabel(layer: string): boolean {\n        return layer === \"Country name\" || layer === \"Country label\";\n    }\n\n    private isStateLabel(layer: string): boolean {\n        return layer === \"City\" || layer.indexOf(\"city\") > 0;\n    }\n\n    private isRegionLabel(layer: string): boolean {\n        return layer === \"Town\";\n    }\n\n    private isCountyLabel(layer: string): boolean {\n        return layer === \"Village\";\n    }\n\n    private isPlaceLabel(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"Railway station\" ||\n            layer === \"Airport POI\" ||\n            layer === \"Town greens\"\n        );\n    }\n\n    private isWaterLabel(layer: string): boolean {\n        return (\n            layer === \"Ocean name\" || layer === \"River label\" || layer.indexOf(\"water label\") > 0\n        );\n    }\n\n    private isMarineLabel(layer: string): boolean {\n        return layer.indexOf(\"water label\") > 0;\n    }\n\n    private isPoiLabel(layer: string): boolean {\n        return (\n            layer === \"National park name\" ||\n            layer === \"Landmark label\" ||\n            layer.indexOf(\"label\") >= 0\n        );\n    }\n\n    private isAeroway(layer: string): boolean {\n        return layer === \"Airport\";\n    }\n\n    private isBuilding(layer: string): boolean {\n        return layer.indexOf(\"building\") >= 0;\n    }\n\n    private isTunnel(layer: string): boolean {\n        return layer.indexOf(\"tunnel\") >= 0;\n    }\n\n    private isBridge(layer: string): boolean {\n        return layer.indexOf(\"bridge\") >= 0;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\n\n/**\n * An [[OmvFeatureFilter]] implementation that queries [[StyleSetEvaluator]]\n * if given layers/features should be processed.\n *\n * Used in [[OmvDecoder]] to skip processing of layers/features that doesn't\n * have associated rules in style.\n *\n * @see [[StyleSetEvaluator.wantsFeature]]\n * @see [[StyleSetEvaluator.wantsLayer]]\n */\nexport class StyleSetDataFilter implements OmvFeatureFilter {\n    hasKindFilter: boolean = false;\n\n    constructor(readonly styleSetEvaluator: StyleSetEvaluator) {}\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.styleSetEvaluator.wantsLayer(layer);\n    }\n\n    wantsPointFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"point\");\n    }\n    wantsLineFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"line\");\n    }\n    wantsPolygonFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"polygon\");\n    }\n    wantsKind(): boolean {\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TilerService, WorkerServiceManager } from \"@here/harp-mapview-decoder/index-worker\";\nimport { OMV_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTilerService {\n    /**\n     * Register[[OmvTiler]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILER_SERVICE_TYPE,\n            factory: (serviceId: string) => TilerService.start(serviceId)\n        });\n    }\n}\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n"],"sourceRoot":""}